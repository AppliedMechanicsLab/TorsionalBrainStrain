(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    520342,      10604]
NotebookOptionsPosition[    509985,      10425]
NotebookOutlinePosition[    510411,      10442]
CellTagsIndexPosition[    510368,      10439]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{"<<", "Notation`"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Symbolize", "[", 
   TemplateBox[{
     SubscriptBox["x_", "y_"]},
    "NotationTemplateTag"], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Symbolize", "[", 
   TemplateBox[{
     OverscriptBox["x_", "^"]},
    "NotationTemplateTag"], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Symbolize", "[", 
   TemplateBox[{
     SubscriptBox[
      OverscriptBox["x_", "^"], "y_"]},
    "NotationTemplateTag"], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Symbolize", "/@", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       SuperscriptBox["\[CapitalOmega]", "\[DoublePrime]"]},
      "NotationTemplateTag"], ",", 
     TemplateBox[{
       SuperscriptBox[
        OverscriptBox["\[CapitalOmega]", "^"], "\[DoublePrime]"]},
      "NotationTemplateTag"], ",", 
     TemplateBox[{
       SuperscriptBox[
        OverscriptBox["\[CapitalOmega]", "~"], "\[DoublePrime]"]},
      "NotationTemplateTag"]}], "}"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.855789320529159*^9, 3.855789350616221*^9}, {
   3.855789823946525*^9, 3.8557898893613453`*^9}, {3.855790594810322*^9, 
   3.855790596073091*^9}, {3.8557906472319508`*^9, 3.855790659415297*^9}, {
   3.8557907024151983`*^9, 3.855790719379074*^9}, {3.855790851974716*^9, 
   3.8557908811921473`*^9}, {3.855823149162943*^9, 3.8558231780181227`*^9}, {
   3.855824360450141*^9, 3.855824377434461*^9}, {3.8558292037316923`*^9, 
   3.85582920896693*^9}, {3.855829367024128*^9, 3.855829371325927*^9}, {
   3.855830096896105*^9, 3.8558300994145613`*^9}, {3.855830497987707*^9, 
   3.855830504863016*^9}, {3.855830652823062*^9, 3.855830679577476*^9}, 
   3.855831171089427*^9, {3.855831350889756*^9, 3.85583137204597*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"f4ae406a-81df-4938-89c4-ea9e72be801f"],

Cell[CellGroupData[{

Cell["Global variables", "Subsection",
 CellChangeTimes->{{3.8558243797418957`*^9, 
  3.855824385738566*^9}},ExpressionUUID->"ce87a0c7-28b6-4f02-9a41-\
f0f660e5ae38"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Unprotect", "[", 
   RowBox[{"\[Mu]", ",", 
    SubscriptBox["\[Rho]", "0"], ",", 
    SubscriptBox["R", "0"], ",", 
    SubscriptBox["r", "0"], ",", "\[Epsilon]", ",", 
    SubscriptBox["c", "s"], ",", 
    SubscriptBox["\[Tau]", "c"]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"\[Mu]", ",", 
    SubscriptBox["\[Rho]", "0"], ",", 
    SubscriptBox["R", "0"], ",", 
    SubscriptBox["r", "0"], ",", "\[Epsilon]", ",", 
    SubscriptBox["c", "s"], ",", 
    SubscriptBox["\[Tau]", "c"]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Mu]", "=", "34000"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Shear", " ", "modulus"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["\[Rho]", "0"], "=", "1040"}], ";"}], " ", 
  RowBox[{"(*", " ", "Density", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["R", "0"], "=", "0.0652543"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Radius", " ", "of", " ", "the", " ", "skull"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["c", "s"], "=", 
    RowBox[{"Sqrt", "[", 
     FractionBox["\[Mu]", 
      SubscriptBox["\[Rho]", "0"]], "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Shear", " ", "speed"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["\[Tau]", "c"], " ", "=", " ", 
    RowBox[{
     SubscriptBox["R", "0"], "/", 
     SubscriptBox["c", "s"]}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Characteristic", " ", "time", " ", "constant"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Epsilon]", "=", 
    SuperscriptBox["10", 
     RowBox[{"-", "6"}]]}], ";"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"Trucation", " ", "threshold"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Protect", "[", 
   RowBox[{"\[Mu]", ",", 
    SubscriptBox["\[Rho]", "0"], ",", 
    SubscriptBox["R", "0"], ",", 
    SubscriptBox["r", "0"], ",", "\[Epsilon]", ",", 
    SubscriptBox["c", "s"], ",", 
    SubscriptBox["\[Tau]", "c"]}], "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.855789320529159*^9, 3.855789350616221*^9}, {
   3.855789823946525*^9, 3.8557898893613453`*^9}, {3.855790594810322*^9, 
   3.855790596073091*^9}, {3.8557906472319508`*^9, 3.855790659415297*^9}, {
   3.8557907024151983`*^9, 3.855790719379074*^9}, {3.855790851974716*^9, 
   3.8557908811921473`*^9}, {3.855823149162943*^9, 3.8558231780181227`*^9}, {
   3.855824360450141*^9, 3.855824406603286*^9}, {3.855824439896246*^9, 
   3.855824535058651*^9}, {3.8558367492114267`*^9, 3.8558368832594137`*^9}, 
   3.855837580833373*^9, {3.855837661513184*^9, 3.855837661666938*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"ba2b5b6d-9c6a-40e8-85ab-0111f6e25bcc"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions definition", "Subsection",
 CellChangeTimes->{{3.855836326556822*^9, 
  3.855836348552705*^9}},ExpressionUUID->"373f6d74-7474-49db-94d0-\
7ce541a1b772"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{"CheckFourierExpansion", ",", "n"}], "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "function", " ", "is", " ", "used", " ", "to", " ", "check", 
    " ", "whether", " ", "the", " ", "Fourier", " ", "approximation", " ", 
    "of", " ", 
    SuperscriptBox["\[CapitalOmega]", "\[DoublePrime]"], 
    RowBox[{"(", "\[Tau]", ")"}], " ", "is", " ", 
    RowBox[{"good", "."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CheckFourierExpansion", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[CapitalOmega]", "\[DoublePrime]"], ":", "_"}], ",", 
     "\[CapitalTau]_", ",", 
     RowBox[{
      SubscriptBox["t", "end"], ":", "_"}], ",", 
     RowBox[{"NN_", ":", "20"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       OverscriptBox["\[Lambda]", "^"], ",", 
       RowBox[{
        OverscriptBox["T", "^"], "=", 
        RowBox[{"\[CapitalTau]", "/", 
         SubscriptBox["\[Tau]", "c"]}]}], ",", 
       OverscriptBox["\[Tau]", "^"], ",", "FSC", ",", 
       SuperscriptBox[
        OverscriptBox["\[CapitalOmega]", "~"], "\[DoublePrime]"]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        OverscriptBox["\[Lambda]", "^"], "[", "n_", "]"}], "=", 
       FractionBox[
        RowBox[{"2", "\[Pi]", " ", "n"}], 
        OverscriptBox["T", "^"]]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         OverscriptBox["\[CapitalOmega]", "^"], "\[DoublePrime]"], "[", 
        RowBox[{
         OverscriptBox["\[Tau]", "^"], ":", "_"}], "]"}], "=", 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[CapitalOmega]", "\[DoublePrime]"], "[", 
         RowBox[{
          OverscriptBox["\[Tau]", "^"], " ", 
          SubscriptBox["\[Tau]", "c"]}], "]"}], 
        SuperscriptBox[
         SubscriptBox["\[Tau]", "c"], "2"]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"FSC", "[", "n_", "]"}], ":=", 
       RowBox[{
        FractionBox["4.", 
         OverscriptBox["T", "^"]], 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            SuperscriptBox[
             OverscriptBox["\[CapitalOmega]", "^"], "\[DoublePrime]"], "[", 
            OverscriptBox["\[Tau]", "^"], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{
              OverscriptBox["\[Lambda]", "^"], "[", "n", "]"}], 
             "\[VeryThinSpace]", 
             OverscriptBox["\[Tau]", "^"]}], " ", "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{
            OverscriptBox["\[Tau]", "^"], ",", "0", ",", 
            FractionBox[
             OverscriptBox["T", "^"], "2"]}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         OverscriptBox["\[CapitalOmega]", "~"], "\[DoublePrime]"], "[", 
        RowBox[{
         OverscriptBox["\[Tau]", "^"], ":", "_"}], "]"}], "=", 
       RowBox[{"Chop", "[", 
        RowBox[{
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"FSC", "[", "n", "]"}], 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{
               OverscriptBox["\[Lambda]", "^"], "[", "n", "]"}], " ", 
              OverscriptBox["\[Tau]", "^"]}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "NN"}], "}"}]}], "]"}], ",", "\[Epsilon]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            OverscriptBox["\[CapitalOmega]", "^"], "\[DoublePrime]"], "[", 
           "\[Tau]", "]"}], ",", 
          RowBox[{
           SuperscriptBox[
            OverscriptBox["\[CapitalOmega]", "~"], "\[DoublePrime]"], "[", 
           "\[Tau]", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Tau]", ",", "0", ",", 
          RowBox[{
           SubscriptBox["t", "end"], "/", 
           SubscriptBox["\[Tau]", "c"]}]}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Directive", "[", 
            RowBox[{"Red", ",", 
             RowBox[{"Thickness", "[", "0.002", "]"}]}], "]"}], ",", 
           RowBox[{"Directive", "[", 
            RowBox[{"Blue", ",", "Dashed", ",", 
             RowBox[{"Thickness", "[", "0.003", "]"}]}], "]"}]}], "}"}]}], 
        ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
        RowBox[{"ImageSize", "\[Rule]", "600"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Frame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"FrameStyle", "\[Rule]", "Black"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
            "\"\<\!\(\*StyleBox[OverscriptBox[StyleBox[\"\[Tau]\",FontSlant->\
\"Italic\"], \"^\"],FontSlant->\"Italic\"]\)\>\"", ",", "Black", ",", 
             RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
             RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}]}], 
            "]"}], ",", 
           RowBox[{"Style", "[", 
            RowBox[{
            
            "\"\<\!\(\*SuperscriptBox[OverscriptBox[\(\[CapitalOmega]\), \
\(^\)], \(\[DoublePrime]\)]\)\>\"", ",", "Black", ",", 
             RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
             RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}]}], 
            "]"}]}], "}"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"BaseStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", 
           RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
           RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}]}], 
          "}"}]}], ",", 
        RowBox[{"RotateLabel", "\[Rule]", "False"}]}], "\[IndentingNewLine]", 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{"CalculateDispTheta", ",", "m", ",", "n", ",", 
     SubscriptBox["U", "\[Theta]"]}], "]"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "function", " ", "is", " ", "used", " ", "to", " ", 
    "calculate", " ", "the", " ", "displacement", " ", 
    SubscriptBox["U", "\[Theta]"], 
    RowBox[{"(", 
     RowBox[{"R", ",", "\[Tau]"}], ")"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CalculateDispTheta", "[", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[CapitalOmega]", "\[DoublePrime]"], ":", "_"}], ",", 
    "\[CapitalTau]_", ",", "MM_", ",", "NN_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{
       OverscriptBox["T", "^"], "=", 
       RowBox[{"\[CapitalTau]", "/", 
        SubscriptBox["\[Tau]", "c"]}]}], ",", 
      OverscriptBox["\[Gamma]", "^"], ",", 
      OverscriptBox["\[Lambda]", "^"], ",", 
      OverscriptBox["f", "^"], ",", 
      OverscriptBox["g", "^"], ",", "r", ",", "p", ",", "B", ",", "A", ",", 
      "F", ",", 
      OverscriptBox["q", "^"], ",", 
      SubscriptBox[
       OverscriptBox["U", "^"], "p"], ",", 
      SubscriptBox[
       OverscriptBox["U", "^"], "h"], ",", 
      SubscriptBox[
       OverscriptBox["U", "^"], "\[Theta]"]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox[
        OverscriptBox["\[CapitalOmega]", "^"], "\[DoublePrime]"], "[", 
       RowBox[{
        OverscriptBox["\[Tau]", "^"], ":", "_"}], "]"}], "=", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[CapitalOmega]", "\[DoublePrime]"], "[", 
        RowBox[{
         OverscriptBox["\[Tau]", "^"], " ", 
         SubscriptBox["\[Tau]", "c"]}], "]"}], 
       SuperscriptBox[
        SubscriptBox["\[Tau]", "c"], "2"]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       OverscriptBox["\[Gamma]", "^"], "[", "m_", "]"}], "=", 
      RowBox[{"N", "@", 
       RowBox[{"BesselJZero", "[", 
        RowBox[{"1", ",", "m"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       OverscriptBox["g", "^"], "[", "m_", "]"}], ":=", 
      RowBox[{
       RowBox[{
        RowBox[{"Sqrt", "[", "2", "]"}], 
        FractionBox[
         RowBox[{" ", 
          RowBox[{"BesselJ", "[", 
           RowBox[{"1", ",", 
            RowBox[{"#1", "  ", 
             RowBox[{
              OverscriptBox["\[Gamma]", "^"], "[", "m", "]"}]}]}], "]"}]}], 
         RowBox[{"BesselJ", "[", 
          RowBox[{"0", ",", " ", 
           RowBox[{
            OverscriptBox["\[Gamma]", "^"], "[", "m", "]"}]}], "]"}]]}], 
       "&"}]}], "  ", ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       OverscriptBox["\[Lambda]", "^"], "[", "n_", "]"}], "=", 
      FractionBox[
       RowBox[{"2.0", "\[Pi]", " ", "n", " "}], 
       OverscriptBox["T", "^"]]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       OverscriptBox["f", "^"], "[", "n_", "]"}], "=", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{
          OverscriptBox["\[Lambda]", "^"], "[", "n", "]"}], " ", "#2"}], 
        "]"}], "&"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"r", "[", "n_", "]"}], ":=", 
      RowBox[{
       FractionBox["4.", 
        OverscriptBox["T", "^"]], 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox[
            OverscriptBox["\[CapitalOmega]", "^"], "\[DoublePrime]"], "[", 
           OverscriptBox["\[Tau]", "^"], "]"}], 
          RowBox[{
           RowBox[{
            OverscriptBox["f", "^"], "[", "n", "]"}], "[", 
           RowBox[{
            OverscriptBox["R", "^"], ",", 
            OverscriptBox["\[Tau]", "^"]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{
           OverscriptBox["\[Tau]", "^"], ",", "0", ",", 
           FractionBox[
            OverscriptBox["T", "^"], "2"]}], "}"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"p", "[", "m_", "]"}], ":=", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{
           RowBox[{
            OverscriptBox["g", "^"], "[", "m", "]"}], "[", 
           RowBox[{
            OverscriptBox["R", "^"], ",", 
            OverscriptBox["\[Tau]", "^"]}], "]"}]}], 
         SuperscriptBox[
          OverscriptBox["R", "^"], "2"]}], ",", 
        RowBox[{"{", 
         RowBox[{
          OverscriptBox["R", "^"], ",", "0", ",", "1"}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"B", "[", 
       RowBox[{"m_", ",", "n_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"p", "[", "m", "]"}], "*", 
       RowBox[{"r", "[", "n", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       OverscriptBox["q", "^"], "[", "m_", "]"}], ":=", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{
          OverscriptBox["\[Gamma]", "^"], "[", "m", "]"}], "#2"}], "]"}], 
       "&"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"A", "[", 
       RowBox[{"m_", ",", "n_"}], "]"}], ":=", 
      FractionBox[
       RowBox[{"B", "[", 
        RowBox[{"m", ",", "n"}], "]"}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{
          OverscriptBox["\[Gamma]", "^"], "[", "m", "]"}], "2"], "-", 
        SuperscriptBox[
         RowBox[{
          OverscriptBox["\[Lambda]", "^"], "[", "n", "]"}], "2"]}]]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"F", "[", "m_", "]"}], ":=", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"A", "[", 
            RowBox[{"m", ",", "n"}], "]"}], "*", 
           RowBox[{
            OverscriptBox["\[Lambda]", "^"], "[", "n", "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "NN"}], "}"}]}], "]"}], 
        RowBox[{" ", 
         RowBox[{
          OverscriptBox["\[Gamma]", "^"], "[", "m", "]"}]}]]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       SubscriptBox[
        OverscriptBox["U", "^"], "p"], "[", 
       RowBox[{
        RowBox[{
         OverscriptBox["R", "^"], ":", "_"}], ",", 
        RowBox[{
         OverscriptBox["\[Tau]", "^"], ":", "_"}]}], "]"}], "=", 
      RowBox[{"Sum", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           OverscriptBox["g", "^"], "[", "m", "]"}], "[", 
          RowBox[{
           OverscriptBox["R", "^"], ",", 
           OverscriptBox["\[Tau]", "^"]}], "]"}], " ", "*", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"A", "[", 
             RowBox[{"m", ",", "n"}], "]"}], "*", 
            RowBox[{
             RowBox[{
              OverscriptBox["f", "^"], "[", "n", "]"}], "[", 
             RowBox[{
              OverscriptBox["R", "^"], ",", 
              OverscriptBox["\[Tau]", "^"]}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "NN"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "MM"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       SubscriptBox[
        OverscriptBox["U", "^"], "h"], "[", 
       RowBox[{
        RowBox[{
         OverscriptBox["R", "^"], ":", "_"}], ",", 
        RowBox[{
         OverscriptBox["\[Tau]", "^"], ":", "_"}]}], "]"}], "=", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"F", "[", "m", "]"}], "*", " ", 
         RowBox[{
          RowBox[{
           OverscriptBox["g", "^"], "[", "m", "]"}], "[", 
          RowBox[{
           OverscriptBox["R", "^"], ",", 
           OverscriptBox["\[Tau]", "^"]}], "]"}], " ", "*", 
         RowBox[{
          RowBox[{
           OverscriptBox["q", "^"], "[", "m", "]"}], "[", 
          RowBox[{
           OverscriptBox["R", "^"], ",", 
           OverscriptBox["\[Tau]", "^"]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "MM"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       SubscriptBox[
        OverscriptBox["U", "^"], "\[Theta]"], "[", 
       RowBox[{
        RowBox[{
         OverscriptBox["R", "^"], ":", "_"}], ",", 
        RowBox[{
         OverscriptBox["\[Tau]", "^"], ":", "_"}]}], "]"}], "=", 
      RowBox[{"Chop", "[", 
       RowBox[{
        RowBox[{"Simplify", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox[
            OverscriptBox["U", "^"], "p"], "[", 
           RowBox[{
            OverscriptBox["R", "^"], ",", 
            OverscriptBox["\[Tau]", "^"]}], "]"}], "+", 
          RowBox[{
           SubscriptBox[
            OverscriptBox["U", "^"], "h"], "[", 
           RowBox[{
            OverscriptBox["R", "^"], ",", 
            OverscriptBox["\[Tau]", "^"]}], "]"}]}], "]"}], ",", 
        "\[Epsilon]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       SubscriptBox["U", "\[Theta]"], "[", 
       RowBox[{"R_", ",", "\[Tau]_"}], "]"}], " ", "=", " ", 
      RowBox[{
       SubscriptBox["R", "0"], " ", 
       RowBox[{
        SubscriptBox[
         OverscriptBox["U", "^"], "\[Theta]"], "[", 
        RowBox[{
         FractionBox["R", 
          SubscriptBox["R", "0"]], " ", ",", 
         FractionBox["\[Tau]", 
          SubscriptBox["\[Tau]", "c"]]}], " ", "]"}]}]}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"NIntegrate", "::", "slwcon"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"NIntegrate", "::", "ncvb"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"General", "::", "munfl"}], "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.855789320529159*^9, 3.855789350616221*^9}, {
   3.855789823946525*^9, 3.8557898893613453`*^9}, {3.855790594810322*^9, 
   3.855790596073091*^9}, {3.8557906472319508`*^9, 3.855790659415297*^9}, {
   3.8557907024151983`*^9, 3.855790731076971*^9}, {3.855790957455633*^9, 
   3.855790980369437*^9}, {3.855791098737607*^9, 3.855791184135112*^9}, {
   3.855819578826684*^9, 3.855819615043331*^9}, {3.855819677840111*^9, 
   3.85581968328448*^9}, {3.855820486701079*^9, 3.855820503494602*^9}, {
   3.855824357472961*^9, 3.855824358885816*^9}, {3.855827735107778*^9, 
   3.8558277374581413`*^9}, 3.8558278002272863`*^9, {3.855828446045857*^9, 
   3.855828475645914*^9}, {3.8558294421769667`*^9, 3.855829443301528*^9}, {
   3.855829874639366*^9, 3.8558298765260963`*^9}, {3.8558299366612186`*^9, 
   3.8558299517141314`*^9}, {3.855829990147934*^9, 3.855830003925046*^9}, {
   3.855830166516841*^9, 3.855830191077001*^9}, {3.8558303833855762`*^9, 
   3.855830476199862*^9}, {3.8558305112528667`*^9, 3.85583054368073*^9}, {
   3.8558306063107033`*^9, 3.855830647793825*^9}, {3.8558306898503637`*^9, 
   3.855830727712474*^9}, {3.855835088676531*^9, 3.8558350889963093`*^9}, {
   3.85583598959324*^9, 3.855836000678735*^9}, {3.8558360434320908`*^9, 
   3.8558361410978403`*^9}, {3.855836267632169*^9, 3.8558362678831043`*^9}, {
   3.855836403917913*^9, 3.8558364078683577`*^9}, {3.855836902920454*^9, 
   3.855836995506564*^9}, {3.8558374155402718`*^9, 3.855837420310295*^9}, {
   3.855837618353037*^9, 3.855837626714931*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"13c3c36b-a8b5-4135-9a0b-8f425cc6e794"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Check  ",
 Cell[BoxData[
  SuperscriptBox["\[CapitalOmega]", "\[DoublePrime]"]],
  CellChangeTimes->{{3.855789096532126*^9, 3.8557891267212343`*^9}, {
   3.855789163275392*^9, 3.855789180878376*^9}, {3.8557893640792294`*^9, 
   3.8557893747850647`*^9}},ExpressionUUID->
  "987ff73c-4caa-41a2-928b-b64b4b232e96"],
 "[\[Tau]]  Fourier Expansion"
}], "Subsection",
 CellChangeTimes->{{3.8080863658231993`*^9, 3.808086384176141*^9}, {
   3.855789396760868*^9, 3.855789399175742*^9}, 
   3.8557894666719723`*^9},ExpressionUUID->"dd9a1608-f5fc-48d9-a7fd-\
80e70672ebba"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  SuperscriptBox["\[CapitalOmega]", "\[DoublePrime]"], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["t", "c"], " ", "=", " ", "0.004142"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Alpha]", "p"], "=", "2000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SuperscriptBox["\[CapitalOmega]", "\[DoublePrime]"], "[", "\[Tau]_", 
    "]"}], "=", " ", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[Alpha]", "p"], 
         RowBox[{"Exp", "[", 
          RowBox[{"1", "-", 
           FractionBox["1", 
            RowBox[{"1", "-", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Tau]", "/", 
                 SubscriptBox["t", "c"]}], "-", "1"}], ")"}], "2"]}]]}], 
          "]"}]}], ",", 
        RowBox[{"0", "<", "\[Tau]", "\[LessEqual]", 
         RowBox[{"2", " ", 
          SubscriptBox["t", "c"]}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"\[Tau]", ">", 
         RowBox[{"2", " ", 
          SubscriptBox["t", "c"]}]}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["t", "end"], "=", " ", 
   RowBox[{"5", " ", 
    SubscriptBox["t", "c"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalTau]", "=", " ", 
   RowBox[{"2", 
    SubscriptBox["t", "end"]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.855789096532126*^9, 3.8557891267212343`*^9}, {
  3.855789163275392*^9, 3.855789180878376*^9}, {3.8557893640792294`*^9, 
  3.8557893747850647`*^9}, {3.855789409576295*^9, 3.855789446429438*^9}, {
  3.855789926968155*^9, 3.855789994975626*^9}, {3.855790126619711*^9, 
  3.855790126686132*^9}, {3.855790418731679*^9, 3.855790418841549*^9}, {
  3.855790606010571*^9, 3.855790611397943*^9}, {3.855824083345181*^9, 
  3.855824094127437*^9}, {3.855824163304165*^9, 3.855824276294262*^9}, {
  3.855828484511305*^9, 3.8558284905134783`*^9}, {3.855828751334844*^9, 
  3.855828825182362*^9}, {3.855830116471633*^9, 3.855830200034581*^9}, {
  3.85583497066276*^9, 3.8558349709597473`*^9}, {3.855835972687998*^9, 
  3.8558359728260393`*^9}, {3.855836509757481*^9, 3.8558365258720303`*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"05dce316-62bc-43fc-9263-90e02c7b3e41"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CheckFourierExpansion", "[", 
  RowBox[{
   SuperscriptBox["\[CapitalOmega]", "\[DoublePrime]"], ",", "\[CapitalTau]", 
   ",", 
   SubscriptBox["t", "end"], ",", "30"}], "]"}]], "Input",
 CellChangeTimes->{{3.855789096532126*^9, 3.8557891267212343`*^9}, {
   3.855789163275392*^9, 3.855789180878376*^9}, {3.8557893640792294`*^9, 
   3.8557893747850647`*^9}, {3.855789409576295*^9, 3.855789446429438*^9}, {
   3.855789926968155*^9, 3.855789994975626*^9}, {3.855790126619711*^9, 
   3.855790126686132*^9}, {3.855790418731679*^9, 3.855790418841549*^9}, {
   3.855790606010571*^9, 3.855790611397943*^9}, {3.855824083345181*^9, 
   3.855824094127437*^9}, 3.855824163304165*^9, {3.8558254494950047`*^9, 
   3.855825449559547*^9}, {3.8558270057389193`*^9, 3.8558270106210623`*^9}, {
   3.85582771007803*^9, 3.855827710463825*^9}, {3.8558277460349293`*^9, 
   3.8558277842021112`*^9}, {3.8558278424732122`*^9, 3.855827842551174*^9}, {
   3.855828873534525*^9, 3.8558288735977993`*^9}, {3.855829885648657*^9, 
   3.855829887260344*^9}, 3.8558300695133038`*^9, {3.8558306337174997`*^9, 
   3.85583063446122*^9}, {3.855836005092436*^9, 3.855836007834021*^9}, {
   3.85583615582941*^9, 3.855836156244625*^9}, {3.8558363597119503`*^9, 
   3.855836383166894*^9}, {3.855836419912252*^9, 3.855836422919932*^9}, {
   3.855836528626041*^9, 3.8558365333877487`*^9}, {3.855836716781273*^9, 
   3.8558367200526333`*^9}, {3.855837634341292*^9, 3.8558376390698843`*^9}, {
   3.855845450853159*^9, 3.8558454619580507`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"69e1223d-bee1-4dba-80e8-aa8422048e55"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[1, 0, 0], Thickness[0.002], Opacity[1.], 
      LineBox[CompressedData["
1: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
eodOnZGRppdpex8ZR1r1lTXbj0SL/A9CEOFc
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGCwBmIQfSHtQ9R/u+f2DFDwgz92qncagn/20HfRW1sR/HML
n17YvQvBv9BwuXvufgT/kt16xsSTCP6NXWlvn99B8J9sunrkK/MLOP/Pos3F
gkEIvk5z/kWPdwh+9pxrDAcFX8H5wo9bi4/4vobzZzepRF0seQPnG4pf+Ck0
7S2Cf/Pwnfvn38H5gl+WGW/78h7O15V7+Yx75geEe21aBa6bfITzv7BLflE7
huAfeRlQuSf5E5zPUtGw49o3BP90g1kId/tnON99wYSJrcpf4HzjnEcdLVsR
/Ct+NxRPBn+F85/ePVoy6TmCX/vcUqWs4hucf5I9qHS+6Hc4v/VKYoPvCgT/
23ZRXUf3H3D+O9EAM//HCH6YQtPPhyU/4fxix4i4XUK/4HwGfrVa8WUIvkh4
1Y8+s99w/p2tRaI+lxF8kYNJb3pT/8D5PGpb/kplIPjM3az8K7IQ/E8hKwwP
5SP451+8LftWieB3CVQyxvch+P/j+8UMtiP43448UN+7E8F/p2lk6bUHwb/z
+Up0ykEEf1e71MIZpxH8kvVLtRkfIPg5It9t+h4h+MmVHn7STxH8IOfXBaav
EHz96wbbMr8g+Go2Tce/fUPw5RZevtH8Eyk8sst+z/2H4LNcOM6jzfgXzv9t
Iim3gxnB/zQzS9+VDcF/9W+3wyUOBB8Ag98A+w==
       "]]},
     Annotation[#, "Charting`Private`Tag$15008#1"]& ], 
    TagBox[
     {RGBColor[0, 0, 1], Thickness[0.003], Opacity[1.], 
      Dashing[{Small, Small}], LineBox[CompressedData["
1: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
P8Lvafkd9kT5NbDui3iroiQHqoHvUJjKGlR2/7k7cUIWqm0bOTbU1mBrM2ib
ckQGjFQGL17QxHw/szPfdpEBazIV9396uJ5UZ7LmMWnoJ3Bd6tBfgxbdIb6a
GilwKZZrNDbE+RnCHPXFpcDX75S/ktkaeAeRZYjTEnB/+VXLXmvcb83V9iVR
vL8dtQfDbTG+XX/O45wopL35fuXniTXwTygRt8sXgZcX/wpNOeD6gwImIVzC
0LhgHVxzZg24P/I01T7hg78vj07Se+F6jetVjyh5QcPriOVJ7zWI6ZoPjfXk
hoJJY4EVnzWgeHFd+YwAB8T90KgXvLYGQvafVd+1MsKJDv69kTHYLlR07m9a
o358LE9A132M7zHuOKh9q22y4PzBF4/1fGQad9h6tlariflteSLGd/mPv2vZ
quVHVDaz6bi+G3vqp8a9aLp4Ps3i7RocPnnsQsxlHiTgN0OZ+g7red/4Gd8C
LzolP3lhsgT7233srHPgRy2vfujdeI/5mrDz7BUXRJTeAy+aK/E8SJyO90EI
6Uj0Mh34uAaeHIPVEfNC6E1O5/gbtAZBxmM+lfIiaMatzeJ3Pc7Hn7Jc9lUE
HRRsKTVtXIP2t+qXeNxFUcLT+qjRljXw2Y2vzI8QQ18dapdl2rCeNGGhjxjw
fcr98dT1jjV8P98xuPJAHF1JLpdi6cb7Zf6kpCBaAr21LUl07lmD+RfBY63b
EmiWpWi7oA/341fAffO8JBLsKjyzObAGNQKU6E23JLKPf9lu+APvw9/oUCMN
KZRomaf+YGQNNpYkzOWSpVDr3uzMoTE87/dynvZLUkgvOt0/cBrvZ43wEc1Y
aXTV5PEgml2Dos/Bph3fpFERVbIR48IaSJkP7Vxkk0FzdQmv7RfXgCa8+yL9
URkkdCv+wIvl/+tbv5gWIYMcDt0PI6+ugXOPnDpHsQxK+hM9e2gN90tucbs2
IIPaqiKP39/A5ztOdf79tgyiCQqv7Pu5BgWXXfK7OWWRpPXqfa7feL8vbbqd
k5NFR6RcTtv/wef71OciFj1Z5EvRofjkL57P1JWoTlNZlDCgSzX0D9cTa+HL
sZBFZcWFPbxU6yD1+eFavLks6ovheelEsw5vmAO+poAs2naLCX5Gtw5XiGdy
apVlkYD2L8sR+nUQ0huvZTooiwxYvQ4e3LcOh2OHM+JpZJHnQg/JZT+ON7nx
23hGBt2tN/78nHkdWEpuNOrWyaDCJ6Up46w437PzkuEpMqjjsrC38IF1yFKP
CxM4K4NIFgk6HpzrQH8zxUZYUQaxi/xjzOXGdk52x/R1aaSx7Ts2xbsOWjLZ
V9NKpZFD93CJmADmXzKeL+cjjUILLaPOCq5Dgr8yy3khadTgKC09J7oOxSeo
06SCpdCMStofSYl1IOxx9O8VkEL0+/Z0ekutA3fNcWLYJ0l0/ON0AFFuHcaP
7H0ltCKBAh7Zmcoq4vidlFGrWxIo9WIDl4/yOniffxA7sE8CDfNl1SyrY36P
L+eEcokj71AnOrL+OrjN+b2T3xFBsSdaB5QNMd87t9uiLoqgIjnt1wHG6xAk
NAIK/cJoY5jTesN8HVqCRi5T5AmhiEPdT35ZY72esSlRKvKj9N3D8rse62Cg
Jzd/eT8ragvXOLHv7jqEJwREtOz9o394QfZQ2L11oCD8EzlUTgFNNsISq7GY
f+m7a2kj1NAgwrjVnYD5xTZoqvAxQHXjxNP0dMzve3ybLic7aMn3RzFm4P6u
Tt9WiD0A71PafW8+x/qUHb4kuM0BpV4fwCMP83kzZvq4kRsK6eOnpIswPpQw
f5fqIEhdvt3+tBj7M8eW79UXhPzB6xX7yzC/weW+YC0hyCn0uEv+sA4D+2+o
rp4WBiF2e/8z1euQlpIvXbggDJk3jjr01mA9PkgFPvAXgXQrLdmqemy3yJQ8
5ScK3BXyB2Qb10EpfSRod1YUUgVE/z5rwvpXB/xycBCDpJX9XeFt6+AfkHjl
s7w4sPxHXbnWgfMVvr2V/VAcHqCtLE8C5sPa/KN7URzuJUwFHO7F8/jdWTOW
JAF0vwecqvvxPm7e4388IgFR7p0mckOYb43dfQcRSaBq/SyfOYz1IyZ+5naX
hHCVKk6WMayXti9ryxNJ2E0v+hcxsQ72tEqWzu2SEEqdN78+heu9hIG2LUnY
vvjk29lZvM/sJSVMglIQ1POgun8ez+fy9TNYPfipF5VrsYjnqym//6e9FFx5
ERz3cRn37xzkkeQjBWv7/a7Kk/D5EqN/TQ6WAv9rni7P19bBOkehgT1CClZG
HcxZN9eB1HmAcxtjH/PjSpG/8HyF7+e/DJUC4jsTns3fWK98f2rhy1Lgza1D
dW4HY+kvR3xcpWA2XHFxYBfvzw8TiURzKfBcEOs5QrkB82dLWtKkpWDShvdT
DfUGGKSXEeNppcCtmjlfgW4DtOhdmkN/SMKoCO3DLPoNGNew4Q58LQnOsdvX
2fZtgJtmBGv4VUkYWl91i9q/Ad6hz53LtSXB3nnG4ifzBmSRpA6IbElAX+OQ
ijfbBhQAb+1wsQSckCfwDR3YABZdK7PfZyTAerd6+RMPtu9ZDi6tEodOr+I+
RX7MZ2Ky4ZazOFh1vUDZBzfAWSWBi2VbDMyzEhLviG7g93rWZEFcDK7N+cZ3
iG9AstXcbfkaUchXsLzHIYXjHa92mR0TBbpPtBEv5LD/TOE/dy8RaBwM8f+i
ju2u1+OPnBeCDSF7n/1aG3geIakRDYIg5q3ufVJnA4p7VIizrw9C5M9V1xn9
DZDidUYHffjBiP3scdrDG8Ctsb6a9ooLAhyNLI8ewbia2jbNhxNysgXNU6xw
fMaWuaosB1AqDemL22xA0MW1UtdnbFBndVzB1HEDKJL39Xu/ZYBD0dr77/hg
bGLLsOE3pe/Twbm34xLGQrGBWeME/WcHNmg4LmNcnP8TeZTX7uQU7eRdxXjn
qS1r4HxtNRJdaryJ+7nocuzbEgUi0lHOM0Zge2HMSfpUasR7bHTqRCSeRxSP
aaM2HQoeTvsxfXcD6njybSMv7UNav/e30ST+v/6j4421bMjbYLHJ6tEGkO66
bOdusqO0uy0NySkbQHA180uV5EC/OCKrxdJxviwa0+IbXOi9ytYrk9wNUFrx
sJwf4UOzwb0v4l5gPhkz89Gz/IijvjS75yXen1C6qhPzAujKcd8nnm82QEh6
43xBnyBS9ZmMiarA+XJ9o53eCKNaY7Onfz/g/aB4msPEJ4IO8xW+vVa9AVuP
OvtHokSQS+vlbm+0AeGIMdjXQhTNZ/dOT9RvAP1X+/J/uaIoMFj7l2PjBsS8
ay+x+S2KYqQo+Y9+xfXSW2vmHokhNoqzCk1tG/j9jK+kHxRDGf0tBtCJ63Nn
OOZyiyOpd3J2lQRcL1Cu/JWtOCqNTjir/B33JztpxXxXHOm5bFwv7MX9/XYT
/1ohjprV7e+LDmxAi/ylqo5RcWS7v+bZsyFsb6ug5KDC78e04DuOEdxPhdzV
NEEJ5FUTWf9gDOt5m5nBTlMCkR/Nfd8zuQGHQ25pGFpIoNCLlrPh05hPdA3J
7aQEojN+t/V7Fu/P052iEicJlMDLvi9wAetJGvdSc5ZAfGvXBJYW8f7q34tb
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
oTW9o5oBFQvmiTwuNKQs45vUWMuA3OfR0+E3aei+f8UG4xcM8J482bmpmoYo
PayhIoT5mNUNUYdpKNNoczi1gQHVMRmLa5doiHY7TD21iQE6Lgp795FUUA6z
uUPkFfab7mXLND0VpOokci6kDa+nHjw1s0UF5VXvkJtvZ4DDkGW54x4VpK5w
q86zE/PtUjXtOKiCCi72un3qwv7/4nJmt4sKWjNAEtrzngGmuaF/JpxVUKGJ
a1HLRwYUGdeWxuxTQVrpubs39TEgOZLTaW2vgoq4k4ySAQZ+37yokN+kgrSd
te+pfmJAoFqsoIiaCiquO2tx5zOuJ6CeSeDvqY5y1deVYwzw7fW65z5NQ2VX
ODHh4zg/MbDtcxsN6Q2b6TK/4vk/mVFPz6KhCrOInlPfsT7V/6ZyztOQ4YNX
l0Z+MvD9YT5wmRUNVS2toDrOYH815PV0idLQBtddLW2zuP+xP0aS3VRUXZ98
yuwPno/pjamBJCp6HqZcpc7C57ufpmMrREWmY26H7nHw+ZEeG5N+TiC6ZR6P
xCLWM11As+Ikger519tzeJngK+YQFX2Jgizc/WZ9BJjAw+jgbW8go4amZylf
ljEh8+4xbW8+Mmq6Zj7SsYIJrudbTR6cUkJtQnv8H8gwIQHcPd/9lEcLNsHa
P+SYsGueFAei8mjd9cIJA0UmlAaa1yery6FkAf59r8lMmN23PqR5pwxy5a0w
+qvOBB1t8fT13hKIxZFh2Zng/qd6WDlifEjLxLI0xZQJ5v3h7369XKK7XPTx
HDHDeecf3RWuXHoTs6XP3wrn6bInghPm6AnzF2oyHXCedYfHObGQrj7TH8Rw
YUJ9oNSneUVeOKi9TN/CDa9vjukR3swPsd56P2OO4fXjKe/tDgri72P0Iaon
zp/17Q+5uhzo3zaZOpxl4vtiidf1ZnH4reY5n+qH128wXPpTJwGqx5OLRv2x
PjKjsvqlkhA9PqV0IYgJ2xLja/6LkoZ9oxmLWRE4P+P9J51HHqKI15VT17B+
opXaou/koe4I4/SGSCYEal6vbklXANrwjuGOWNzPoemwD4UEjsqXUuXi8foD
rELhPhJEOufvOJrIhC7SO7Q1WglmBpbozBS838DMjjyoDFTFtRcs05gQynl9
yeciGfYecFp/8y4TWqdHuB/EKVDbW/qA9gDjK2EW6ssQMC37af/pLCYYDwro
rd1HALFvuXh1Dua3IlbR/xYB1z64hW4vYMLk61nbFj4qSOZK72wrZIKwrXVL
tTEVMv1eKVs/YYK4xdpnxEkqrLMKmqovYUJkTEHQXCoV6iS1n5uW4/nvd89W
QVSwG/scVV2B5+8mwSgco0JfWZKTwTNcLyvQPxR/j46HWauX1uD8DeODGSQa
zO9i/dWqw3zYugoLOjQIJx435dMxnps5x9IsaCA+e/iWykvm//9nRv3Mdhrc
R+JHHzQy4bwENSl4Lw204ht1SC1M0CD/XdGyjwbVLgFLqa2Y3+9WUxuct1m3
plOyHftVbOVyXrz/w+Lgvbg3TJCXvpDINqfB0Tdxp0S6mDC05rOuAe4/e8/C
5Ho3E+afdIRUKdIg2HtemO8jxvOtbNsNHhqImub3XunF8Zfe+OJRKtxZcTCP
3c+E8TecGEM6FdQGRf39h3A//9u5alifikJk9XsY6/Xxh89NLypYBp2TPD2K
z1NEbmEA1rfLdvXo5BcmdPx0MJvF+rso9JW4f8V5U1f95W0ETE1GB49MMsHJ
iVL+LpoAochZUt801jPnmPczXgKS9+f8+G8W679967v50xSgqe+reTuH9SSf
aPftIoNZy/N9r5h4/ZGLCawrytCR4rPaioP9fyjSwLVNCQ56UOfpC9iP0o/9
/Fcqgb/AjcQqXhaErhvR8g9VhCLLPR0PV7Cgy6/390s5OTCRFEynirHAU9Uy
IGydLLSOPvPKEGfBSGYdoxxk4EuoslCKDAtaL3NHTu6RAkU0aXGVwgKeiidj
/aFiUBCXLs5DYwHxOzJs9JgoGLns+HxJlQXmDVGlguYisHvx6WW/NSyot4y1
mZgQhMhNIc+O6uM4cv3A+lm2GeOZjLbFVrz+s8exePkJuk+WiUeZLa5vtjdH
UWCG/jX6SAbVgQWuyvlbVvr9ofccfrSSbzfe7/zbfKflAr2Sf/NMw0GcV6mI
LXi+DK2ddlPTP8yCTKaitdYHYZTbc90l5wjmLyy7aWFCBCU/6uqMcMd4idcS
wX/E8PvcvWSLDwt8+8L+Se2VQlPGUd8qfPH+mEN16WbSyJ1WTFnth+sbrSEN
qcigvX+Z8YKBGJ/koTX5n2RRx7BSq38QC0pbTz1uLpNDW1oteL5exvpOU+Ka
QuSRfnqMb0sYjk0LpO4JK6LCq6UFRlcx/srbFJlGRUTz+TiSdx33EwzxLwkg
IUkLyu4bMTjet7k7vVUJRWtuiWLeZEFC6Cq7e8eVEZ+018sTCSzYlerMS1pU
RnNfy3W3pbBgdudIu4AUBZ3s6vWqvs0C8ZpjCdpJFDRWs5ClcZcFrLv7+AsE
CHQwhzqQdg/zFdddpmFKoO5YG8nlD1jgFPqyJeoMgewCTtldzMLzeLjZ+uV9
AjUcSQj/nsPC7+ueuMY2ApnYVtYeyGOBcfrG+uuzBCrTG5hrK8D7rd8K8UlR
kYbSkqbJY+wfp6f52rpUlCmoeqzwCeZP8mLy2VOR/K9t6YqlOO9o53HZlYoS
+k6/jy5ngcO3kgspZ6lIuCFpBbcC91f4+MYumIpCHz+zOvUMz8v8PHH3OhWx
kocuDdawYMsTZcvwaCryDeatsK/DfIy3UfhxPHlCbeo5nQVFF0l05WtU5Lrb
XnXtSxYErpnf/OESFfWZ+Drfa8R8HmT3rPGhol2qKcmiLRjP3mO9NGcqal1Z
23G5lQWmT5MeNllTkTlzWGD6NQv6LEnPZbTw93uEf/PhNywQ/fggV1mUita/
1vB/85YFdefdlsYnCZT3dPuTzd14HjxjAf4vCUTOODfx5AMLvDutGvpTCJR6
/bYyuRf75cWJLOXjBBLzrXOM68d+OtDWv12PQNcPjN78N4j1fGR4fHaegv5Z
LmvxGcb+87D6tu8KBc3I7DLa+QXXF/Gz7Q8gI/lh57CUCbw/VuLv8jllZJHn
1TH4DfORU3duw35JNoo46jmF/daZ3+C3WQlt2l8VF/aXBfNmBxpNcxSQO6Wx
/xWTBWmvNxk/mJFHcd/eqopxsL/6RvJKDeTR2IXvtXf/sUDn0OKhG2WyKDJN
6dtTITZkOty48/acFCp3XaPHWc4G9xQP2uk0STSoYXTFXJQN9yT/q6PWSqB1
NTul3oizQX61b5XmxCr0sT8cviqwoStmOOxEkDCikb7fll/LBl+zroms+7/p
Dl/+jrmsYwNRGCH+y/gn3f8x37qHOmwYgUR/Xp0v9NZNSk26hmzg0WudZ9dW
088475y1M2ND6P2P8JN/2qwuo3LblV14fVDYyWu9y+CrR8Otxj1sKFU91jde
JQyr1r0dXu6I8TfZeCcliMBR+uT51ANsEG/7fcpcVwyWfyZllRzF+J5axkfH
SYJevsbUX3fcL/TwZsGjUuB8xnCD6Qk27MqOaVXRlYbSpR1vWk/hfNayN+kv
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
tVknZ1/8D/xw9Qw=
       "]]},
     Annotation[#, "Charting`Private`Tag$15008#2"]& ], {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{
    GrayLevel[0], FontSize -> 20, FontFamily -> "Times New Roman"},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox[
      StyleBox[
      "\"\\!\\(\\*SuperscriptBox[OverscriptBox[\\(\[CapitalOmega]\\), \
\\(^\\)], \\(\[DoublePrime]\\)]\\)\"", 
       GrayLevel[0], FontSize -> 20, FontFamily -> "Times New Roman", 
       StripOnInput -> False], TraditionalForm], None}, {
     FormBox[
      StyleBox[
      "\"\\!\\(\\*StyleBox[OverscriptBox[StyleBox[\\\"\[Tau]\\\",FontSlant->\\\
\"Italic\\\"], \\\"^\\\"],FontSlant->\\\"Italic\\\"]\\)\"", 
       GrayLevel[0], FontSize -> 20, FontFamily -> "Times New Roman", 
       StripOnInput -> False], TraditionalForm], None}},
  FrameStyle->GrayLevel[0],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->600,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  RotateLabel->False,
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.855845417865633*^9, {3.855845452577259*^9, 3.855845462678934*^9}},
 CellLabel->"Out[51]=",ExpressionUUID->"8c6bd4e1-68a3-49ed-8b3f-8899ab87ef3c"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8558454070074244`*^9, 
  3.855845407010962*^9}},ExpressionUUID->"fb3eb26d-095a-4a2b-b956-\
3b3dca7c43a3"],

Cell[CellGroupData[{

Cell["Sinusoidal function", "Subsubsection",
 CellChangeTimes->{{3.8558349783496113`*^9, 
  3.855834988107368*^9}},ExpressionUUID->"c9bfcd60-1b44-4af5-916b-\
e36854de648d"],

Cell[, "Input",ExpressionUUID->"59efe5f0-4006-4790-abb7-e08bfd63dd06"]
}, Closed]],

Cell[CellGroupData[{

Cell["Define loading acceleration", "Subsubsection",
 CellChangeTimes->{{3.855835018931849*^9, 
  3.855835027763558*^9}},ExpressionUUID->"c65198e5-25f9-4707-a2e5-\
a6c60da2a120"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  SuperscriptBox["\[CapitalOmega]", "\[DoublePrime]"], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["t", "c"], " ", "=", " ", "0.004142"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Alpha]", "p"], "=", "2000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SuperscriptBox["\[CapitalOmega]", "\[DoublePrime]"], "[", "\[Tau]_", 
    "]"}], "=", " ", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[Alpha]", "p"], 
         RowBox[{"Exp", "[", 
          RowBox[{"1", "-", 
           FractionBox["1", 
            RowBox[{"1", "-", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Tau]", "/", 
                 SubscriptBox["t", "c"]}], "-", "1"}], ")"}], "2"]}]]}], 
          "]"}]}], ",", 
        RowBox[{"0", "<", "\[Tau]", "\[LessEqual]", 
         RowBox[{"2", " ", 
          SubscriptBox["t", "c"]}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"\[Tau]", ">", 
         RowBox[{"2", " ", 
          SubscriptBox["t", "c"]}]}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["t", "end"], "=", " ", 
   RowBox[{"5", " ", 
    SubscriptBox["t", "c"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalTau]", "=", " ", 
   RowBox[{"2", 
    SubscriptBox["t", "end"]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.855823018410043*^9, 3.855823021135903*^9}, {
   3.855823067440507*^9, 3.855823075508233*^9}, {3.855823252238001*^9, 
   3.855823255682596*^9}, 3.855823399531698*^9, {3.855823469250671*^9, 
   3.855823507646557*^9}, {3.855824648524816*^9, 3.855824670007786*^9}, 
   3.855824964434401*^9, 3.8558252503107557`*^9, {3.85582547232026*^9, 
   3.85582547237785*^9}, 3.855825853001522*^9, 3.855829172056676*^9, 
   3.855831400276247*^9, {3.85583503738396*^9, 3.855835049221397*^9}, {
   3.855836444010532*^9, 3.855836450687539*^9}, {3.855836587651004*^9, 
   3.855836592258567*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"53a6d7ff-1642-4345-996d-89dc651b1a90"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Calculation ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["U", "\[Theta]"], " "}], TraditionalForm]],ExpressionUUID->
  "f6e8c4b7-d32b-4f55-acf3-bd0da395a20e"],
 "from analytical solution"
}], "Subsubsection",
 CellChangeTimes->{{3.855835018931849*^9, 3.855835027763558*^9}, {
  3.855836454722515*^9, 
  3.855836466627236*^9}},ExpressionUUID->"c4287666-1f6c-4fc1-8afe-\
7295f114067c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CalculateDispTheta", "[", 
   RowBox[{
    SuperscriptBox["\[CapitalOmega]", "\[DoublePrime]"], ",", "\[CapitalTau]",
     ",", "30", ",", "20"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.855823018410043*^9, 3.855823021135903*^9}, {
   3.855823067440507*^9, 3.855823075508233*^9}, {3.855823252238001*^9, 
   3.855823255682596*^9}, 3.855823399531698*^9, {3.855823469250671*^9, 
   3.855823507646557*^9}, {3.855824648524816*^9, 3.855824670007786*^9}, 
   3.855824964434401*^9, 3.8558252503107557`*^9, {3.85582547232026*^9, 
   3.85582547237785*^9}, 3.855825853001522*^9, {3.855827003253057*^9, 
   3.855827018729083*^9}, {3.855827850772085*^9, 3.855827850917225*^9}, {
   3.8558289518832483`*^9, 3.855828952883727*^9}, {3.855829481774933*^9, 
   3.855829481793894*^9}, {3.855829560228498*^9, 3.8558295804810877`*^9}, {
   3.8558297271801767`*^9, 3.855829728872889*^9}, {3.8558297635514097`*^9, 
   3.8558297674454403`*^9}, {3.855829813948977*^9, 3.855829820497024*^9}, 
   3.855830281030964*^9, {3.8558310749365683`*^9, 3.8558310878950853`*^9}, {
   3.855836597522633*^9, 3.855836598183899*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"03dd2fdb-4e93-42a8-bcea-51fa0cde2334"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["U", "\[Theta]"], "[", 
  RowBox[{"R", ",", "\[Tau]"}], "]"}]], "Input",
 CellChangeTimes->{{3.855846113959261*^9, 3.855846117915811*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"f5be5c10-3627-43c9-9ccb-d9cc201fa5df"],

Cell[BoxData[
 RowBox[{"0.0652543`", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"0.034997159796738606`", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", 
       RowBox[{"58.71959350123305`", " ", "R"}]}], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"335.7421206938183`", " ", "\[Tau]"}], "]"}]}], "-", 
    RowBox[{"0.03714888868995106`", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", 
       RowBox[{"107.51148460431914`", " ", "R"}]}], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"614.7204312515706`", " ", "\[Tau]"}], "]"}]}], "+", 
    RowBox[{"0.004886458634381548`", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", 
       RowBox[{"155.9049462650388`", " ", "R"}]}], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"891.4206343165632`", " ", "\[Tau]"}], "]"}]}], "-", 
    RowBox[{"0.00006903795998268664`", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", 
       RowBox[{"204.18105682405945`", " ", "R"}]}], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"1167.4498567871594`", " ", "\[Tau]"}], "]"}]}], "+", 
    RowBox[{"0.0003438253839664876`", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", 
       RowBox[{"252.40681534975678`", " ", "R"}]}], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"1443.191180492774`", " ", "\[Tau]"}], "]"}]}], "-", 
    RowBox[{"0.000059488643517035554`", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", 
       RowBox[{"300.6063739932578`", " ", "R"}]}], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"1718.782700640734`", " ", "\[Tau]"}], "]"}]}], "-", 
    RowBox[{"0.00019377395249118662`", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", 
       RowBox[{"348.790568293473`", " ", "R"}]}], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"1994.286371795023`", " ", "\[Tau]"}], "]"}]}], "-", 
    RowBox[{"0.0000277625321881599`", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", 
       RowBox[{"396.9649829607916`", " ", "R"}]}], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2269.7341257589414`", " ", "\[Tau]"}], "]"}]}], "+", 
    RowBox[{"0.00009174065492709827`", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", 
       RowBox[{"445.13278871916265`", " ", "R"}]}], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2545.14409184026`", " ", "\[Tau]"}], "]"}]}], "+", 
    RowBox[{"0.000020373777654928174`", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", 
       RowBox[{"493.29591936430865`", " ", "R"}]}], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2820.527326939038`", " ", "\[Tau]"}], "]"}]}], "-", 
    RowBox[{"0.00002426077177379726`", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", 
       RowBox[{"541.4556213166621`", " ", "R"}]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"1.`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"151.694478686132`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.4808136924790622`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"303.388957372264`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.2692412604502088`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"455.08343605839593`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.6220440973074315`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"606.777914744528`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.2716902794135342`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"910.1668721167919`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.19011688289480597`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1061.8613508029239`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.008087586009212494`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1213.555829489056`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.08839483998212676`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1365.2503081751877`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.13532035698919814`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1668.639265547452`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.17718969245981636`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1820.3337442335837`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.10264064651931093`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1972.0282229197157`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.00820725733944598`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2123.7227016058478`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.08968786409682436`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2427.111658978112`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.19059507429755532`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2578.8061376642436`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.2044405662901268`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2730.5006163503754`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.11074960306312849`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2882.1950950365076`", " ", "\[Tau]"}], "]"}]}]}], ")"}]}], 
    "+", 
    RowBox[{"0.000019598404141013174`", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", 
       RowBox[{"589.6127340998465`", " ", "R"}]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"1.`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"151.694478686132`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.4791248816126812`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"303.388957372264`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.2653414027993306`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"455.08343605839593`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.618407944200076`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"606.777914744528`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.2678227090029457`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"910.1668721167919`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.18629685774699364`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1061.8613508029239`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.007866857365756466`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1213.555829489056`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.08520522206716505`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1365.2503081751877`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.12721040002021733`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1668.639265547452`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.1637032613095209`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1820.3337442335837`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.09275635917686413`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1972.0282229197157`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.007206731120932618`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2123.7227016058478`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.07178405509145275`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2427.111658978112`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.14070341133075223`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2578.8061376642436`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.13205672235957908`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2730.5006163503754`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.05487884746694193`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2882.1950950365076`", " ", "\[Tau]"}], "]"}]}]}], ")"}]}], 
    "-", 
    RowBox[{"0.00001610072022234558`", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", 
       RowBox[{"637.7678438480598`", " ", "R"}]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"1.`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"151.694478686132`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.477807597145911`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"303.388957372264`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.2623099440738585`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"455.08343605839593`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.6155954123727397`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"606.777914744528`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.2648756606324192`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"910.1668721167919`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.18341637861052934`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1061.8613508029239`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.007702550608308318`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1213.555829489056`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.08286810619664553`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1365.2503081751877`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.12151822913383507`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1668.639265547452`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.1545114652715616`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1820.3337442335837`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.08626352562187058`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1972.0282229197157`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.006579794241009311`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2123.7227016058478`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.06209561669826931`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2427.111658978112`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.11680546631892301`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2578.8061376642436`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.10343358537379475`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2730.5006163503754`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.03935951114594756`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2882.1950950365076`", " ", "\[Tau]"}], "]"}]}]}], ")"}]}], 
    "+", 
    RowBox[{"0.000013418614275349493`", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", 
       RowBox[{"685.9213721954387`", " ", "R"}]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"1.`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"151.694478686132`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.476760149661218`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"303.388957372264`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.2599059707686233`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"455.08343605839593`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.613373662950596`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"606.777914744528`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.26257453654268803`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"910.1668721167919`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.18118522460398473`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1061.8613508029239`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.007576521296962482`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1213.555829489056`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.08109651389957503`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1365.2503081751877`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.11733668493756928`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1668.639265547452`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.14789765253570938`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1820.3337442335837`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.08170835539473109`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1972.0282229197157`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.006153457950478822`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2123.7227016058478`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.0560687168200475`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2427.111658978112`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.10288777297237127`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2578.8061376642436`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.08820685616438806`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2730.5006163503754`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.03212432458368345`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2882.1950950365076`", " ", "\[Tau]"}], "]"}]}]}], ")"}]}], 
    "-", 
    RowBox[{"0.000011322875634289368`", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", 
       RowBox[{"734.0736302003921`", " ", "R"}]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"1.`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"151.694478686132`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.4759134565352954`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"303.388957372264`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.257966944713516`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"455.08343605839593`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.6115871390795639`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"606.777914744528`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.2607411319675767`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"910.1668721167919`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.17941873936285518`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1061.8613508029239`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.007477496491304127`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1213.555829489056`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.07971714982637926`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1365.2503081751877`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.11415725289513237`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1668.639265547452`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.14294529681475587`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1820.3337442335837`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.07835932660786739`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1972.0282229197157`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.005846830339508737`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2123.7227016058478`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.051984945600017686`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2427.111658978112`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.09383807730461853`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2578.8061376642436`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.07881590291462569`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2730.5006163503754`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.02796380907927036`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2882.1950950365076`", " ", "\[Tau]"}], "]"}]}]}], ")"}]}], 
    "+", 
    RowBox[{"9.658390629103357`*^-6", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", 
       RowBox[{"782.2248523633156`", " ", "R"}]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"1.`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"151.694478686132`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.4752192378542055`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"303.388957372264`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.2563798963969652`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"455.08343605839593`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.6101285642444395`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"606.777914744528`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.25925534317384624`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"910.1668721167919`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.17799438777806456`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1061.8613508029239`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.0073981331483105725`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1213.555829489056`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.07861958263129892`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1365.2503081751877`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.11167360554882277`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1668.639265547452`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.13912172574627815`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1820.3337442335837`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.07580899411013936`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1972.0282229197157`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.005617095180921621`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2123.7227016058478`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.04905252785008825`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2427.111658978112`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.08751977963626584`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2578.8061376642436`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.07248213733149562`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2730.5006163503754`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.02527685728336434`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2882.1950950365076`", " ", "\[Tau]"}], "]"}]}]}], ")"}]}], 
    "-", 
    RowBox[{"8.317407977438596`*^-6", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", 
       RowBox[{"830.375218814106`", " ", "R"}]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"1.`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"151.694478686132`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.4746429188739816`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"303.388957372264`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.2550642852643277`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"455.08343605839593`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.6089219383458598`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"606.777914744528`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.2580336433379141`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"910.1668721167919`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.17682800499979198`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1061.8613508029239`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.00733346157813428`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1213.555829489056`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.07773035964293135`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1365.2503081751877`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.10969072309557132`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1668.639265547452`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.13609698300538883`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1820.3337442335837`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.07381290888639498`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1972.0282229197157`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.0054395097309991956`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2123.7227016058478`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.04685639906273588`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2427.111658978112`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.08288289245029862`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2578.8061376642436`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.06794534903646317`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2730.5006163503754`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.023408030415830484`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2882.1950950365076`", " ", "\[Tau]"}], "]"}]}]}], ")"}]}], 
    "+", 
    RowBox[{"7.223348004768298`*^-6", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", 
       RowBox[{"878.5248702062701`", " ", "R"}]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"1.`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"151.694478686132`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.474159208098472`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"303.388957372264`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.2539614116399187`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"455.08343605839593`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.6079121574943204`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"606.777914744528`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.2570163818047276`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"910.1668721167919`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.17586009027116656`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1061.8613508029239`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.007280010278189054`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1213.555829489056`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.07699888479043704`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1365.2503081751877`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.10807888175184967`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1668.639265547452`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.13365626378713533`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1820.3337442335837`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.07221583215286984`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1972.0282229197157`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.00529880504691418`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2123.7227016058478`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.04515827742344463`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2427.111658978112`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.07935177644621272`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2578.8061376642436`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.06455174975925665`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2730.5006163503754`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.02203941605263007`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2882.1950950365076`", " ", "\[Tau]"}], "]"}]}]}], ")"}]}], 
    "-", 
    RowBox[{"6.320678643657599`*^-6", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", 
       RowBox[{"926.673917969352`", " ", "R"}]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"1.`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"151.694478686132`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.473749256244887`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"303.388957372264`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.253027661240299`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"455.08343605839593`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.6070584553244943`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"606.777914744528`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.25615997929696754`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"910.1668721167919`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.17504753592778405`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1061.8613508029239`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.0072352888680796215`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1213.555829489056`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.07638927563928703`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1365.2503081751877`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.10674865654587302`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1668.639265547452`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.13165403427843986`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1820.3337442335837`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.07091464502467912`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1972.0282229197157`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.005185065009625653`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2123.7227016058478`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.04381179317198446`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2427.111658978112`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.0765848333900069`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2578.8061376642436`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.06192871957366655`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2730.5006163503754`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.020998273558188212`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2882.1950950365076`", " ", "\[Tau]"}], "]"}]}]}], ")"}]}], 
    "+", 
    RowBox[{"5.568404607179803`*^-6", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", 
       RowBox[{"974.8224515239797`", " ", "R"}]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"1.`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"151.694478686132`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.473398781097057`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"303.388957372264`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.252230072132946`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"455.08343605839593`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.6063301337657239`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"606.777914744528`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.25543196346625124`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"910.1668721167919`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.17435844494351244`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1061.8613508029239`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.007197469715003004`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1213.555829489056`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.07587544881577968`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1365.2503081751877`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.10563654848246548`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1668.639265547452`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.12998840777933554`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1820.3337442335837`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.06983830501214822`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1972.0282229197157`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.0050915811675715265`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2123.7227016058478`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.0427221960777015`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2427.111658978112`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.07436678492996986`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2578.8061376642436`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.05984855639157663`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2730.5006163503754`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.020182745712817567`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2882.1950950365076`", " ", "\[Tau]"}], "]"}]}]}], ")"}]}], 
    "-", 
    RowBox[{"4.935774757376838`*^-6", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", 
       RowBox[{"1022.9705434599481`", " ", "R"}]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"1.`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"151.694478686132`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.4730968000918259`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"303.388957372264`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.251543352971748`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"455.08343605839593`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.6057037109041375`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"606.777914744528`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.25480771593965784`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"910.1668721167919`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.1737687776716`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1061.8613508029239`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.00716518491957204`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1213.555829489056`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.07543803804093487`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1365.2503081751877`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.10469632580004937`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1668.639265547452`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.12858607175551337`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1820.3337442335837`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.06893636707165572`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1972.0282229197157`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.005013660620756994`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2123.7227016058478`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.041825529328559014`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2427.111658978112`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.07255539202157295`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2578.8061376642436`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.05816441940589556`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2730.5006163503754`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.01952894017968457`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2882.1950950365076`", " ", "\[Tau]"}], "]"}]}]}], ")"}]}], 
    "+", 
    RowBox[{"4.399388442430159`*^-6", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", 
       RowBox[{"1071.1182533181075`", " ", "R"}]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"1.`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"151.694478686132`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.4728347553598793`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"303.388957372264`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.2509478330085693`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"455.08343605839593`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.6051609713832712`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"606.777914744528`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.254268284976295`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"910.1668721167919`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.17326012100669125`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1061.8613508029239`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.007137392914063909`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1213.555829489056`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.07506239726985321`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1365.2503081751877`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.10389359966269772`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1668.639265547452`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.1273930311461837`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1820.3337442335837`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.06817208855111935`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1972.0282229197157`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.004947927427518589`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2123.7227016058478`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.04107711935689877`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2427.111658978112`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.07105301728814795`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2578.8061376642436`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.05677746613109818`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2730.5006163503754`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.018994788145777895`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2882.1950950365076`", " ", "\[Tau]"}], "]"}]}]}], ")"}]}], 
    "-", 
    RowBox[{"3.941205631717926`*^-6", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", 
       RowBox[{"1119.2656303963697`", " ", "R"}]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"1.`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"151.694478686132`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.4726058981427281`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"303.388957372264`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.2504280248935251`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"455.08343605839593`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.6046876063110054`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"606.777914744528`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.2537988808217138`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"910.1668721167919`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.1728181677691991`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1061.8613508029239`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.007113288485721282`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1213.555829489056`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.07473726992460997`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1365.2503081751877`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.10320231118749769`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1668.639265547452`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.12636871317868745`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1820.3337442335837`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.06751811900226327`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1972.0282229197157`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.004891894819351219`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2123.7227016058478`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.040444859827144665`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2427.111658978112`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.06979049576221381`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2578.8061376642436`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.055618795647948756`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2730.5006163503754`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.018551486986166262`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2882.1950950365076`", " ", "\[Tau]"}], "]"}]}]}], ")"}]}], 
    "+", 
    RowBox[{"3.5471537257177277`*^-6", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", 
       RowBox[{"1167.4127158615058`", " ", "R"}]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"1.`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"151.694478686132`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.472404848235717`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"303.388957372264`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.2499715992352773`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"455.08343605839593`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.6042722469563946`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"606.777914744528`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.2533878195904621`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"910.1668721167919`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.17243165774781077`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1061.8613508029239`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.007092240683926371`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1213.555829489056`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.07445387997020841`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1365.2503081751877`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.10260239020761322`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1668.639265547452`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.12548209439622993`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1820.3337442335837`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.06695371297589331`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1972.0282229197157`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.004843693357766652`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2123.7227016058478`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.03990511312270651`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2427.111658978112`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.06871752028879043`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2578.8061376642436`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.05463896183008715`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2730.5006163503754`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.018178672627188842`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2882.1950950365076`", " ", "\[Tau]"}], "]"}]}]}], ")"}]}], 
    "-", 
    RowBox[{"3.2061360718384074`*^-6", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", 
       RowBox[{"1215.5595443591656`", " ", "R"}]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"1.`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"151.694478686132`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.472227273775983`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"303.388957372264`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.2495686412451026`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"455.08343605839593`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.603905766847812`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"606.777914744528`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.25302576849096275`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"910.1668721167919`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.17209162605110073`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1061.8613508029239`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.0070737490930387`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1213.555829489056`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.07420529753702101`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1365.2503081751877`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.10207815553352394`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1668.639265547452`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.12470908679351994`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1820.3337442335837`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.06646287435290102`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1972.0282229197157`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.004801892629942753`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2123.7227016058478`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.03944011294724807`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2427.111658978112`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.06779666759899722`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2578.8061376642436`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.053801597765365604`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2730.5006163503754`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.017861554218771152`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2882.1950950365076`", " ", "\[Tau]"}], "]"}]}]}], ")"}]}], 
    "+", 
    RowBox[{"2.9093157815548093`*^-6", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", 
       RowBox[{"1263.7061452559228`", " ", "R"}]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"1.`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"151.694478686132`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.4720696551991748`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"303.388957372264`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.249211104040401`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"455.08343605839593`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.6035807701620985`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"606.777914744528`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.25270519759649285`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"910.1668721167919`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.17179086040288483`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1061.8613508029239`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.0070574124774444025`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1213.555829489056`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.07398598757822662`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1365.2503081751877`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.1016171976395014`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1668.639265547452`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.12403073169974145`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1820.3337442335837`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.06603308915310031`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1972.0282229197157`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.0047653810510184455`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2123.7227016058478`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.03903626433131465`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2427.111658978112`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.06699955372214364`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2578.8061376642436`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.05307938765713047`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2730.5006163503754`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.017589140064044773`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2882.1950950365076`", " ", "\[Tau]"}], "]"}]}]}], ")"}]}], 
    "-", 
    RowBox[{"2.649591310823882`*^-6", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", 
       RowBox[{"1311.8525436078576`", " ", "R"}]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"1.`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"151.694478686132`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.4719291089848199`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"303.388957372264`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.2488924012534046`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"455.08343605839593`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.6032912115611915`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"606.777914744528`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.25241997575955655`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"910.1668721167919`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.17152350322547355`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1061.8613508029239`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.007042905930692036`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1213.555829489056`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.07379148319281963`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1365.2503081751877`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.1012095829810218`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1668.639265547452`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.12343192560614695`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1820.3337442335837`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.06565444072517682`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1972.0282229197157`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.004733282875711466`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2123.7227016058478`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.03868299957876281`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2427.111658978112`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.06630428398371278`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2578.8061376642436`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.0524514370335202`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2730.5006163503754`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.017353099203826605`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2882.1950950365076`", " ", "\[Tau]"}], "]"}]}]}], ")"}]}], 
    "+", 
    RowBox[{"2.4212076194630666`*^-6", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", 
       RowBox[{"1359.998760923438`", " ", "R"}]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"1.`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"151.694478686132`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.4718032544803192`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"303.388957372264`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.2486070997640786`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"455.08343605839593`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.6030321101812438`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"606.777914744528`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.25216506877407396`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"910.1668721167919`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.1712847557880149`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1061.8613508029239`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.007029963976628821`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1213.555829489056`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.07361814550115948`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1365.2503081751877`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.10084727744417914`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1668.639265547452`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.12290050451784407`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1820.3337442335837`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.06531897963930407`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1972.0282229197157`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.004704899679984002`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2123.7227016058478`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.03837198941175925`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2427.111658978112`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.0656937167915672`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2578.8061376642436`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.051901506580434395`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2730.5006163503754`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.017147008145740616`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2882.1950950365076`", " ", "\[Tau]"}], "]"}]}]}], ")"}]}], 
    "-", 
    RowBox[{"2.2194645095132914`*^-6", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", 
       RowBox[{"1408.1448157699185`", " ", "R"}]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"1.`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"151.694478686132`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.47169011217208`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"303.388957372264`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.2483506853634923`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"455.08343605839593`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.6027993319938422`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"606.777914744528`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.2519363111511661`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"910.1668721167919`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.1710706554305009`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1061.8613508029239`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.007018367905006243`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1213.555829489056`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.07346298465814652`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1365.2503081751877`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.10052372201714477`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1668.639265547452`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.12242657498503805`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1820.3337442335837`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.06502026701080056`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1972.0282229197157`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.004679668317836689`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2123.7227016058478`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.03809658727285656`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2427.111658978112`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.06515425406324449`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2578.8061376642436`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.05141679635174543`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2730.5006163503754`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.01696583900133764`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2882.1950950365076`", " ", "\[Tau]"}], "]"}]}]}], ")"}]}], 
    "+", 
    RowBox[{"2.040495505817351`*^-6", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", 
       RowBox[{"1456.2907242594695`", " ", "R"}]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"1.`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"151.694478686132`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.4715880251912998`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"303.388957372264`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.2481193821969174`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"455.08343605839593`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.6025894224489801`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"606.777914744528`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.25173023161716646`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"910.1668721167919`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.17087790585442061`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1061.8613508029239`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.007007936164733179`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1213.555829489056`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.07332352473224787`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1365.2503081751877`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.10023351606570052`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1668.639265547452`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.12200201802979643`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1820.3337442335837`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.06475303826030358`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1972.0282229197157`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.0046571302050168`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2123.7227016058478`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.03785143036923245`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2427.111658978112`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.06467498128656918`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2578.8061376642436`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.050987090479153896`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2730.5006163503754`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.016805603468059187`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2882.1950950365076`", " ", "\[Tau]"}], "]"}]}]}], ")"}]}], 
    "-", 
    RowBox[{"0.00794523284599666`", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", 
       RowBox[{"58.71959350123305`", " ", "R"}]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"1.`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"151.694478686132`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"6.378156561385593`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"303.388957372264`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"1.183253978363048`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"455.08343605839593`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.21056415776788412`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"606.777914744528`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.031188048867034145`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"910.1668721167919`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.014865026171749786`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1061.8613508029239`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.0004526068218027539`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1213.555829489056`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.0036565256425638583`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1365.2503081751877`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.0032316759609582885`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1668.639265547452`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.003257017536711864`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1820.3337442335837`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.0014525514339869573`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1972.0282229197157`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.0000888577786147942`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2123.7227016058478`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.0005379279271004676`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2427.111658978112`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.0008026463690367063`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2578.8061376642436`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.0005561303170091026`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2730.5006163503754`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.00016199747543471204`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2882.1950950365076`", " ", "\[Tau]"}], "]"}]}]}], ")"}]}], 
    "+", 
    RowBox[{"0.0014722135619245128`", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", 
       RowBox[{"107.51148460431914`", " ", "R"}]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"1.`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"151.694478686132`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.8251782764863955`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"303.388957372264`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"2.586620213884637`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"455.08343605839593`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"21.931663017745684`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"606.777914744528`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.1959801322829929`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"910.1668721167919`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.07959931216531532`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1061.8613508029239`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.002223975517351148`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1213.555829489056`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.017044918825353892`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1365.2503081751877`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.014192019376216624`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1668.639265547452`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.014047381067690892`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1820.3337442335837`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.006179760742768335`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1972.0282229197157`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.000374046961216112`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2123.7227016058478`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.0022302136420882363`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2427.111658978112`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.003309230982209561`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2578.8061376642436`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.0022822874694263143`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2730.5006163503754`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.0006622390330204779`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2882.1950950365076`", " ", "\[Tau]"}], "]"}]}]}], ")"}]}], 
    "-", 
    RowBox[{"0.0005611689226912163`", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", 
       RowBox[{"155.9049462650388`", " ", "R"}]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"1.`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"151.694478686132`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.6145714131381783`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"303.388957372264`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.6348367801461237`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"455.08343605839593`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.084893369951425`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"606.777914744528`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"5.684509647799232`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"910.1668721167919`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.38973921964475194`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1061.8613508029239`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.0078077841663200176`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1213.555829489056`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.05150686730065647`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1365.2503081751877`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.03732211925936782`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1668.639265547452`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.03559758357332866`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1820.3337442335837`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.01524687097333745`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1972.0282229197157`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.0009045415996252294`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2123.7227016058478`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.005245872081387645`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2427.111658978112`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.007707611474846556`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2578.8061376642436`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.005273027364198845`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2730.5006163503754`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.0015198354109326154`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2882.1950950365076`", " ", "\[Tau]"}], "]"}]}]}], ")"}]}], 
    "+", 
    RowBox[{"0.0002821726662589363`", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", 
       RowBox[{"204.18105682405945`", " ", "R"}]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"1.`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"151.694478686132`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.5499778109011157`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"303.388957372264`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.4430636502269316`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"455.08343605839593`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.8076376310077197`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"606.777914744528`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.6236834605248668`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"910.1668721167919`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.957201339075686`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1061.8613508029239`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.08374788223758177`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1213.555829489056`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.19090741901655173`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1365.2503081751877`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.09072272820997425`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1668.639265547452`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.07982503273071095`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1820.3337442335837`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.03243325955839557`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1972.0282229197157`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.0018543830231524644`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2123.7227016058478`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.010252881662589938`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2427.111658978112`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.014822999971806104`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2578.8061376642436`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.010010793015911039`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2730.5006163503754`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.0028552094589743846`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2882.1950950365076`", " ", "\[Tau]"}], "]"}]}]}], ")"}]}], 
    "-", 
    RowBox[{"0.00016503414130781576`", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", 
       RowBox[{"252.40681534975678`", " ", "R"}]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"1.`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"151.694478686132`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.5211018905127434`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"303.388957372264`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.366975110818387`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"455.08343605839593`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.7202908919242574`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"606.777914744528`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.4085517824076511`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"910.1668721167919`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.3625888390848704`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1061.8613508029239`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.023165619341147917`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1213.555829489056`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.6716524881736177`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1365.2503081751877`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.28256397502978997`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1668.639265547452`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.19447918212641851`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1820.3337442335837`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.06972962566499391`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1972.0282229197157`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.0036960042031198674`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2123.7227016058478`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.018740547909444336`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2427.111658978112`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.026377810587225884`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2578.8061376642436`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.017450824832606515`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2730.5006163503754`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.004896762736921845`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2882.1950950365076`", " ", "\[Tau]"}], "]"}]}]}], ")"}]}], 
    "+", 
    RowBox[{"0.0001062464213625353`", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", 
       RowBox[{"300.6063739932578`", " ", "R"}]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"1.`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"151.694478686132`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.5055806977746033`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"303.388957372264`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.32822125797449`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"455.08343605839593`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.679617940900133`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"606.777914744528`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.34306834305350953`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"910.1668721167919`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.2698337566471835`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1061.8613508029239`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.013575483938953992`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1213.555829489056`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.19188898531370885`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1365.2503081751877`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"1.6608059511222852`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1668.639265547452`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.94778398381623`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1820.3337442335837`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.19174199613645945`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1972.0282229197157`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.008205237686787409`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2123.7227016058478`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.03458254966896665`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2427.111658978112`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.04638734139400969`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2578.8061376642436`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.029640995934401435`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2730.5006163503754`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.008102799961578843`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2882.1950950365076`", " ", "\[Tau]"}], "]"}]}]}], ")"}]}], 
    "-", 
    RowBox[{"0.0000731084776651612`", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", 
       RowBox[{"348.790568293473`", " ", "R"}]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"1.`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"151.694478686132`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.4962444261683587`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"303.388957372264`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.305587103465594`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"455.08343605839593`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.6569337405278117`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"606.777914744528`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.3124443900610633`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"910.1668721167919`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.2333328744454965`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1061.8613508029239`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.01083305230714274`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1213.555829489056`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.13355264144755352`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1365.2503081751877`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.3190333516793603`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1668.639265547452`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.6924931126806612`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1820.3337442335837`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"2.738506358789191`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1972.0282229197157`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.03231186168181354`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2123.7227016058478`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.07158913861231095`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2427.111658978112`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.08652360010115083`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2578.8061376642436`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.051744593766755054`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2730.5006163503754`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.013513043600470653`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2882.1950950365076`", " ", "\[Tau]"}], "]"}]}]}], ")"}]}], 
    "+", 
    RowBox[{"0.000052830844217224665`", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", 
       RowBox[{"396.9649829607916`", " ", "R"}]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"1.`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"151.694478686132`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.4901806026577125`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"303.388957372264`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.291149056868981`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"455.08343605839593`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.6428535385143588`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"606.777914744528`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.29515540299358267`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"910.1668721167919`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.21430953397691743`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1061.8613508029239`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.009565086355139129`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1213.555829489056`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.11134092191926326`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1365.2503081751877`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.2084981780036104`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1668.639265547452`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.3242534086367813`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1820.3337442335837`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.24831727367016`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1972.0282229197157`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.034822746839764045`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2123.7227016058478`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.24039260128431625`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2427.111658978112`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.2001814541523301`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2578.8061376642436`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.10132833494160588`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2730.5006163503754`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.024050855497660603`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2882.1950950365076`", " ", "\[Tau]"}], "]"}]}]}], ")"}]}], 
    "-", 
    RowBox[{"0.00003963880944001793`", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", 
       RowBox[{"445.13278871916265`", " ", "R"}]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"1.`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"151.694478686132`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.4860152720503257`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"303.388957372264`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.2813484709479461`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"455.08343605839593`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.6334629942348945`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"606.777914744528`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.2842756586460867`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"910.1668721167919`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.20286993656522834`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1061.8613508029239`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.00884874407630944`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1213.555829489056`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.09985462397518557`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1365.2503081751877`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.16819347293716633`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1668.639265547452`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.2370641132760181`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1820.3337442335837`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.1524421638876514`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1972.0282229197157`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.014288993976112899`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2123.7227016058478`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.38105599657578554`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2427.111658978112`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"2.1888832712908037`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2578.8061376642436`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.3004638691556373`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2730.5006163503754`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.05221192822530947`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2882.1950950365076`", " ", "\[Tau]"}], "]"}]}]}], ")"}]}], 
    "+", 
    RowBox[{"0.00003063870463003038`", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", 
       RowBox[{"493.29591936430865`", " ", "R"}]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"1.`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"151.694478686132`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.4830287898561452`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"303.388957372264`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"1.2743794113151172`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"455.08343605839593`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.6268658930788464`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"606.777914744528`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.27692164169607913`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"910.1668721167919`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.19535719522689735`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1061.8613508029239`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.008395751543587996`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1213.555829489056`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.09294653023281556`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1365.2503081751877`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.14763285022355013`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1668.639265547452`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.19859243779100805`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1820.3337442335837`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.11926664515740011`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1972.0282229197157`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.010028630095826238`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2123.7227016058478`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.13312246981744602`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2427.111658978112`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.35549744945161005`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2578.8061376642436`", " ", "\[Tau]"}], "]"}]}], "-", 
       RowBox[{"0.7225272446643678`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2730.5006163503754`", " ", "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"0.3337607074658974`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2882.1950950365076`", " ", "\[Tau]"}], "]"}]}]}], ")"}]}], 
    "-", 
    RowBox[{"8.756894200721704`*^-6", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", 
       RowBox[{"541.4556213166621`", " ", "R"}]}], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"3095.890957736752`", " ", "\[Tau]"}], "]"}]}], "+", 
    RowBox[{"3.0724343338853946`*^-6", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", 
       RowBox[{"589.6127340998465`", " ", "R"}]}], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"3371.2397843933636`", " ", "\[Tau]"}], "]"}]}], "-", 
    RowBox[{"1.241796889841853`*^-6", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", 
       RowBox[{"637.7678438480598`", " ", "R"}]}], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"3646.577158259366`", " ", "\[Tau]"}], "]"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.855846118596631*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"4a8487b1-58aa-4a62-aae9-d35181593c3f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["U", "\[Theta]"], "[", 
       RowBox[{"R", ",", "\[Tau]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"R", ",", "0", ",", 
        SubscriptBox["R", "0"]}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.002"}], ",", "0.002"}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ImageSize", "\[Rule]", "600"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"\"\<\[Tau] = \>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"NumberForm", "[", 
            RowBox[{"\[Tau]", ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "5"}], "}"}]}], "]"}], "]"}], "<>", 
          "\"\<s\>\""}], ",", "Black", ",", 
         RowBox[{"FontSize", "\[Rule]", "25"}], ",", 
         RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}]}], 
        "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"Frame", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"True", ",", "False"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"FrameStyle", "\[Rule]", "Black"}], ",", "\[IndentingNewLine]", 
      
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
          "\"\<\!\(\*StyleBox[\"R\",FontSlant->\"Italic\"]\) (m)\>\"", ",", 
           "Black", ",", 
           RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
           RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}]}], 
          "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[\(U\), \(\[CapitalTheta]\)]\) (m)\>\"", ",",
            "Black", ",", 
           RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
           RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}]}], 
          "]"}]}], "}"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"BaseStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Black", ",", 
         RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
         RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}]}], 
        "}"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Directive", "[", "Red", "]"}], "}"}]}]}], "]"}], 
    "\[IndentingNewLine]", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Tau]", ",", "0", ",", 
     SubscriptBox["t", "end"]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.855828962348763*^9, 3.8558290460720882`*^9}, {
   3.855829105901742*^9, 3.855829142225438*^9}, {3.855830329046487*^9, 
   3.8558303432373257`*^9}, {3.855831125859817*^9, 3.855831127084263*^9}, {
   3.85583126843287*^9, 3.855831269990749*^9}, {3.855831498426303*^9, 
   3.855831532971221*^9}, 3.855831666083763*^9, 3.855835053855773*^9, {
   3.855835279107641*^9, 3.855835306798072*^9}, {3.85583536868032*^9, 
   3.855835370105597*^9}, {3.8558354031702137`*^9, 3.855835542731525*^9}, 
   3.8558394910779037`*^9},
 CellLabel->"In[60]:=",ExpressionUUID->"16bb44bf-3383-466a-99ea-35834f47d0a2"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Tau]$$ = 0.006394804227828979, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Tau]$$], 0, 0.02071}}, Typeset`size$$ = {
    900., {302., 309.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Tau]$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        Plot[
         $CellContext`U\[UnderBracket]Subscript\[UnderBracket]\[Theta][$\
CellContext`R, $CellContext`\[Tau]$$], {$CellContext`R, 
          0, $CellContext`R\[UnderBracket]Subscript\[UnderBracket]0}, 
         PlotRange -> {-0.002, 0.002}, ImageSize -> 600, PlotLabel -> Style[
           StringJoin["\[Tau] = ", 
            ToString[
             NumberForm[$CellContext`\[Tau]$$, {5, 5}]], "s"], Black, 
           FontSize -> 25, FontFamily -> "Times New Roman"], 
         Frame -> {{True, False}, {True, False}}, FrameStyle -> Black, 
         FrameLabel -> {
           Style[
           "\!\(\*StyleBox[\"R\",FontSlant->\"Italic\"]\) (m)", Black, 
            FontSize -> 20, FontFamily -> "Times New Roman"], 
           Style[
           "\!\(\*SubscriptBox[\(U\), \(\[CapitalTheta]\)]\) (m)", Black, 
            FontSize -> 20, FontFamily -> "Times New Roman"]}, 
         BaseStyle -> {
          Black, FontSize -> 20, FontFamily -> "Times New Roman"}, PlotStyle -> {
           Directive[Red]}]], 
      "Specifications" :> {{$CellContext`\[Tau]$$, 0, 0.02071}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{966., {364., 372.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.855846167313093*^9, 3.855846181805224*^9}},
 CellLabel->"Out[60]=",ExpressionUUID->"798023cb-9492-4c47-a82d-1accb62e5943"],

Cell[BoxData[
 TemplateBox[{
  "Plot", "plln", 
   "\"Limiting value \\!\\(\\*RowBox[{\\\"R\[UnderBracket]Subscript\
\[UnderBracket]0\\\"}]\\) in \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"R\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"R\[UnderBracket]Subscript\[UnderBracket]0\\\"}], \\\"}\\\"}]\\) is not a \
machine-sized real number.\"", 2, 92, 107, 33531904790950035422, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.857632683586629*^9},
 CellLabel->"",ExpressionUUID->"bc7a1cf8-b8bf-4d16-be9c-304f1cc228f4"],

Cell[BoxData[
 TemplateBox[{
  "Show", "gtype", 
   "\"\\!\\(\\*RowBox[{\\\"Plot\\\"}]\\) is not a type of graphics.\"", 2, 92,
    108, 33531904790950035422, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8576326836166773`*^9},
 CellLabel->"",ExpressionUUID->"781c7fc0-1623-4b4c-8494-65327829e01c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "3D plot of the solution",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    SubscriptBox["u", "\[Theta]"]}], TraditionalForm]],ExpressionUUID->
  "f789c6f9-6cef-4c49-95ac-9167d2c3ae5d"]
}], "Subsection",
 CellChangeTimes->{{3.85583184843325*^9, 
  3.855831857808909*^9}},ExpressionUUID->"e6f08058-f070-4739-914d-\
5d6681279154"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PltUTheta3D", " ", "=", " ", 
  RowBox[{"Plot3D", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["U", "\[Theta]"], "[", 
     RowBox[{"R", ",", "\[Tau]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Tau]", ",", "0", ",", 
      SubscriptBox["t", "end"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"R", ",", "0", ",", 
      SubscriptBox["R", "0"]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ColorFunction", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Blend", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[
                 0.22999999999999982`, 0.29899999999999977`, 
                  0.7539999999999997], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.1533333333333332, 0.1993333333333332, 0.5026666666666665],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 
                 RowBox[{
                  "0.22999999999999982`", ",", "0.29899999999999977`", ",", 
                   "0.7539999999999997`"}], "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[
                  0.22999999999999982`, 0.29899999999999977`, 
                   0.7539999999999997]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[
            0.22999999999999982`, 0.29899999999999977`, 0.7539999999999997],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[
                 0.2836943237507675, 0.3846393738868723, 0.8265719197385752], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.18912954916717833`, 0.2564262492579149, 0.5510479464923835],
               
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 
                 RowBox[{
                  "0.2836943237507675`", ",", "0.3846393738868723`", ",", 
                   "0.8265719197385752`"}], "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[
                  0.2836943237507675, 0.3846393738868723, 0.8265719197385752]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[
            0.2836943237507675, 0.3846393738868723, 0.8265719197385752],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[
                 0.34128786345814, 0.46795213120396734`, 0.8874939456315885], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.22752524230542667`, 0.3119680874693116, 0.591662630421059],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 
                 RowBox[{
                  "0.34128786345814`", ",", "0.46795213120396734`", ",", 
                   "0.8874939456315885`"}], "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[
                  0.34128786345814, 0.46795213120396734`, 0.8874939456315885]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[
            0.34128786345814, 0.46795213120396734`, 0.8874939456315885],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[
                 0.40295662302450325`, 0.5474691874303457, 
                  0.9352898575453745], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.26863774868300216`, 0.36497945828689715`, 
                 0.6235265716969164],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 
                 RowBox[{
                  "0.40295662302450325`", ",", "0.5474691874303457`", ",", 
                   "0.9352898575453745`"}], "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[
                  0.40295662302450325`, 0.5474691874303457, 
                   0.9352898575453745]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[
            0.40295662302450325`, 0.5474691874303457, 0.9352898575453745],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[
                 0.46825778499999665`, 0.6215505752814867, 
                  0.9688853377433658], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.31217185666666447`, 0.41436705018765785`, 
                 0.6459235584955773],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 RowBox[{
                  "0.46825778499999665`", ",", "0.6215505752814867`", ",", 
                   "0.9688853377433658`"}], "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[
                  0.46825778499999665`, 0.6215505752814867, 
                   0.9688853377433658]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[
            0.46825778499999665`, 0.6215505752814867, 0.9688853377433658],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[
                 0.5362638205709569, 0.6885319032850463, 0.9876300982714906], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.35750921371397126`, 0.4590212688566976, 0.6584200655143271],
               
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 
                 RowBox[{
                  "0.5362638205709569`", ",", "0.6885319032850463`", ",", 
                   "0.9876300982714906`"}], "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[
                  0.5362638205709569, 0.6885319032850463, 0.9876300982714906]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[
            0.5362638205709569, 0.6885319032850463, 0.9876300982714906],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[
                 0.6056937666087167, 0.7468047079174234, 0.9913051994451706], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.4037958444058111, 0.4978698052782823, 0.6608701329634471],
               FrameTicks->None,
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 
                 RowBox[{
                  "0.6056937666087167`", ",", "0.7468047079174234`", ",", 
                   "0.9913051994451706`"}], "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[
                  0.6056937666087167, 0.7468047079174234, 0.9913051994451706]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[
            0.6056937666087167, 0.7468047079174234, 0.9913051994451706],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[
                 0.6750269913669033, 0.7948718219031321, 0.9801155288931463], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               FrameStyle->RGBColor[
                0.4500179942446022, 0.5299145479354215, 0.6534103525954309],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 
                 RowBox[{
                  "0.6750269913669033`", ",", "0.7948718219031321`", ",", 
                   "0.9801155288931463`"}], "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[
                  0.6750269913669033, 0.7948718219031321, 0.9801155288931463]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[
            0.6750269913669033, 0.7948718219031321, 0.9801155288931463],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[
                 0.7425944217361238, 0.8313907083911475, 0.9546681491396606], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.49506294782408256`, 0.554260472260765, 0.6364454327597737],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 
                 RowBox[{
                  "0.7425944217361238`", ",", "0.8313907083911475`", ",", 
                   "0.9546681491396606`"}], "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[
                  0.7425944217361238, 0.8313907083911475, 0.9546681491396606]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[
            0.7425944217361238, 0.8313907083911475, 0.9546681491396606],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[
                 0.8066494660818774, 0.8552089878536259, 0.9159378748115107], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.5377663107212516, 0.5701393252357506, 0.6106252498743405],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 
                 RowBox[{
                  "0.8066494660818774`", ",", "0.8552089878536259`", ",", 
                   "0.9159378748115107`"}], "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[
                  0.8066494660818774, 0.8552089878536259, 0.9159378748115107]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[
            0.8066494660818774, 0.8552089878536259, 0.9159378748115107],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[
                 0.8654236525430442, 0.8653930898068188, 0.8652220017562686], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.5769491016953628, 0.5769287265378793, 0.5768146678375125],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 
                 RowBox[{
                  "0.8654236525430442`", ",", "0.8653930898068188`", ",", 
                   "0.8652220017562686`"}], "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[
                  0.8654236525430442, 0.8653930898068188, 0.8652220017562686]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[
            0.8654236525430442, 0.8653930898068188, 0.8652220017562686],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[
                 0.9106157890357767, 0.8380760251029263, 0.7957341087347833], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6070771926905179, 0.5587173500686176, 0.5304894058231889],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 
                 RowBox[{
                  "0.9106157890357767`", ",", "0.8380760251029263`", ",", 
                   "0.7957341087347833`"}], "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[
                  0.9106157890357767, 0.8380760251029263, 0.7957341087347833]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[
            0.9106157890357767, 0.8380760251029263, 0.7957341087347833],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[
                 0.9418775164378905, 0.7979621305248119, 0.7217036926051889], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.627918344291927, 0.531974753683208, 0.48113579507012594`],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 
                 RowBox[{
                  "0.9418775164378905`", ",", "0.7979621305248119`", ",", 
                   "0.7217036926051889`"}], "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[
                  0.9418775164378905, 0.7979621305248119, 0.7217036926051889]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[
            0.9418775164378905, 0.7979621305248119, 0.7217036926051889],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[
                 0.959080312348575, 0.745790952967169, 0.6448346795874556], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6393868748990501, 0.4971939686447794, 0.42988978639163705`],
               
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 
                 RowBox[{
                  "0.959080312348575`", ",", "0.745790952967169`", ",", 
                   "0.6448346795874556`"}], "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[
                  0.959080312348575, 0.745790952967169, 0.6448346795874556]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[0.959080312348575, 0.745790952967169, 0.6448346795874556],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[
                 0.9621941730899576, 0.6824495325197455, 0.5667597793674168], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6414627820599718, 0.4549663550131637, 0.37783985291161126`],
               
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 
                 RowBox[{
                  "0.9621941730899576`", ",", "0.6824495325197455`", ",", 
                   "0.5667597793674168`"}], "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[
                  0.9621941730899576, 0.6824495325197455, 0.5667597793674168]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[
            0.9621941730899576, 0.6824495325197455, 0.5667597793674168],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[
                 0.9513438881735578, 0.608885794307683, 0.4890097317713277], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6342292587823719, 0.40592386287178867`, 0.3260064878475518],
               
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 
                 RowBox[{
                  "0.9513438881735578`", ",", "0.608885794307683`", ",", 
                   "0.4890097317713277`"}], "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[
                  0.9513438881735578, 0.608885794307683, 0.4890097317713277]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[
            0.9513438881735578, 0.608885794307683, 0.4890097317713277],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[
                 0.926842962151432, 0.5259522153988744, 0.41299140092015674`],
                  RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6178953081009547, 0.35063481026591625`, 
                 0.27532760061343786`],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 
                 RowBox[{
                  "0.926842962151432`", ",", "0.5259522153988744`", ",", 
                   "0.41299140092015674`"}], "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[
                  0.926842962151432, 0.5259522153988744, 
                   0.41299140092015674`]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[
            0.926842962151432, 0.5259522153988744, 0.41299140092015674`],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[
                 0.8892129256622827, 0.43406933155379024`, 
                  0.33997734813191627`], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.5928086171081886, 0.2893795543691935, 0.2266515654212775],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 
                 RowBox[{
                  "0.8892129256622827`", ",", "0.43406933155379024`", ",", 
                   "0.33997734813191627`"}], "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[
                  0.8892129256622827, 0.43406933155379024`, 
                   0.33997734813191627`]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[
            0.8892129256622827, 0.43406933155379024`, 0.33997734813191627`],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[
                 0.839191796958454, 0.33229821812545196`, 0.2711117064644712],
                  RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.5594611979723028, 0.22153214541696797`, 0.1807411376429808],
               
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 
                 RowBox[{
                  "0.839191796958454`", ",", "0.33229821812545196`", ",", 
                   "0.2711117064644712`"}], "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[
                  0.839191796958454, 0.33229821812545196`, 
                   0.2711117064644712]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[
            0.839191796958454, 0.33229821812545196`, 0.2711117064644712],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[
                 0.7777336026329164, 0.2145348782235777, 0.207442252956191], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.5184890684219443, 0.14302325214905182`, 
                 0.13829483530412734`],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 
                 RowBox[{
                  "0.7777336026329164`", ",", "0.2145348782235777`", ",", 
                   "0.207442252956191`"}], "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[
                  0.7777336026329164, 0.2145348782235777, 0.207442252956191]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[
            0.7777336026329164, 0.2145348782235777, 0.207442252956191],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[
                 0.7060000000000001, 0.015999999999998966`, 
                  0.15000000000000002`], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.47066666666666673`, 0.010666666666665978`, 
                 0.10000000000000002`],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 
                 RowBox[{
                  "0.7060000000000001`", ",", "0.015999999999998966`", ",", 
                   "0.15000000000000002`"}], "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[
                  0.7060000000000001, 0.015999999999998966`, 
                   0.15000000000000002`]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[
            0.7060000000000001, 0.015999999999998966`, 0.15000000000000002`],
            Editable->False,
            Selectable->False]}], "}"}], ",", "#3"}], "]"}], "&"}], ")"}]}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"MaxRecursion", "\[Rule]", "4"}], ",", 
    RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
    RowBox[{"PlotPoints", "\[Rule]", "50"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "\[Rule]", "800"}], ",", "\[IndentingNewLine]", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", "Black", "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Gray", ",", 
       RowBox[{"PointSize", "[", "Medium", "]"}]}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}]}], 
      "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Tau] (s)\>\"", ",", 
       "\"\<\!\(\*StyleBox[\"R\",FontSlant->\"Italic\"]\) (m)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(U\), \(\[Theta]\)]\) (m)\>\""}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.855831887674893*^9, 3.855831900572575*^9}, {
   3.8558319306342154`*^9, 3.855831946817813*^9}, {3.855832047004147*^9, 
   3.8558320474368277`*^9}, 3.855834269500898*^9, 3.8558366511157827`*^9},
 CellLabel->"In[61]:=",ExpressionUUID->"c2e4c724-2f73-48e1-afd5-499a14c853aa"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJxM3Xc41f//x3EzGYkIWZE9s8k69t6rgRZpaO/4SHuoSEpToYyWikjJiAal
UqFpRClFokIDv+8fHs/X76/Pdd0+XZzzfr/P/TrOeb2eb+X5KwIW8HBxcf0U
5OLi/d9/d4q46EQKD9lUbNZtG2iVsj001dtn8/sHJetmSDzry7fiwDeLl6aE
Lv52W868+HNvvie5gGJNZrRwv/Xw3DUmpveDyE/KRLhVpE4tXZ6dsLY3P5T8
94bQQJdfwaU9v/zeNPrOI/9Pxep19PdlpTnHwv6Y3I8kl01fejdp3+bSOVaL
ZFOsF5Frae75uO9GQql08xrL3vxo8iel8lvvTDhS+nRL/CxfrRXkb+Vr09Ur
TpfeTXYubfRdRT6LS0xLelpWqVKE52N+4TXk2wov85brXir9z8S/yeT+WvLb
t2K1suTyS1/xT++O2LqenLP/v/dFx4tKTV6GDR2y3kj+0yY/bcmektKDufPH
VQ5sIq/luaZjur6itGvTIoXe/Fjy5/MmiAiHVpW6eS7XU1oeR37wgeWTiNn3
S8/Jr7Xx1YonL7B2WBO/qqaUa+C2Omf1FvKxITXB9km1pXkt5XmNvlvJT0Xf
Hfft8tPSsOpKs+V628gtv3L3P5n3rFTo2r0yfuHt5EcPnzth3fW8tPh4tUva
Z+Yhw/OmP4mtL43a9uiJyf0d5LZ6WRszBRtLJaOfhNSe3Un+/dqihp3JL0sr
A581R2zdRd5fVVA4VeV16Urr+qi/s3eTcy2pV9iQ/aZUUe3lt0PWe8jX3uxa
pRX9trR23Jv12rJ7ycUeTf3CZfSmNKb/3fCdAeZHTWb+uSDcWKrZ0rJrZkMC
+cSut4KHjj0pbXzQJtqbv4/8fcVO80nFpaU7rn5M3XNwPzs+F6M3zzk9x8bo
+GdFpeUHyB8VL6twf1Bi07r1a/YNz0TyNwruAXEPH9okLvmm76uVxK7n2pna
58+/sDl9fmPoGt6D5LtdC24sC3pt80shZjJnNfOCqBzejrdNNl6HYtuF3jP3
eXWj3ORoq83ZMXE5jb7J5NsPz6l3rnlv8ydmc3RmGXPd0AM+uze32fj3xE9d
rneIncePkieNZrfZ5EZs/THtFPPozpxrosOtNiMvt93gF04h9x2U/at/5Z1N
iNeO2GebmN8suTI3p7fB5nLFTk7aZ+YCdj/exjQ9seEz3c27ePphcsWDhwwt
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
V/A/m8x3XT4yjXoFP+U1PfuJli71Cj6Vq3/S+SbWK7qeU/mjVp7XpF7BswM0
VkTtn0a9gmf9XOMe2ORAvYLH/fnVc8bIjXoFtxiymfvvuBf1in5vh5fAtBZf
6hX8d921c8NtftQr+K5tfW0cCX/qFVyuc9z5qzv8qFdwCaWr6bOzfahX8Pcq
muMkPTypV/DHM+cWCXFcqVdw74/nk9VrHahX8MgdahKScdbUK/ikj+0drs+M
qVfwzFXVe0csNalXlVsV/4q47ONsnXuxcJvUGOoVfHZE6fs0mQXUKzincZPs
1W+p1Cv4f3v3mfcZ3KRewe2+VhcJpT+nXsHviN7yfWvzkXoFb/q9Zv0dp5/U
K7j0rM+pA6Lc5egVfGcTzy0uWyHqFfzz3NVHuD9NoF7R47l93N67axL1Cr7J
UqRFUFaZegVfY9owy+mtGvUKHn5DR3qPoQ71Ct69NOc8X4IB9YqO28Jr4o9L
jKlX8MYH97wUVM2pV/CTSq5XJ1y3pF7BrWrLe/aE2lKv4GOcAkXWjrGnXsFt
btlq3GpxoF7BXQVOyycUO1Gv4D1/VZXvHXShXsE1Dxg375ztRr2CR5xeN/7s
sDv1Cv7scUxV3FRP6hWcZ1raUokMT+oVfPzarNC/Yp7UKzh3SfUp7TB36hXc
72hPSXqsC/UKHlPDc6pkvQP1Cm4kV+Rtf8uSegWX31X3acE0PeoV3OWy2OrD
ld+pV/CcVD0u1+3a1Ct4ZM/8eY6rrahX8MKKyMNmM52oV/C9K3OOz9D2oF7B
VWZL2zd/8qFe0fHkF99ppeNPvYJv2ytv93hKAPUKnnn9QiyfXwD1Cv76nGbA
xlJ/6hW82mZrzu49ftQreHHB3R38l7ypV/BOj38nzx10p17BLdf99s8dcqJe
wafLHz//1syOegU/ddh0zVwJc+oVXKm2QKmKS4969UtLdL09VyLHxiZUblN9
G/09CH/amllu+DaCegWfrV6WHfnpGPUKLt9WaSx5vIR6BQ9+sm6OyqJ66hX8
1EjacJDPJ+oVvOmvYEC7Uz/1Cu670b5+XwUP9Qo+WUj9y9bXItQr+MWLfVdW
V0tSr+Cdi4afDG2Vp17B44e7e/89mUK9gsfIVl6+JKhJvYKf56x7mfxZj3oF
13k0Z42UoRH1Cr4l+G3H9eum1Ct4lm6Q7+S106hXcAE13tb1c2yoV3DFnYdd
luTbUa/gpeuy2l1uOVCv6PjP0W16WulEvYI/EROXkn3kQr2CZ5yNF4p66ka9
gnuNi7n/+JYH9Qo+Li5WVT3Ui3oFnxl18qJ1lDf1Cl5+INDvS7I39Qoe4Lgr
bOUlL+oV/ODs+0GtGR7UK/gm63LjtStdqVdw22+W89QUHalX8O/vPifqrrOi
XsGVFcf9NktjvYK7+1t2u0qzz9vpdbHjacbGObrUK7pOtH8brlC3oV7BnYrf
73DPdqZewRcHK0zve+9JvYKn3dZ/+GGNH/UKXv+de12HZQD1Ct44JF4daRpI
vYJrFK//uSgikHoFryy6+vRIfQD1Cq6/d8vHFef8qVfk3ypuJ33ypV7R61Ha
ZZ7nPU/qFfxD0kLhDAVX6hV82EHy7iR9B+oVPPxcdfDHjZbUK/gluYtzHFUM
qVeSnZsHLcMPcsQfbPTwa/thjV7B9zdGy7TsZH8PwtNF+9Q+jDlFvYLfdK/4
ryGrjHoF1zN9mLtyRSP1Cl6XV1M0bXcn9Qre4O42xjVskHoFvzB+zfT4zXzU
K3jWTWHvl1vHU6/gO1ROLLx4VYp6BS8MGQq+rDiZegWPeXat2G23KvUKHnne
2cbESpt6BXcXfjDs729AvYKvcZQ7lPzamHoFv7/hY355njn1Cm6TfvHN4F0r
6hVcuXthayG/HfUK7v3MIFvZ3IF6BXd5NxwwfrkT9QouqHBt0phsF+oV/HnV
9BMN79yoV/BD41b4xwl4Uq/gawU6eYx5valX9HuT1yyWSvahXsF7ui+m1C7w
pV7BNzRYVy5x9KVewc9cqn90cqwP9Qr+Z1acwfSLntQrON+1cUcDdNyoV/BP
aRekBg6wXsE/lBi/sX7EegV//HNk5uRw1iv4sh2TDDPGVlOv4Be93gn8DNKn
XsHtZx78JlJgS72Cz1hU/9m9yoV6Bbf7dFJF29+begWvXmSfP+DqT72C75Tr
0ZSSD6RewS9XCH9zkAuiXtH19tPhxz+fIOoVfIX/YYfEh4HUK7iBqtYCgewA
6hV87LGXmv/++VGv4KuKBDLN33hTr+BcoVeiRjTcqVfwZO1p/ecUnKhX8O6U
rvZ/vTbUK/jXpeeibv4xpl7plfabBt9K5uSKRr4MamPfD8Kvbbov8GAp6xXc
MXZvdan8aeoVPM6Vm2dDQgX1Cv44hGuNvM0r6hU8yH/r1AOnvlKv4N+b/ixO
m/2HegUfDvf40mIwhnoFF607XGI7Xpx6BffQvyTVe0iGegW/lKJVufWNEvUK
nqISH7bIWp16Bbf8fqCkc7Eu9Qp+dGJ4s9hlQ+oVXFulnrd0iyn1Cl4T0fD8
XM406hU8quOoqepEW+oV/F3R9wfxofbUK7iJjeDAxRJH6hV8X7nHcJuyC/UK
7mAUomO91416BRfYNV416asH9Qr+20yvYNjIm3oFfzitYmOMvi/1Ct7faPnx
uacf9QoevvlBetFhP+oV/LBW4MPLs/yoV3CnwfzJLhq+1Cv49k1LHn7c5EW9
gi8UnlE87jLrFTznS54RbzXrFZx3uCNEsYr1Cu5THpXTvYN9fkWP5/b3tace
vKf9OHBxtfqY9dMMqFfwaYFrz0iI2VGv4A+O1Dn8uOJKvYKnHuZ+u3G1D/UK
/vnAHs7DLtYr+D31j/cWPWa9gj9r3fN2XwPrFXxwo87pVMlg6hX8y1bLO01n
gqhX8KvfXLpV9wdSr+Avj52dOdjjT72CJ64S7i+t9aVewfOMZcNvTPKkXsEL
i3STx3O5UK/g69vqk7besKNewccvFo+TGjSjXrkkL1+zQjqFs1Ku/vCtldzU
K/j3uXm5yqJR1Ct4xkTePTItZ6hX8LkaiybVnL1DvYILvpzhv/Dva+oVfHHM
/q/F57upV/Tv015fTZn1j3oFb5rdqBXTIkC9gueJfo0RCZtAvYIvkxCIrVwj
S72Czw995nhZdQr1Cv5l7pXzO75rUK/g/Xff6f04qk+9gm8dWPMwbqwx9Qpu
/Wxa9WoNc+oV/K6NZ65BuhX1Cn49/W1ompEd9Qp+6rz4FLNrDtQruJTUdFtF
O2fqFTx5gqhEQ4Mr9QqeGtJ1f220B/UKvj5olbjVDy/qFdzIZfV3Pg9f6hV8
2/rBwGPH/ahXcKFttdl9xv7UK/jAIUehtdP9qVf0eP6tu7HkJ+sV3PlE1p0R
Pj/qFfzKqclv1ol6U6/gqsJTQ771s17BF4m/E+N/ynoF3/Jeu90lkvUK/roy
cqKusg71Ct6qeL53//AA9Qr+MPnwimuzDalX8NUljrInilmv4A28S+dfXupG
vYKf+HJiiqaTL/UKHvC83dh2XgD1Cu5RsN7v7v/eL6FXcIF2rZYtC4KpV/Bz
+kJLSwtZr+B/x2pv7gwKpl7By9zqzhQFB1Gv4McWefWOexRAvYL3DWV/GKn1
o17Bd0V6/5b+7kW9gn/YclSA+5kr9Qr+b/UUCaFVDtQreLXErn0JwpbUqzkL
Oq7uXXuY0+z336foh830+RV8q27i2dCGaOoVXOLqFTv1qAzqFfz6unNjJotU
Ua/gYo4/RmKH31Kv4Oa928YXtfdQr+Dv7Y7d37N8mHoF31unrHfvhCD1Cq5w
NcWs/YoE9Qred9B/8vdQeeoVfOy3LQaLVqtQr+Bvb/wWmpKrRb2CvygJyCmN
NKBewZcUFMzdvsCEegW3E+O9e+CpBfUKbl2YOpfvhA31Ci458HCj6v/eR6FX
8PPyz9YqCzhRr+BqTwW23bjrQr2CX5xp4J251516BZ+75tEaFw8v6hW86UZa
Qmm3D/UK3tIbtPhuhh/1Cm6VNJS3dIc/9Qp+7naYTe4w6xVcfjAjmucv6xW8
sHOVY/4Kf+oV/JjNC7neGaxX8J0js893Lma9gjuLeb8SEHanXsF5Llx23ZjN
egVfO+6AoXQR+7wdPuv+sm9VNlrUK3jq6r+bLnPxc9Ar+MY8rxj+VCPqFfxT
qdg9yQB76hX8zHYDF98/rFfwioU6ymerWa/ovF96MVSRzXpF5zHAsSA6g/UK
vmFms6VFLesVvM34wQRP4xDqFfzQOsEtXztZr+APd3De8fAEU6/gBYeUG2r+
974LvYI71SpsW3rGn3oFb/Wu4bbO9aFewRvnnKh+td+degVvX/mb69NkJ+oV
/EElr6+gug31auO02d/OPvvf/w920A9q5KHvB+H3A4NNxj5fQb2CB7b8/js/
IZN6BdfjXVTl5X6XekX/vn4kiK+5iXoFHyyr6Jfh7aVewcXnK9y+bclVjl7B
N6youzzTV5h6Be8e6RqS45pIvYIfU17jpGenSL2C/3O9zGtYpkq9gq/eOTvj
R7gO9Qr+PW5hzan/DKlX8EP37fgy75hSr+D1Hq/3f15vSb2Ch/17L+CUwqFe
we+Eapyet92BegV3vXDhcHuYM/UKbt4WcyrS3Y16Bd840WuBlrUn9Qo+j/tr
+jplH+oV/IFQXOyJxX7UK7h64JwGk33+1Ct48X/aXiuDAqhXcK2irwvaLwRQ
r+DlD38eeBMfQL2CT9i6T8PkMesV/MTVnPjmJNYr+IXkifqpB1iv4O8i+4Qd
utj7K3hS19tMkwDWK/julyZui8rZega4B5eyfGqHOvUKnnPtWGrktPHUK7hd
lMmJxgZj6hX8dLHlGI3XrFfwP97upuNnuVOv4O95Xtr+5fGjXsH/Dm2bKX2H
9YquE+NNW/88YL2CR3Zot+UIhVCv4JsMZDPDD7BewR873Xr8dnYI9QpuKDVH
puAg6xVc6OrClskmQdQr+MHU9OMCYQHUK7j70zG7Iib7Ua/gb+2N+60MPKlX
8FW21QWnyp2pV/Q68uT856xgR71KHteoU6Z/lMMdErRDeDkX9Qr+NOZxfJve
SuoVXHFhiNTfWWepV/A/Rb1BpbPvUa/gKvP9vj1JbaFewRN3Gn5QEuijXsEd
P+/03mLOTb2CnxSJFNUcEqFewc8++qc300uKegVvnmveISimRL2Ct+/bZ8Uz
Vp16BR8IS9/QJa5HvYIHpHQEb0wxol7B1Z6ecaqRN6dewYNjb5rtV7CmXsGX
mAvldd+zo17Be247zHO96Ei9gl+JOKGbku9CvYLne90SePTYnXoFF7HIFm/6
4kW9gucGtX+4/8WXegXfnfHmbZi3P/UKXrpZY6lbeAD1Cq4VKNu0VyCQekU/
hzMubotFIPUKvn6NkkB6B+sVXLNFN2rZuADqFdzXyXke5wLrFfxgzh/3Y7Gs
V/DnUumx8qdZr+h8Ffz3eKSBrWeA393R/ShzF1svCq+Ne6capaVKvYK/lVrj
dF97IvUKPlXhs+htMVPqFV23gWZKhu4O1Cv4Gzmly2cOsF7B+7Sma834f72C
n3r8QKK4kPUKXumfvMvmPusVfOYYi44+ZdYren2prPA9VcV6BV+7Jkh1QQHr
FfyLel7JRe4Q6hVc8IVazsoK1it4WfWlD4HcgdQr8kscoZGXrFfwdM2sb7du
eFGv4I/HJjru8nKlXsHnPOwvm3bGnnp14b334lf7jnH6XHrsA4K/0t+D8Ly5
XVZTLrFewT9NTU1rvHOOegX/d/L759ra+9Qr+IP6qji7B63UK3hbQ+KnAsUf
1Cs459PS+RPseKhXcF3xmpzqG6LUK/i7o9oZPaelqVfwVx82rvbkVaZewa8b
jCxZHKxBvYIfUxddMqtGn3pF/37npbsvLxpTr+j3firOWbbJgnoFD23fnHj5
ng31Cn4uluu/mkp76hXc9MsvxyMvnKhX8C+2/EpHxrpRr+Bq/uf/Vvl5Uq/g
hzry+acn+1Cv4DELT/LpPvWjXsF3/9UVLlYIoF7Bb72OP98hGUi9gvsE1Xrc
OcV6Rec9IVO9PYf1Cr70zyHh5qmB1Cu40d6A5lID1iu4pNNC/7pc1it4hNBi
xRYz1iu48+7jR/1UWa/gSSnxVT6mrFdwhTU7xIMmmFOv4P3/8g/+kmb7neGT
Z05PuvpLlnoFb/hvvf11czPqFdx9y9Xu3DTWK7hwkfWeeUdZr+AnPx2tjHnC
/h6EL272udGRwHoFrzjy/M+HdNYr+OmvS62fSrBewceMS0wuamC9gqfrP1nY
38F6Bb87h4/vURDrFTxNfYBnkWEw9Qr+eHG4nXwi6xV8Rd8xU4n//KlXcLPv
v/PzJvtQr+g6T995L6jKjXpFz2v4U/pxSUfqVVXhvey+z8c5qp8SEmaq9NJ6
BvifbdE9QumsV/D3K/KOxohlU6/gK0sKTtzUq6ZewV90p+vtuv2eegVPW1nT
rmj0k3oF1zqdy3fchZd6BTc5+TJV1EKMegWva9mjqP1dhnoFn/SuOPLTL9Yr
+AXzdlWLTE3qFbw3PLxb2M6AegVPz/j8trXKhHoFb2vua2xsmEa9gvPEisYl
LONQr+Cpm6z3xZY7UK/gc5V/JHb8daZewRun3FXTnO1OvYLHZk3cvPSpF/UK
7hH+a3e6pB/1Ci61uWbW7eP+1Cu44f2fGnWNrFfwoM9n+aWvsl7BJ3rypv6Q
CKJewX3zNrxJ/c16BU/iiBj/DmW9glfesnY6ac56BX8UXWR4ZT/rFfy+69qI
7kr2/SB8MPaz/uZtbP0VXGnWG8mQNWx9O9ztdmzO+CWm1Ct48WfhksRDctQr
+BTb4HVec5WoV3CfSB2faGtz6hUdt8jNwW4vWK/gtsU3zXbFsF7BjWSPGD1d
ynoFH1jdtO+xC+sVfOzzkxsmhbNeweP/OIq8aGOfX8Gf3D++oe//vb+Cr58S
FPt7kPUKnuN7oK9gL+sV/KeewaHKXaxX8BCnxbw7uIOoV3BT8xdxQ4IB1Cvy
dN2fwZG+1Cv42pLavEwlD+oV/OYThbqiTU7Uq3d7bT6IuJzkmCxTzNI8wE/f
D8J/BXkGlGqwXsHXunFvuviB9Qr+unN30j/nGuoV3L/GMJn7aBv1Cl6S4Txb
yPQX9Qpe7rtg7gJHPuoVPF4ws+G1qDj1Cr765Bi/QStZ6hX8zURe8Xsfp1Cv
4NeD2j5LdGlRr+AJt2xUeyYZUq/gNz8Kvkp/Y0q9gs9rqbgoZmhFvYKLucm+
FE2wo17BV/xt+3qlxJF6BW82munUpeJKvYL3nvHmvXbNg3pFv3dd7SoZZx/q
FVwn3ObMnAbWK3hGe3/Dc78A6hV8jvBazbJ1gdQruJzvw289ekHUK/iJvEzP
VctYr+DbJ9aeEtMPol7BMy2MYt2jWa/gpTMm3L87hfWKrhMeZ5EZ01mv4ONn
zjPZoMJ6Bf/+7VsG7222vh3+Yud24XkpbP8gXFRy3H++R9l8BroeYpdndORL
Uq/gd2QO80iqq1Cv4M6V/5brS1hQr+i8Lylffecz6xV8QamZPo8V6xX859OU
Av7PbD0D3N7yQuGTb2w9A/yY+e5jAlysV/Che4/Vdx1ivYLfv3184skk1iv4
O7HwUM1O1iv4YPxqkXtnWK/gsbs9HSQrWK/gwjMvqvXPYr2Ccz2ZunLLFtYr
+NN/EUnj7f2oV3Dzouoxd+d6Uq/gWp6xggKPnNn69vBCZY2zpzgthTVjHPj+
0fsr+Kr56zwsn65i69tHPfLCo0Md+rlsffuo3z9y75fd8Ydsffuodym8Gxl7
oJ2tbx/1F1byJ2Z69LP17aPOc938/RV3fuoV3Messu/AF9YreKjk5qerDsix
9e2jXvC84UHWKxW2vn3Uk7olbhRZ6LD17aN+dOx0Bf1frFfwiic/XF/0mbH1
7aOu1hFhceiANVvfPupvvO5+fBduz9a3j7rhztDQmGIntr591CX3RG185OnG
1rfj+EeLcmdxebH17aO+Mzp9ZPNFX7a+fdRL3vj+ydjlz9a3j/qSQIs1d76z
XsElXpqeKRhkvYJ/bm8y8E1kvYK7eh1UzD3PegW34baZkenMegXfvmfmgPts
1it4Xlac9ewf7PN2uF4wV/8OIdYr+Bee0zeEw9h6UfjxU16l0vVs/yC8aIJd
zmkjDlvfPurbNLTv92cZsvXto77edcWFHWeE2fr2Ufd+e2Lrgzw16hV8Y/Rf
Z8vrrFfwspeLh181s17BrX7fc3JtYt8PwjNNKk81u7BewcOk5izX2c16Bffs
nSK7KZGtv4IrO5dV6GmwXsGrjqzcrWvFegW/GX5+35cbrFdwTqbyI9dU1it4
d9SHuRffsV7BfTUn6fw5znpF/stoysNm1iv4r7cC/kO3WK/gcncPRbbGe7H1
7aOu8nJHZgOfK/VK1Ehvjj3Xac71nVp53w0/0OdX8LqJNV9dl6ylXsFPtYgv
d0o8T72C37rmKxH+6xH1Cq7/873xpr0fqFdwr3fLvYYiBqhX8Hir85sf+o+h
XsEDXhR2Wz6YQL2Cr/6bZuvSKk+9gu9/PWuzXq0q9Qoubqb19PVOXeoVPOm/
QdXSOiPqFdxB6bjGHGEL6hU9nh35b5y+2FCv4NXGlb+eGjpQr+A1YYq7wgqd
qVd0nH9UHzmyyp16BU+29tk8wcWbegWPCDk1aV6cH/UKvulf91Z31QDqFdzd
7pVk3fpA6hX8r2ZubvPsIOoV/N5Y/Y0bnrFewTu6Bzp6qlmv4D/kXbhP2LFe
wRda3rp2z5T1Cn6jw1Xu8wXWK/iBybW3ufzYelG4Yr/Cvh8r2H4c+NXrhfOV
njhRr+BaKpOsRCVtqFf0fNt99ea5TaVewTm31UqDM9n9JuDaWdWTbrRpUK/g
Fpbd3y3kp1Gv4FtSC+v+3WC9gsdKaO18tYD1Ch50a+KP2ES2vh0eJ/drArcE
6xXc5eqemEQR1iv44dxo3sgstl4Unm7Tpm/0kK2/gksl2L4/FcV6RY9TslX6
8VLWK/jlmR31mW9Zr+g4GAp+5y1jvYK7bSldH6gaSL2Cf/nWVnRf0Z96Bdc4
PFfJKcabegVfu1zvsZmKG/VKY0zWqdDwM5xTzkc3GF0cpl7Bm6qnT+5MW0e9
gsuXHJ+mHXaBegXf6zC5fYD3MfUKPiv00tQTUR+pV3CBHQc6pBcPUq/g2UPV
Sst8BKhX8HsPVO78SJOgXsEPLFBeWKyrSL2C71fo/PK/a5F6BT/JSSw//FSP
egXX6CiJKrpgTL2Cb71+9qjnlGnUK/jQnY01C5051Cv4xgndaQb8jtQr+vkZ
Ltd+XHWhXsFf9PwwPJHsQb2CP+M+fl0t1od6BRfttQkym+hPvYIPb/wm8e4C
6xXc61TGcNB71iv47KVB1+RzWa/oOFfOfFAxwHoFP1F/+veeR6xX8HnBzadX
TWa9gm/ib0z83Me+H4QLhp8VkvNkvYKvvd9ixR/B9uPA3/z8oDJjPtvvDOd5
JHRaJY/Nk4F/X3+k3OelJfUKnurpcU7bkc1Dhm9Qbq158+IJ9Qr+O9R44bx8
LeoVXQ+PskN/ebJewTVLO78kb2C9gq9e9nbh61dsfTs8VtCj52ylF/UK3mZz
aP62w2z/INxJMnxPZhzbPwh/lLuK+4w46xW8eUWH0Ec71iv4lh2XnM8PsPVX
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
rDr1fZ2gP/UKHv1vxG92CusV/NyDWK3HN1mv4Jusxwi5r2S9gme1+6/5c4X1
ijzhyJWQdaxX8FY9yes3Kth6UbiOkn5UZyrbjwPXLvi6t2SEzWeAb2vzdP00
1od6BX+g8erUy3lsvihc3GfsqWI9Nr8dvk6Sy3ebjQ31Cn5DuzVyUrMh9YqO
8wHzohmHZKlXcHNfxcCga2LUK7iwdl7k7D7WK7hEQKB2tDXrFbzz9UfP/v+3
3xn++Wm0hooA6xW86djhjZ+43KlX8F0Z1duSTrP5ovCl6RY3tV6x+aLwrfEf
ZnT7+1Ov6Dr0WL7BL4bN64MXt/mY6YSxeTLwJRk3fYy/sPkM8DKNwcQvE1iv
4CLub+dL3mPrReGT4220dAfY94Nwr3Jxx58XWa/gDgaS7X9aWK/gSU0OPCNZ
rFdBE4cXrpA+y5n5Ub3+csEven8Fv33MdePhnI3UK3jK4LjVSbZXqVfwG3zJ
qXqPWK/gNm+0gnQnf6FewScPnFOuvTNEvYKvTIyfarRQhHoFlxDIH2z9yHoF
L+5e8aVkzhTqFTy75rDG4w3a1Cv40MtVOevVjahX8Mi7/yw9+1iv4AcdVJ6e
OG5LvYJX2/Ge28zrSL2CV1wyUXrP40q9gmdyi6XmyHpSr+CmuYHW98b6Uq/g
cwcW87g5sV7BjyjwxUpfY72Cb+9pXzi+mPWKjts6tfwyb9Yr+NGs5kVXo1mv
4Pz58U6CYqxX8PqSav1yG9YruIfkAcWov2y/M3xp4sGr1v6sV/C8mrGFJoe8
qFfwhak6ibPb2Px2eHfn7YorpQ7UK7hWtQpfT6El9Qqu0HrxSPHdqdQrePOz
yBlOnhOpV/DZMbWXFltKUK/o+Nuss3TqYr2Cc29RM5bLZOtF4XvGyH60V2e9
goftT/+82YTNF4U7z+Jf+v6nK/UKPvAg6ordPE/qFbyqTyG7b7UP9Qre5/dt
8uaDbB4yPF61+3TbFTYPmV6/3lNzFh9k8/rgnVKuvB81WK/gU6MKJq5ayPY7
03X46+xEGRvWK7rOdbTmhJ1gvYIfnypTODOW9Qq+tiushFPHegVXdFnaVtLM
ejVv5Oauf/fOcuqyX1qt+/iePr+Ct3pO/eOxMoZ6BRevlRJNK2a9gt/b/Gxu
Qehz6hV84HJiTxbfV+oVvIrfMuJU7TD1Ch79aFlXedQ46hWcr6crQaZMhnoF
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
U+oVHefnN80SFPWoV3DntQZ6g4MK1Cu4l9gLVx6Vj9QruPgC9adr8lmv4Alf
z6rbbtSkXsG7T42cVrdj85DpOKedHevwi93fGf6uqG4OZ7oN9QpebN11+MtU
e+oVvDDSe/2N7Y7UK/hbN9/NsmedqVfwOb+NdPkSXKlX8Dvnh82qjd2pV/D7
TtG8m094UK/gFUNvEkuKPKlXcAFpmc1P472oV/Tzxx6bYfLVi3oF77PjX3q2
k81vh4/ReBq/KoLN64Prl/xb2DSNzWeAP1UaMOnxY+vbr8QqczybcjjHk8b2
6Qax+3nBoy55iBjLxlOv4Jm2q96+db9OvYKXZ8fcaLNopF7B1x6zbgoI+E69
gsuvk1r++hjrFTxe05jTXM56BZ9lxxdT0Mx6BZ/kqNqze4D1Cj50LmDQYzvr
FTykY9Hr4Bgz6hW8suhWu6eyDfUK/tTo310HIQfqFVyrI+XZpPWsV/CXtxpz
f1xkvYLXHns/7VQi+34Qbr31W2EnF+sVvKTwQ+KyFrYfB955yGrqyu1svzO8
0ahqrv5VNk8GHpOS/zBpDZvXB081MbXwPudLvaLjUKHuPiuX3R8H7i1k1Rsh
5Em9gvcJPTq8qovd3xl+QPVYHO9/TtQr+K2ffQdXdtpRr+CSQ5onggotqVdw
EY8IsX/3jalXcDeOgVGPsjb1Cv533qz6NntZ6hVc+/PgnJ2zn1Gv4PW+YwuX
aLNewROat8ycbcz2O9Nx2L/woJ0qu98EfPv5btPGhWbUK3o8b0WmTJlrRb2i
61wpeGIorx31Cp7EuV24UNuBegVXW7NTdcIUJ+oVXOze4P62DmfqFfzG1abb
a9e6Uq/g/s9//Y6+50a9gqsekXq/7YU79QreWxH8MPSoB/UKviD/q6XgWHb/
QfjKhkPvN/+/++PA3yu3np1x04N6BX+bO6zbXOtOvYIvjvJ7c9eU7Xe+vaAp
/NW+XI52z16RFXWf6fMr+LEUk2kbrLZQr+C5jX0Tnx5jvYJ3rNz97l8+6xX8
rVHIfqFS1iv4wW/L7+6X4aVewXf+W6DkYT2BegWffrslMui6IvUKXumesUrk
uAb1Cv58/IEdPztZr+AfdBsMZrewXsFLV5W6bA9nvYKXJb/h3TTC3l/BNy/J
01townoFv5YyS+OMHusV/FX5C/3lz9l6UXj507/X7Mew9e3wW11rZIOz/6+o
Ow2Hsu3jOE6ELEWIkn3f993M2JcK7ZRKWrS406aitGjRdpfcEamUJaVskaiM
RNpIoUQoS0SJSBHhed78/tfbz3Ed55wzc83XmJnrPJnrneGGwpGcff8x68nA
BUp8pS8UeFOv6PnaVMdXNJ1ZDxl+ec1Vwf8yPalX8F8aFUbfEpj9B+HSIZor
CoeY/Z3hLjaPyiN6XKhX8JxO89Lym47UK3j3cPdPsWw29Qoelxs1/7eWFfUK
/j0t88DfWmPqFXxqw5ja6tWa1Cv4qG1Wr+y3GdQreGSceKadTwobvYIfKnrl
57GS+X4QvtDdecWGWmY9GfiNdaU5FmOG1Ct4lYjA9qxaM+oVPLa4wHf9Omvq
FT1uv5Z8vn2LRb2CO3QcYq99Y0+9gvOLVex6fc2RegV3ivXqOeXkTL2Cz8/3
rtx+14V6BR9/zhrI7HWlXsEPnvatnfzdjXpFj7/omjiPdHfqFVxQtlklTY7Z
3xmuas1rqm3D7D9Ij1vU2Q+1v92pV/AWe9cLNnbM+qJ0PnfetUn57kq9euF9
MXy9TTrH+NiwbMdrIfp+EB4lZLbCMzSCegW/W3NcMM49n3oFv9Z6w7Q68D31
Cr7kp/dmZ1Y/9Qrembo0eON1pldw/halCNHHTK/gfjPuCFafU6Rewfv28F0a
NNWiXtH8dXlNe9jG1Cv4hqM+mytmWVKv4GpvfwUmL2F6Bbd51nsl9TnTK3j7
GaGEW4+Z7wfhVppKnpvCmd9fwS36Y4XM2pjrceAV73+sLK1jrneGm2Zef7fG
mllPBp4oMFGQ+92TegWfV3BV3rfdk3oFTx/Z/W6qrCf1Cu4WP9655cJc6hW8
fkm60sFdHtQreh61vq0er3elXsHrrid9n93rRL2Cz5TnWvq12VOv4LpmyvvW
5thSr+C2U+edEy81p17BfwSMLX7DY0S9ovPkzXrrvTVq1Ct4Ul/N8PRvktQr
uMezSJZCVDX1Ci6l4R/nuYj5/RWdn2u4D6JWqFGv4LMVFLv/JOlTr+g8ubkz
RMfGlHpF88yvKrVbb0m9gqfmJNwdnWdLvYKvfbGHW9zDpl7BX6pX+E9VcqBe
wfdP9tlR8P+OoVfw+RvOvTs/6ES9gss/eCWxXsaFegWfcy3kexm/K/UKXiSx
1GZngSv1Cn4vVqosTsuNegXvDdPXyfdm9neGd3ftHexXZvbzosdBsTPp51lX
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
wX17OqxfiBtTr+DZbouv/Xddh3oFN1IRrYvxUaVewXt+evXd3idLvYLvVwlw
0dkxmXoFLzV+7LEt+zP1Cv5lqevZ241TqVfwfw79/NLyVI56Ba8f8I1LrlCl
XsFHjpYr8ARpU6/gC4S2Dv3LNaBewc9cnD2w+5Mx9Qq+V9lxwQMzM+oVvY5c
8y9J+FlQr+Aa89O4dV5W1Cu4/xbzeVtEbahX8HUtr9MTo2ypV/S85+7MG6ux
o17BO05w51m9YVGv4FbWuvq7D7GpV/Q6zXnUHNnIpl7BP/dsHn5Sx6ZewX3C
Qo+PrWNTr+D6J/iE5u5i9ncWbnOeoZmSwdFokXa8UNFC/w/ChdWfXxBMZXoF
l1ETEHomXki9gneWXM72Pcz0Cr5hrpUe5xTTK7hkZOOFTBUB6hX8QOuH5L+3
mV7BnRPEb4jcZnoFHxNs718mwvQKfnCt4suaXub3onCf99nZPsPM9YPwCN42
P/VOZn0G+PuxjomV15j1+uBS/pfV7k1i1kOGhz6pWPX0F7M/DryrcqG+jBKz
nxd801h/RMgAs78zXK6vLSVkmRP1Cr6j4fUBA44T9QoeNlP4kUC8I/UK/rDN
pGTHVgfqFXzqzhOn2NUc6hVc/4/0prAAO+oV/NW8zY8rGqyoV3CLoibf1NXm
1Cv4uf9Ku0zHjalX8JlHW/90rtSnXsFTjE63jbZpUK/g0/i2JayMVqJewYeb
L/p3NktRr+D9vCWnTQZ5qVd0v5xq0n56ML2CV4zdyW/yEqFewXd1NVe8WSpL
vYL/0/4sYpWbMvUKXhdivuSrmgb1Ct460HHV67EO9Qoe4Nxxb5asIfUK7vnE
RPt1tDH1Cj55s17HzK2m1Ct46d9vEybK5tQrOJ90hB7vdQvqFfy7RYhr1m9L
6hU9nmtPlyVLWFOv4F9WvNmb8cOaegXX+xC2ge+sDfUKPlA6lvquzYZ6BV8+
9/7B3Z021Ct48Cz/Oz/O2FCv4B83F8/OqrCmXslU8pjfXZDJ0bc07FeYw3w/
CN/NV75qW80R6hW8xnz5JZVIpldw8/T5jQ6qjdQr+I4F32zm9zG9guc22/gt
cWd6Bb/ylj9JI5DpFc1n+OXyBimmV3DtTQs0Be4yv7+Cpx3u8VFIZK4fhOc9
25yp48aszwBvj/oTJ3iLWV8UXv3fhpT9Dcx+E/BLQiLnu3KZ/bzg+2zbP3bP
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
OTU=
    "], {{
      {GrayLevel[0.5], PointSize[Medium], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[Polygon3DBox[CompressedData["
1:eJxNnQf4l2PbgH972HvvvUdC0ZLSUJKQLTMyopJdikSEJCNCkl1EkhGhhLK3
7FHI3rv3OV3nffze4/ie4+66r3s993U+/+L1da5/ZN99Ti7kcrnCirlcMWtn
17NfZ23T7GmXPctnzwrZs3P2lLKnnD3Ns6eSPdXs2cW2lj3NzJPbKRfrMWfH
XKxJvKtjs21yLWyXyJ422bN09iyTPbvZLps9B2TPxtmzSfa0tW+57GmVPUtm
z1LZ09I1iHc3z7lbm2fd9r5H9pq5fbJn3exZL3v2sG+l7OmcPatmz2rZ0yV7
Vs+eNbKnq+2a2bOneXKdsmcV53TMnpWN93LsWtnTzXbt7Onhnutnz762G2RP
B/dn/n72bZg93bNnHc+6t2sQ729+o+x5IXvGZs/12dPTPu5rkGflPU6wNtTt
0OzZInu2zJ7Ds2er7Nk6e3rZbpM9h5knd0j2bO6cg7NnM+MjHLtt9hxpu132
9M4FO9T8OFtYOCh7NnX+8fbB1KsZAM9mz5zsOco1ts+ePuY594HWn/kn+h5w
d6b14/5Osg++Ts0FH9S/fy7YgqkBtnDUzzy5U3LBEHP65oJL4tMcC1MDbfkm
znJPan62LSyc7P7MP8c+mDojF/xx1tNdg/hc89Tp2OzZwbsbbN3g7oHsOS97
hmTPKGtD3S7IBR+wfGEu2IKp4bZwNMw8ufNzwRBzhuaCS+KLHAtTF9vC0Uhr
Rs0vs4WF27xT7vJy+2Dqklx8q9RqhGsQX2Gec19qnnWv9D16Zc/N1o/7G20f
fF2bPcd4NzAOWzB1vS0cXWee3NW5YOjo7BmTCy6Jb3AsTI2z5ZsY757U/BZb
WLjK/Zk/wT6YuikX/HHWG12D+Fbz/azTXt7vRPv6W8Ou5qZbG+p2dy74gOVJ
uWALpibbwtE95sndlQuGmHNnLrgkvtexMHWfLT8Dpnomav6gLSzckQu+mT/N
Ppi6Pxf8cd4prkH8kHnOfXsu6s/8h30PuHvG+nF/j9gHX4/ngg/qPzMXbMHU
k7Zw9IR5cjNywRBzHssFl8RPORamnrblm5jjntT8WVtYeNT9mf989lyTC6Zm
54I/zjrLNYjnmoep4/LZz67s2Sl75tn3H4NZ3NTch9aGur2aCz5uzp7Xc8EW
TL1hC0evmSf3Si4YYs7LueCS+E3HwtRbtnA035pR8/dsYeEn75S7fN8+mHon
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
uO5eD87gax9bmOpaDxaZ38M+ONrXFnb2s+Wb6+m9U7cDbKn/3u7DHgfaByMH
yxZn2t81mH+QeXKneO/U5FRbanJ4PXiCoyOzZ1u5OKweXJI7yj5+Ph1TD87g
61hbmOrlGnDU2z44Os6W7+B4Wzg6oR7cULcTban/od4re59kH4z0rQdbvEMf
12D+yebJHe0ZOV8/3w+ORnin3OVpcgAX53un1G2gfXB9Rj04g68zbWFqQD1Y
ZP5Z9sHR2bZwdI4tv1cPqgdPXbJnsC0snO4+7HGeffA1tB48caZzXYP5Q8yT
u8b3pA79fT/OdGE92IKpi+rBEywMqweL5C62j7u4xPuAo0tt4WW4azB/pH3w
dZkt7F9uS61G1YMVOLrSFhYu8F7Z+7l6sHVV9lxdD554hytcg/ljHHOU98T3
xzdzre8Ka2PrwRZM3eU9Uqtx9WACpm6qB0+wc7MtjNxontwN9WCROde7HvF4
x8LaLbZ8N7d519T/dls4etx75P7usA+Obq3HNwaDE1yD+E7znHuieda92/eA
tenWjHreYx+s3VcPJmDq/nrwBDsP2MLIFPPk7q0Hi8yZXA9Giac6FtYetOU7
eNg9qf8jtnA0yf2Z/6h9cPSQNeas01yD+DHzfHMzbLmjJ7wnmLrOelLLp+rB
Eyzg38Ozhlvtafvg65l6uAZ3iL8W+T9PHO6zJ+vBJfP5Kxt2Msf/C9zOxvyn
n82M+VdXeN+ax79++s+/RvxyNn9uPfjN/u8/Jxu5JT1Ly/jPR/+bx1pL2Me4
mb4T58Ad2MZ3wD3YNhcOOfyC7XLhhEvOQsYtZx/j8A22dxxuv4658MbhG9zD
3Er2EfP3JPH3TPH3c+ER7OQcfIM44nDFJR8hfjgcg3sZr2qeOck7SA5fIM43
XG+rO4+11raPcfgF93HcernwxRGvnwuXHDF1OjYXPraNc+F2w/G2aS58bnjd
NsuFJ454E/sYt5Fjk7eQFufc5rnwxzEHv+ChxngFj8iFBy75BY/wnnCg4ULD
E3iUOTyFuOSSt/Aw10pOQXyCyXHIODjr7ftQN1xmONqSs5AcXOB2w/EGN3ji
8L7BR1/jXexjXDPHJm8h7fG5YOoU58DdqcbwcZp7w8tA452cxzng5nRzbTxj
8hb2cy0YOsNxuLNwGeE02sN7OsMz3pwL1xg1wbOGWw0WcLvheIOVIbnwvsHE
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
o+9A38/u9z+3NkWL
           "]],
          Annotation[#, "Charting`Private`Tag$280749#1"]& ]],
        Lighting->"Neutral"]}, {}, {}, {}, {}}, 
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0zdMFlAUBtAnWMACFrCAhd8CFgTroosuuugCiy62WBZLoosuuuiii5Vi
AQtYwAIWsIAFjFFsOAgWHARRHAQLLpbE88fh5L3cvOHmu/dFVm3K2dgjhNDO
t/gQovcvzve85AEz1daQzyN+M9XD5eyjnp9kxISwlD3U0kUkNoRcdlHNZ1J7
hrCYHVTSRnKvEBayjXLekdg7hPlsoZRm4vuEMJcNFPOC2LgQZrOOQh7zl2y9
r6SBt3ziBwfooo1mnnOQQ+SRTwGFHOYIRzlGEcUc5wQnOUUJpZzmDGc5Rxnl
nOcCF7lEBZVc5gpXuUYV1VznBje5RQ213OYOd7lHHfU8oYUOurnPVz7wikb2
s4Is/singQLWMosYGuVZxHrmEEeT3EvYzDwSaDGfMraygCRazbGC7SwihQ7z
rmInOaTRaS9q2M0S0um2P3XsZRmZ/LJnD8ljdfSu7zd85Dsz1DqdrTTxjOlq
08gmK7qnZDKFyUxiIhmkM4HxjGMsEdIYw2hGMZJUUhjBcIYxlGSSGMJgBjGQ
RBIYQH/60RctBjEHsQYxBrEFMQWxBDGEpx68pj3+/3/8BylCek4=
       "],
       VertexColors->None]}},
    VertexColors->CompressedData["
1:eJwsm3c8lf0bx20ZWaVEGkaI0CAklxLJSorSlJBNEpFki+yRPZKthKStCKns
7D3OvM8qIzwNv+/h99fzet6v8+I+931939fnc5x22npY2LOxsLDM87CwsKP/
qvkJXlMbxsCx81/OnwcUyJQ8p//SiQrK+mvcrmWNBxqt8fymNe43usYjRs+u
8mwx/lWerrnGS7kvrHL16j+2TG4S93uV21k4rvJtR0dXeQpjYZVvOBm2ynWX
ild563PqKo8zqlnlO8rOrfJtUhOrXGxsYZUfEGVcZfLh/rZVbr5obsDktUXO
q1wD92KVe+p8WuX/pX21YfJA+cxVfv286XEmN7LgX+UWqn6rvDLq5yo/f0j1
yurr159e5cU3nxkyOemk1mUmn/aUX+VBJaEnmHzSTOkSk9NLlrOZPOOxqxGT
z2pwXmRy+4iWVa57zMWYyT3tW88zeUB+/Cp3LAkwYfKI8EBrJm/ytVrl/5lk
mDI5L2nPOSbnl9m6yiM/vTVj8tJ3g1ZMfpJrKovJd8pPn2TyQaVQSyZXHCha
5XYz604xOfutvWeYPNLCZZWnmCpZMLmY2KQFkxeOqa5yC6eTp5k80DL6FJM/
L1rIXL1Oc58zTL5OSN2cydufvVnl2fQsSyY3nyCYMblRVtDa63e/t2JyGYt4
Uyaf2aC/yvfm4M+uXr/IMRMm163kW+U7vNitV+9DX5Yxk3tF0jOYXC03ZZVf
e1ay+nrcj62rr6+7+/Qck/daHFi9nlLbtetpcc9ZvZ7bX5dX70OL3ZvV97Up
qsCcyRMe1a4+F6DgVu/nWdL31ecVFLZ7dZ5577HnMnnUZ93VedstyuLE5FrG
XHlMPvD3oC6Te6eEuTO5Dd/vVS4hf+sQk/NPTN5kcoFeUj6TT7L3qTO5b/3r
20yuPvDh0er7NSjex+QFPhkBTG5e6VKw+nsjzFRW7zPN8x6TX39LXuXB7cNK
q9dzLyCYyZW9jz1mchOOzYpMHh5fE8Lk25X9V/msD9/u1fk5cmeVd6V7rnI1
1UOrfPf4jiAmJx1ct8rbfh9d/fkOR9LvMPl/W2H19y75KqkyecCV3ltMrnAV
Vq8/fkVWjckP5R/1ZHIDS8PV97v/2Lwmk88Tpl2YXMw8YvX+8N9+c5jJsX3t
jkwu7v939T5vJVxbvZ9NP+44rPLKh6v8fPe1o0xe/1Vg9bkoVa95ZlftmpfE
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
qdcp5MyAslSJx0GCV/Lhh9VooYT3ySYE8rgTXCKZfVyVR8O3rusHyISHiKjH
dy0NYUCW0fRFIYwGt5jauo0Er86FiPJVZDDAmeNrc1OD4LNg76qgK3Sc/6+7
6zaT6G9iA2V7e6jYK/lK86otHTp7KX89DhN+tyh+0RUtKiyNKGcfydFRLazG
PpNA9Pm+D9bFgRRY7bnkvnyUhqMvvK+LiRJ+N8PwM42bQMLlsuO7g2i4J3pz
1UwMCzf9da8VexOe5qIxa0ynYtdfs9lRbjbev77WI6BM8Eom45OFLBUKo3fm
My+y8cOF/7+ZvFF46ec8DNpEIXxNpXIolehLfT82ugiToDogN9NO9PFyxSr9
7clsKHzisb96bBhW9Nx3AirjUKqxOFpjy0aNuKrT6J9+9OuySq8RHsmKXBzC
W8bC+g5jM337Hug4Gi4x1xjB5E+rgKMVTAyIcnuR+TthMFCXMqA6iLAW/qcn
bzBQmiTncf5QGzr35Zfl7euFbs7KG8rL6QjqNt2+fFML9gvJD7nOd4IveZlk
WBkVmb+fbyl3boL3GmFVnvx2fOx1m7xaT0EJ87BPFHcjZATrrM/EtOHi13ek
S8coCKuTdFbf1AgbheLlye/awA6Z/nnZmoJMndrdtnVNKPF8ue/64g7I9u10
vMigYDbnlNa7oBacXDGx+H5sF+TK3Pv3cdPg7sklPyTYjmb3k/O89n2YWsJ3
o5nwfg+zlUOj4V2Yak6pslw1DI2frTo1K5hIOqXqIMffD9dfYbetG0iQfb7d
ZMCPhfMWW9+NVAzD7fyR52VJ41jnvu/gsdtstIlel/7DHEWh6KnwXzoUJH57
YyATz8ajVVc9buhMIEPVZOzQcRp09DdWvSlkwfp3/h51LxqWrkziWnyD4GaY
BRMlDFymfR5N4mTizPeJzyHjNFAcX1y5/4YK5+avh47asMB9ZJ79vpeC8Qe/
M4JEyajP/D3oTPh6Nf/19+l7yVg+94P2K5aELZXrG9SJ7S/otpsX7xmFfK0X
qalxEErzKThjxkQHr+rBUu5hRC+9dE9Ppgc5fL/0dKfomPm+fv3O3B7i/Dl/
re1EO8KeulxdcWnBB2bilRLa4HWev3TEqxnOJi0KDkSfrSsbfVrzXz0C1Dy8
grjr8It8MOJl2wQEAi2CKJdKMfhLsi1Opgol62dsjitNYP6XUUSoURYWeyZ+
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
s43Eu1ba+f26yMGCKv/7E+LFcNz55YVpCB3r8tZknvjEhl7Xy3A74l0K1ket
p5fTEL5aIO4gHPtVFdiSTjj24mDQNF8NwrdVK27v+MjCqskXU3OIj5WNHUtT
L6Mio8Zu7sJTLLhcsI2cmCHG7FyV2ClnqZDPOlF+bDPh3nzL3esIH/LvdMW5
XqViZs7dh6nuLJRv7l3zk6x/+13W8IZKRfREMfdUJvH5IPXrISSvSVavW51+
lIbNotSM1fPYaN8o7vfMJ9t/OqNZ2YIO410qFd8b2FCo7/L4QPZ/iTJPWm4W
A6rtW7ab7uVgm+QcPVqyGJ76Q+PHfjMw/qL0KZBcvv8bf/30I2LUDn5fG9HP
RKDiw2HdBC5GozxPpa4VI/FjScLpEhasBENdttLE32VzFPd+FcHkyxX/F5Fs
WJ/Mntl7lIdkM1/f71kiYFapW6ANB2+r1I4PvOEhsS/esWGVCKs9OmZxx3NR
P5rQ+k2Z5LZTm5++fy2Exm/rdibp5z8cUdKf7Xwsvqp3UcddiK4ErQQ3T5IL
JHQWlh7hI5ARql71QQD16Gk+POJXmfZ7dCQIrwaKG468ILyqnEzvVbpB8mTC
b8dd+Xwcm+S943gTH31hBmenyQtwfNeZA/HH+ajdPDe6eAGf+E/zj5SjxNee
2WQnrOCjsyX+mvsZHp6edqZLDBAuitx6CkdJzghxdOBTueg9la6VsVyIFMqK
mw5VPAzNOnFh2JYLWkWezbvDQiRVvfO13M/DksTvXO8yMgfK3Q4UFQkRek8/
qkidB+0SzQKRNgeOqVm+P1lCXJKghMp0Eq/U6o3wzmXDLV6hbMd0EVoSn2kV
kPnrJS6NPmJMcgB9oOnNMjK3aXOso7Zw8d3mcatCEwspKqbTRXYiPFY86xyg
wgV9QpVXmh8LbXN+5WS6i2B1O9i1oo+D9LOr007OZKElWH3ZLX8RrJmeDV4l
HGwKNrqs3sdE7KIj80LDiBepHL8UlcDBjSgfWfUiJnr2TlhUd0yEJgmRpP85
DtbrRnj7JjFhYrnJdpSsV1esKKuK4oBjEpHqeZOJatO878FkO3HF+dMuku0s
0PtjPY9sx+HA/FMbSO6/Hee8ZW8VmVeHr8sdZjEh+eHf9faUkv89n+HhP16Z
vOyufUh4ZeZ/djaTrH+24jvoEV71OO8SDbWTeaDdIDH173P8ttDyLAivWuqb
8Keeh6WeWr+HLvJx/j+TsqeEV7tPXDktmcjD63vVlrqEV8ssltn/lyVAfczm
qU/W8PDk4VG7/wivJpeGSmwQCvCzS7V3sI6LVRaylTd38JHdUXPni4sQaZER
Xn+P7+DZ/WJXNT4e77L5IlMvRPeeES3mJg6q6hVc2e94OBMy2/ko8elXryZ1
Dh5nQzo5ccLNQ8QTt5Z6i+6JUKoZLI5NZ8HypXhh0hgXbiXGnotGRGjla3w7
8oYJiYLx/QHRXOi7/ejabyfGyRqvR0p/GNCvMVloT/o0V/L99GmkT38lbE5R
sWHg49kFrk/JeVnx/RujgXBMbt089aIHdERb6nRKzeBg+Naqmh7CBzdhu/F1
Izr0DH4esidzx8e39pAp4QNzvalD6QANtttcdtcdZcMuoOBWe7EYgV9YLTJP
aDDTa+0748bGws+CvfJFYmxwjgya30mDBhyS94ewEf1+/rwD5POfbt24VLKE
jkkV7/bF15A5tXykUpds39jJXeV9LR2qLcoPchdx8JFWax16X4yMdAvJTWEM
xHYdL5qexUFWWlvA8RgxGsdXxNgvZ0LO2Tc3SYcL8fmLXJ0gMVSOjIzOH2Li
zMtDd0/e5WJbQqaFs7kYb63CL2YWEI/9dXqXyQQezskcedf9TQSDG8/nFPmw
4Xjl+7lze3lo/L1vsxyZxwKN5kmGkzngTZcc/kZ8WG3d+shGDxFUH3bJ6ZVy
sEHBx1RMPEr64ZwZ6aNCxOy3n/yO9JuT844zdoakDoeVw2alkL7lDWeZ8bl4
bzNwLt6HD8PV356KTYVwCt0doHCYh/23X546TDjTP6ekRqJOAFHnWOL9ER4G
5taZ3SZ5cJXqoF6FvQC5xo+nlpzgI/kSS/jjHh9xjtRsjwGSJ04fLjjA5kOX
fkTq8XU+wlwycuV3kfmplKF/xUqA9umf9HJd+Yga3Zj/rYWH07Os+Z63BNhm
J12gq8VHQ+PhSyEbefDqnXnmGZ/wrXzJiBf5f33tLlZ89ZaLBsWEipylQjBt
Gor8n/Kg5XHi7t6tXFRUznmQuVuIvRJa6utP8+CUfsNtYj/Jf4ebM57GCVGS
tXFEfS0PI6aXRZ0Hie/Hnjz3rEYI1hLhelMFHlYp1S/1kucgOkvOyJkmhLHD
/NZRkldXSWxiuJeyETRnU+Os8SKwpD+kiEq4YBS2ZtbtYSN9NyU/U0MEe9dh
yZRrXByWKb9zbQEblDXNMhL6Ihz1bzVYEkR8ITbhipuYBfbMyeuJ2aPzkGmB
EdnvTR767xRfsXAgJ3Cii7kIK5LWnXpszUXBKePfz0pZkLHsKhgk63uKTk+a
vZaLwKs1rruKWfjukjCctlyExkj7t+OcuHA4v22RxwsWrio8UaTpifD1ker0
K+R733T7n6aS7/UI/MertvR/vEqY4Pr/vFK8zpqfRXjVGDv1EP3v73RkDyeb
EF4FbjZnPia8Glk3qUGWrFN/c1OCCa80vATHLAivjlcW+ncQXuW3vuLsOS3A
uf/Gv5hN8rw/bdKbv+9FjZyc9X57tgBGG5ZaZ5Pj3madT2USXvVMiX2WQc7r
HofZFmPvuLjDiBZPJ/UxLv/n3jtOQhTuN5tVY8RFtPog9bcmH1WUCeUzCoXI
PWih5Um8p2jg6btsOtmvF/cHZqmKsK2+xaC6iw2mQrdhOckX2VmGj8rOiLBL
Lv+CsyYbo3X03hry/XcMNTLXvxJhZ15654xgFr5dSAjeR+fiw4op+/bJi6G2
eba+w2smMn7/PvzmMhc/+G1pXYRjOePhLVjGhJPXe7vtpK/PReslmZO+vius
X11cxcD6oi88k3YOPCxNN9pEiCHhaCqU2MlA1r3gJQP/cWDwOfLZo+ti2ITZ
Lz+kzkDcPtfHRvs4sJydRb1HfObEqSvb6+QYSAt4v064k4N9spO+R6aKMWS+
69R0AwaWxN4MCzrEAcOx4+P7m4RXNpXmLhcZ0Ljx+L9NJD+FOy++ve8y2R/X
qaLdk5i4LCxe3y3PhYzF9Uq1MDHexWTc0r7HxFc3mdC3R8j8ldV3mLaDcHin
9s/GdSyE2sZ8vkj6av0h6Ycu6mIwuhrMb1NZ0NbfJq6dy8MWXxmve1QRjDQk
FwyFs/HabqNrbCgPzkn6LTkkP0w+6HVmnyzhz2lR8/syHj5G35y53kcE87iS
OXnxHOzmXh4x5fDwJXL91IeKIvRkVY8OzOQicfGbQ6dn8tE+U/6pgPThJ1Wr
RavSSM6cELjQZSMf6eNnG54JEsLMtLZsoxrhj3XezeX+fDhL9t9nKwtRG/J7
O+cSDyH9vJWsU8SjmiIeDRQS7zG5GD77Bw+iW9IDvwl/So4pvXrpJMDma/8V
nvDmw1fJwzAokw9Z7JYc+8ZHaR4KT9bzYV9wb5IS4Rgn2dizl3hY/vi09P8U
BHhufTn34TE+AnIuKPiRelT5r/Og0XYBzPZm2/s48FH2Z1uVDfl/u3wq1DIg
HDvB739uSzjm1Cen9JRwzJRn66HTLUDz7rzTt3+T/BuUkefG5cLyccXC11OF
2NF8ViXub+5RauE9vMrFFGuFgmMgnibunzX0kIf0zwW2Msu40Ai/eGeZjxBt
N7I37o74+3d+hl8jjQOmsHXC9gghcj5fbQtz5eG+I1885RYHclkGFaduC3Fg
RZRvynIe/LqzvZ/v4MB3IB07S0nOvjTv7rr/a+nM46l4vzjeImUrxDf6iUKi
UorsHNlSSUJkyU5EEoUiIgkpyZpsaSEVrSpZQ8naIm2UynZn5l5Fqaj8zsz1
7/v1vJ577pnzfM7nzGVGkoA8geViBbJD4HqFbzilkQ0StvZO/dNxHl/7bn7E
z0H4tWlsz80XOPes3Z029xv67fmvo33wvEmrL5Ff+Y4NTnvNbh4YZMG/8I8W
t9C/Jz6xX+7xng3f//7JGujH8yJ/7/Hz+kGQ5QvSTX6F5/jHwT+ubBZ4J8c1
5z0fhEPV205efcKGi2kGMaqTLJhXfms0ZmQQLHO582DJK65eBf3j3r8qmxz1
KkW9cpaU0qb9ldq0/bUrUK+8D5ZtuYp6FTBNaICX/vt2nwXsSNQrQ5NDBzRQ
r6TH6106Ua9WHpq90A/1yqd9RL8f/dUCzp57VqhX22TvPm7FeXBtSE+0JM5p
atoTX5yCSUgcmatn10dB4uwL00Tw++za9ikqBuuo9Xq4I+ixofzs9RobDxZk
r5KYGbiOBBfX421SKWyIU2xJqHw9BJ2xxZ3Hp+Ncmf/bKbafDYfqzD+6bhqC
1fNznvxsJeCo7Za+P6jv6ps+Bzeiv9GRdBevwTlVatfbqMpTHFhwO/rNv1Wo
b9+cVNI2EUBq/DCMaeDAV8+9ETzXBqD3F+f605kEGCrrxnf94EBATsnaWu0B
8FnlW5PymAUKwb9XRC0ehkO/Zz5d9KEfeAy0Uo7gfGS2JyLRHeejvHQiQAF9
8Vqxo6EBASxQfJa2wXXnMDT5nCWU96AvTvQWvoj9xaDC7/JWz2HIDf4bKOrT
D93qOvmSW1hw69qjK7Jew2A37Onek9wPBatW/yvzYYFxoENWufMwfE6Ck929
/eA3KOv9J50F44sW9NgbDoPy2PKlLVvR1y9q2/jtOa530rI5IzEM2e8ifje1
os/cXxYZJU6gX1DTj2JxYGN97aDW5kF4lrrBtAvr/FSmk2fvAw5MWids62gc
hNsPk3yvnSPA8641S/4EB/hmHfn9Q30I9vVe8appJMA+fH9UhSkHTDeuiLa+
PARtkc67FIexXymph3tiX4/doa34bT4LgvxFPhLok8NKJ40X1bGhbiyy7ksk
C3iDeRzKgISn1y3mBR9hw3zCn+9pHwu6arNmh2A9GO6q238Y6+HYjCSWAfpz
gbKcx+HY7yQ2CC29jf68RGZelTbGVyzdOCYaTQLnKeU9r4ACSqbUNXaEAH4d
vqG1qFcrr7w/XGVDweoo9p0SU/TxmZVFT/JI+LX5XO1inAN/7HNmeWWSoNhq
0dCAc+Js1QmF0Meol4MHpD68wToza2iPp+/LGynW7MP6Hd7pK5orQgH/+TsN
OqEkVBfZflORIiGkSSLq4AYKmnvHl163JaG3QP2+y1Ocj487Dskdwn4euuSv
oCYJpqn6ZmHhOC8e2bV95xUKch1zHKL/R793mNr/fi0Bz21uyk12UqB3YChr
Cdb5gIHQ5YZhFgj9dZh4/YcCDYsTJwRYBGROxlZEoW9q/bEg7Qz93hkVt5qg
l6iPRX0vk8Mxv5XVQ/LoQ/feUmm7fJ+AP/tTPjwyY0GAUuzojo1sWHFGdt3m
8wSsPvYismgRC5Yp8pUN4nxjl3JXNfcU6oH17A2rJobgtdrmgTDUyeLR2b+E
UCdTvrAlFFEns0apvzk+bLim+OLeyoMEVGLPz32JfjpkVKLLlw1hQ29Hs0MJ
aO8UbL73DPs5Vah5yosN8nk/5CQPY/8qqyDevcN+3iJ+YrojG2ZGjCcVJqJ+
CnbYd43iHNnCvd8uwT/J6JXtb1vu/w8G6VbdQr1qel8yTuuVwf346YqoV+1x
iZP5qFdONilfeej3qMoFlMajXn2P+PhZpJ6AabbvNcdRrx7uMMovxXnQ6Fhe
mmYOAbI6bSP6WD9xHbN2quVTYL15suWqEwF7IuC3TggJh6/9zeTvoqB7muNC
Iz708/0h4k27SKibV3ZrpjQbdG4Rx58XsaCQJ3L3IPavFTObGm/vYsMZn3V/
durh+c/6qGy1jITyIlUlkWI2CB9OdDF/MQTLNR8uj5nEPqXqKtM+xIbqMqkS
Gx/sGxstxxe+IWCxv2VhryIH3C90WIjNHILxGP2H+28R4PXo+hJJbw7s0Ho5
uuzyIDi0ZZ+boN+XuFTW+Xwm+ldxD0rMZhDuFDafzHcmQG7T5vTEcg6E/X6Q
8kxkEARz1C+3a+McXOL8MKqDA0Zia3iF0J+MGfyLD0Z/ojBPY2sP+pPnP7PE
Xj8eAF7Vlq9mogSYRPzyqyQ5YHlqtXZi8wCcFhl6ZyZGQHd75h07ggMz1jk/
3/11ACqPFF6rUyTg0cLsuvndHOApA/s2tUGgMvxy720hwF90n6/VI9QHw9G+
20mDUG4xo10L6yG0yemAxnkOSKQ2JkWzBoF1XcVtpJiAM1GCKckHOLCws7XV
13AIZHSfpExvRv+rqNjaBhx4tbk5DrJwnkxXM6fwXPhbF2UOCnBA9kd5uyQ1
BLmn19su5COBJzVvndpbNoiOx2SS+iwQ/3KCdwCvC3/VwdrFRWw4fHeeveNp
Fsx8Eii6CnWi4myRw5cDbNASS/hu84EFHrk99XauJDyr7uGdZ8SGVaLjLW/k
CVDSFLqd7E9CrRDvOnVeNojtWr4uyBd1tje6KCiMhN3tt1J5WtDnd/ct23iN
gJsPl56aHYv7K327ZJdCwYnXy6gFbOyPvo5Whsk4P2aUpfnZU9A/5JgXsYKE
2GnDf0WySaDsbr5Ok6NA7HhIiR3W31u1RRL7LpIQ6Hu+lDOM/bOi9sn9AhL0
zs1xcC8lwfhbZ4JfNfJFW/oa29GHrazoLcwnoSzjrfHPGBLGd9Rtrx8jwZ2v
6HYInouxCW3RQybo32aKH3CUwvlR8876qkASZE7+I68KkHDqFT/vHqDgfNKz
84mOqG/hUVTNKwLCjpqr9bhQUOBWJDC8gYR9cik2Hy8QMIf/S2kknjPZjWe/
zFInIbpx7PnWEALuPjeSFMmiQNhRXmQMfd25FSqO+7EudF8O39iCflO/pdue
7heKbqZVD5QIeHyph8N+hHNzj5eLkCAJj+Je+SYJECD2/a1C8QsKbG3ESk7M
wHNKHSneOYp66CBsLfeBghc3kvnOTRCg/krRsfwTCwwN3v4h0HeE6j36Eo1+
NnFUOn3jaxa0HWjbGTRAwc3pBZbpY+iLeXxahjtZQFT8JyD1GX1QtFeo2m8C
oIPkO/ce/ZrZvifLXlOgw2o48RLP7+fjEYNBFAs+FE/5q6m/vwr7zvVXj0q+
iJ1DvarrNfj0iZ4HA2P9dFGvBA/anLuPevVi5nI1eh6898ktKBj1yjIgXu8U
9tfEY8cifOJJyAmRi00Ix/xqJshcuEzAU2X/f4JHMZ911/00Mii4VZ0WpYo6
+73du73zEAmLqTfzFWooOBMo9vuvDgEDd2Pcz+B1rOKf9NEboSDfyqTMb4IF
+1bxSrp7YX9sTdz0QwnnRO9qLZ97OLd03dh224YEcxujLlNnnOe9phdY7GVB
rWLp7D4tErYvaBD8mMCG0KsfJjcqsqBgnfHDcBkSLuZ9aO64wwYZVFq7/iGQ
1j/am8FLwg23lmObethg/r+7z0auoK7z6WhEfyWgQuBas+p0DjQpiGuKhw3B
UmX1oLEe1P9CNw8HGQ48zlTSsLMcgth0GdvVHQTUulVOc9fggOB28UJttSHY
LXbI4WEDAb19kvZuZqh71jdl7y4bAj9bJb/5tQRoO6UcG93KAcnSN5Zxq4fg
4tIZiRPoW5W8huO0NnPAM61NfvOWIXCsljEVasf1n4JLtLQ4cCRaSJDn8BCk
ebvztH4kICuwtdNZigP9A/OEbpQPgYqhTa/eD+w/uTlE1G/U+ZtPdl4bwfng
+JKJE3hOtp6u7dFGX764V2s/jzLmbfTrS70lqA/VooOjN9mg++e1jIcXCx68
CapSxXNx1IYV/yEZ869ySr0hhwUWcapOLZvw3H+Vi3QPYMPfqjXfDV5ina62
dvR3Rl+yqmFNnjkbLlR7ZSfxEKAXzDf7pzcJ1nl7n4jJssF/Y9XnADXsH44S
4kZ7SSBsN6yu/0XBvZjzov3uyDOCBS3Rt6wzWthw9RkFbkq/D688jfrzO/qk
YhTqxM/k7LPoS8TWzBbZVonnj2fplfY4El7GfPKJOUrBvMJXLqKD6PPd763T
OEWCfXdPY64zBS4u61RUhHFOq1EVtcN5z9HQdZGcDgULfnR3XNZAPdpWmK2c
g/Oi1vd8cUkKFl6/fTFhJwkvKg6tqC7E+fH5ydOev9CXxZ0frsV+LP3HrYjn
CgkbUp/6y78l4UCHo40w6l3r8zdZY6hvHx/bbkp4SMKVCwvX/KpBHVf0z0sv
JsFhoMq+Av1ayDZvTZnXJKh683zNQP28y8/Ttxj7eTdfbGYyRYJn832f8ycx
z46ChNJ2PGe8Dwplp1HwOjXVpxU/n7en/pMwxh16rGuyFP3emtenOCqYt0Wf
MlzF0e/Jr/84S2gJBTdmtIwO7CGBda7bbT8PCZ/CJv4JrqLguL7MVgG8Lo92
lK8PxXoX/qpMHtSkIDuA5Kt2ISH7ol/k3l4CUjdt1V1kQEFvka70YtRVxXcR
4zfo+0Rlb4JLjSm4VCvkvHMH+uRfN5WvthEwd96LZS0mFNQK65vetCPB1T1p
948WAsyqDhXzG1Hg1Wgp7WhPQrxmfrHKMwIWOg35TeB1sJo4ezwf8y225We4
wHsC0rZz71/15nD1Sl+Se/9KXEJsGv37oKnnT2f698FXf4XmKqBeZWi6LvPq
IsD8xqsD1sgDNKYXT99DwYpAaJuFcfnc21lOv3cyrauKX+IABf+M31rrPCQg
ZFwsIQ/rx9H2gkhQLPa1rW4jPug7d4/MllmKfWiF7WeZimycB1Nrgg/H0M9n
Ujn9NIKEOzs6HHzuYr+Zu315vhsB3inlqQsw/5XUlr8Nzymw4DdJtDPA+RQy
ba1xLqBKlx6L4FAwEZwbwSNDQKRZgvRJPxJipoey9ATYoLhyZZPHPxZkKlS1
9aPuKReH+HgtY4PH5yU9c3tZkHFcx/Yi9veR28SdlPVsYJ1MW5nbwALJT96R
OZjPpnWSaZts2XB+qVBz7jV6vhpecsOShDl9y6XbPNlguL7gecVZFpTkiW4u
2Yj9VdovQTOQDS/1T5ROO8mCOTNGmjjGJHyOfJVAhLKh5JbHk6p4Fgynx8vb
G+F62wj5yENs4Dmg+kU9mQW9vo1WddiP3XWnq6SFsOHOxEDX2QKcGxcHOmua
k1BUpzIm7M+GLZriHkoVLFBT64t7gHUM72tCc5zYwC+jsOhnFwuKX5L/hLHe
ymVuWOxG379wp2efyQgL0s+2W7V6IHe3nvFuDRsq6isUzgoSELj2toiTDwlL
J6qqZf/HBtdLh42XKBBQz4rMbUKf85JIbVw4iw0WdZKm2wHz7GmRoYD5d3nv
7Oo4TEGbMd8Rgx3oC7XKR0IP4HmX3tb07i1el5n31hQEElD6oWzJzYMkJLEE
Ml80oD6U8f63IR794vXFm5sP4/l/UtHte4MCX1bn0Pp87N/jny804nkUvxOc
k55Dwbu623PL7uLclyEfWHyMhKAsnxydBAqWHzKOPIHnQDt7rVIQ1qH3Io9w
5xAKTPWCH9zEc5Z04NtWKTzvK/hjUqU9KSjNFlOfhTquOWPXyHmcE0uGNY6l
WVFg+Ddgw4k5JHwbb/kzM42EWWaK9x+up8C/smPSAuc0/UQ9B2OcF8/E5+cl
rqGAd0l9oL4y9ssIq2EX1JkeqRs3hWUp0H1r4qahj+d/0XibZS4J/7JWHvSb
TwEYSK5Rwjlhl9wdMTH0a521DVuuzKJAql5gtSiez7H6wLArqIfVniaXWlAP
u0hZjy+7UQ8Pq7rNvYQ6E2uy+yPq13eLFeci6efHtcen6hWRIHdU6uq/T6i/
D/5ENuO52mapdnUt6meOhZsp4ByrotO04FYS9vuPprxECQmn+YWtb3eQsDcr
rVkc9Xqi5Oly+rkef0Q6/gtpQn9x+5v+s3Po+xoVCuKvY/86Y9hS9AjXr7vk
VYtxKz4auOqBOrxrpdlPT/SZqrzsgxUXSLgP8fcHkb8p8XB5ifr80z18eQTq
dvp7czO+MhIuF6vorUTOohzLa/F7Vs3x3leJ66tv7+0rqUQ9d1CuN8H5PL8p
5s4P/NyNjikZ8bXYrw5y/ZVPB1evshdxfx/c6jOL4X3Cfxmu0ubK8IsBT9xp
3mA9wvDUDRnc/zd8uYjhZl87Gd51XtGU5irH+lxpnnw5j+FrJtQ30DwuZ5kL
89z45G0MH/xSbkbz6qP/20nzaTVjOTTftCR8E827now60HxEPpPhDRp25jRf
9+LxDmafC+oMT3qmYUHzVdvP2tK8la/rHM2Xf5CwpPmh+QdtaL73YSjDPx/h
bKP5eYixYtZnL2Z4r0eBNc3n17VZ0jz7V2c2zV/wSW6n+d84z600l3fLYPji
Kktbms/p3mhB8yBvL4ZfuWxsx3yvH8lbmOdOq5gwfJZwP8MtlzgxXGGdLsON
n4rsoDnrZwfDkzZYMvxI53Vm/Zl2FrN/yKJohi8rrGA+100onIlT9OJjhld7
uzJxiqgZMN9LXkmc+V4Wbm+Z71VZMovJg3ClB8O7/7OyonlQ1oPtNF9hUsbw
AfZbJm8SG9zsaC5Q9oubT1v/rcx9A3Mee5rrb1rP5L+kfgaT/4bdhcz1ahZI
YDj/nlzmem39pe5Ec+mlHQz/Y2uwmebBATXMdf9PYT5TD1/L2BuZ36mn6TF1
Mmi0neHjAReZOtmffpOpK4mX6QyXHHZn6iq8XIqpQ3Y1tw7zMpWYOmzuCmfq
2SZDJI/mp8+NG9P8g26bJ83bBc0ZToW+NqK5c6CIN827tWIZfv5ejSHNs5dv
3EXzLL0KhjdX3FpPcyHxYB+aX+tmM/x78U0Dmo98SPKlucsN6XwmnuhqoPme
9PTdNM89Zc5wh//e6dM8zOCkH82bwkIZbuLKw3D1ziB/5rob5DM82lRfj+bF
6sZ7aB4QX89w87MJukx+2iYZns7Xx/CKikEd5hw5XQygudrJaQU0N31oz/Dd
z1fvpbn2PQmGh3l90qa5ZlE+w4UlVjL8X98Rhjc0fmN4tZU2wxvnaDP80W65
QJr3U4YMN1o7j+GC6ioM95c3YTi/Ig/DnS/PZ/jhNQYM12+TYvj3zKfM/mFO
qgy3vePE/dzKIQ9VWge++Zswvw92+f67j9xGkatjnnVcHfPw4OqYStDHS/V/
CFjeqbT/dwr69nDfL/2bKagISE/Y8Z0ASdse3ljsU3OKJmOVrCkgVi1JXIb7
fDCt0RinP3eBvmY97sO5wPV1wSXc/S+84u5fopLpK6ZHwo9l0h7S2I8ET8gk
eYtRcLXgOxO/53NufsTOaDDx22pz4zzaMPX8LmvuPr096UxdDRx/wtRP4YlA
pq4U44WY9WYHp55P2Mz1k1lib3maddBPj7vJ9aP/X+Cy9eJRcQqUI/Q61XC9
7XE4xlxfrfRaen2qzvNt21kEjCk/iztH//+su69aiRMF5bnyq+h8Gv78ny69
vrSjfeUDXL+jvrlUC+euR3rp1CHs15pWfHv8AH3CNm78GVPPxzgF3PhdTXmZ
+L0ulzLxrwymmPg/f+LmbfVd7nrlAu76O8nb/D7xk+B83/68H+5/eTwu4x7u
rzr1/Nh/U/vHTz0/1jity80E56OMdjtBA4xf+cbaR/twPlKcet+3+dT7vqun
3ve9o6SXyf+AowaT/9oWMyb/+/k36NPcSjk/k+Z9keJeNJdqMl1g8IkAt3qJ
CTX0Mw1FhRUXPCj4oxtG0PlUypJMoNcfvOt9nV6/krU+NHsE47F/9ZD+/75K
ueSAEhsKrntx4+Ft5cazfxU3nqjkWkZPxlMKmfzInlNk9OSC1lTdTtXDfhvu
eqln49eO4v6Ppw000ffb4wpIiWrc/9fU/qJT+6+d2l9GvGxNFfqxMYX75tIY
/9N7b6+LoR+brs9drzD1fuEbltz1F+NeMflp3LOOyU+IjxWTH6OjLYyej7d7
MPqc0mO7hebR1Jresz0YT8rThanod27UH37/1BvPabeGKfP8zN2TWUzfdNdx
ZvR21i131wECiHpfZwm8XvLHKx01XCgI2cuN534bN54ZCtx4DBfnMfmJzc5h
8lO9zZTJD2fq/TJKU++XqdDgrm89XJzlgPtLDefsXID7H7qT6qCL+x+Z2v/B
1P7jS6fqM6fJ5CDG3/41ef9JjD/t+Km//Rh/qCN3vcHU/sZT+w8XdzD5Oe2r
xtXJMDsmP/8H56E83w==
     "],
    VertexNormals->CompressedData["
1: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
zyq0KBXDd4P57aP00WBnQPO2E/uJ0WW6TnnyEvjJsH1SWyweYlUG9nFibnx+
4GktrlYCidLYrmsTwfnnXwUBzI3GrTkzrSclUG3C9J3jWzKwpX+YqsDceCVW
FppnVAJSB1wXb+5PA1lyCyt5zA0NVjrXrcclEMInGCgpkgFwc9dwLZ6/3420
vBq0S2Au3vrc43tZIMjvyseO5xp5MtT/MCwB7u0jMRouOVA1k3bmPO4X2hZf
9ddvlMCJkM+J7gl50E+uR2b/Ge8rh+2x021FoKQuNrTNVQBqtLtfBeHPRzfG
Ke3NxN6Ws66Qpotztlimg5iTsT2dDnPPXoOK9c8KklY+HJuuumWO++kM/Xep
Wv8C9NZW7Q0NE/5/1d/mvMZ84+QJSOc90oTywrrtNorTIey8y7Q7ntdmrMJj
ZPc/oJOfmZWUmZJB8eRj5g/sJChgtvxBntCLZIpZ2gRiY0BU448RE+bP60u6
mhc3PiGxZ5LfLooGwpOMwqaFy0RoQo6iQvn9qNDLfDy08xFcyb7w6/kxItTJ
Oh1yP9iPqi84J3vYeaOvc89CpC4S4Sif0q63YX2IfibpbLBxHHqrqeBy2JwI
V8VFXDmSPyLSMxd906o01Ocv2KVXRYT9iopVDK1dKMLEp1pPLhdpqa/SDZGT
4LC8wJLco/fI8UWY4pR9Idrjf+6BtzwJvtp+kWj0aUTWkk2WV5qKUeiJS9k7
vazg+lwFVUgx+nlBUJR7uwT9IrTOaHSSYCqQEDrSaQ0qn63eCk2XoP2Xu2M9
8TpflFjhL91dAR/+uX3jKS5G9GJpPE+aSHB1mE7mhvg7SLa9+ZpIU4Qeczr7
15ng+5Tu4QvZkA8gaSjI+eBBAbrqbx+3D3umNYGPruRtDxBnHlZNqOcio557
zmZjROheunb35KUeYPbicH8BmWhFLSvxxAI+348q3/csd0IUt1CtHnUK8uP3
CUjlJkHK+o+557RtULY+pWUjGoP+hO16yvWMBDFH+56FP2uCtxMyZRpbAYj6
7qET1Nj3WNIf9A/GYr/6k+2rvidEfIBm4j9e6aR58mmNnwImsXFd46EPBKJL
78+d/OCdpqThAmWg7sxk2FAjEtyYH8zvPKcSE5v8maZlBEwN7UPaikegscWP
9APnxjFCF/7stwUbQ4aGYF1huHlpprgL501SZ1tZ5j2AOTejV81EDr5J/btj
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
     "]], {}},
  Axes->True,
  AxesLabel->{
    FormBox["\"\[Tau] (s)\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*StyleBox[\\\"R\\\",FontSlant->\\\"Italic\\\"]\\) (m)\"", 
     TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(U\\), \\(\[Theta]\\)]\\) (m)\"", 
     TraditionalForm]},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BaseStyle->{FontSize -> 20, FontFamily -> "Times New Roman"},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{491.7387248198815, 403.6058603561017},
  ImageSizeRaw->Automatic,
  LabelStyle->Directive[
    GrayLevel[0]],
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{{0, 0.02071}, {0, 0.0652543}, {-0.0012820815561316733`, 
    0.0014021335931052848`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.183485030323513, -2.616727614603612, 1.7894411904198109`},
  ViewVertical->{-0.21792434848582432`, 0.4818385074304445, 
   0.8487288324866963}]], "Output",
 CellChangeTimes->{3.855846228343618*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"8bfb379b-b0f4-4e50-a3b3-bb3d370ef177"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Calculate Maximum logarithmic eigenvalues (Maximum principal strain, MPS)\
\>", "Subsection",
 CellChangeTimes->{{3.81172585492785*^9, 3.81172588469834*^9}, {
   3.855832576164754*^9, 3.8558326092563543`*^9}, 
   3.855832870179237*^9},ExpressionUUID->"874450d8-b603-4bae-af43-\
9c6e4fc26c41"],

Cell[CellGroupData[{

Cell[TextData[{
 "Eigenvalues of Right Cauchy\[Dash]Green deformation tensor: ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Lambda]", "2"], TraditionalForm]],ExpressionUUID->
  "a1c4a4f9-752b-4613-a8aa-c9ce07e48c23"]
}], "Subsubsection",
 CellChangeTimes->{{3.8118071468774548`*^9, 3.81180715386202*^9}, {
   3.855832706501532*^9, 3.8558327113908243`*^9}, 
   3.8558340930451727`*^9},ExpressionUUID->"ca09ff30-f4c2-4aca-8ef3-\
6d988b5594fa"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"varNames", "=", 
   RowBox[{"{", 
    RowBox[{"\"\<R\>\"", ",", "\"\<\[CapitalTheta]\>\"", ",", "\"\<Z\>\""}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vars", "=", 
   RowBox[{"ToExpression", "/@", " ", "varNames"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"uVec", "[", 
   RowBox[{"R_", ",", "\[Tau]_"}], "]"}], " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{"0", ",", 
    RowBox[{"u\[Theta]dip", "[", 
     RowBox[{"R", ",", "\[Tau]"}], "]"}], ",", "0"}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"F", " ", "=", " ", 
  RowBox[{
   RowBox[{"IdentityMatrix", "[", "3", "]"}], "+", 
   RowBox[{"Grad", "[", 
    RowBox[{
     RowBox[{"uVec", "[", 
      RowBox[{"R", ",", "\[Tau]"}], "]"}], ",", "vars", ",", 
     "\"\<Cylindrical\>\""}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.811807162519471*^9, 3.8118071691728153`*^9}, {
  3.8558327173498583`*^9, 3.855832751195298*^9}, {3.855832789630678*^9, 
  3.855832796255547*^9}, {3.855833084108548*^9, 3.855833138144848*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"2d52b3dd-cbed-4d98-8c96-478d6caa9818"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"u\[Theta]dip", "[", 
        RowBox[{"R", ",", "\[Tau]"}], "]"}], "R"]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["u\[Theta]dip", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"R", ",", "\[Tau]"}], "]"}], ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8558463137863293`*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"cddb0a97-043f-4f62-b24b-d04ea68f4479"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Eigenvalues", "[", 
    RowBox[{
     SuperscriptBox["F", "\[Transpose]"], ".", "F"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], "//", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Eigenvalues", "[", 
    RowBox[{
     SuperscriptBox["F", "\[Transpose]"], ".", "F"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}], "//", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Eigenvalues", "[", 
    RowBox[{
     SuperscriptBox["F", "\[Transpose]"], ".", "F"}], "]"}], "[", 
   RowBox[{"[", "3", "]"}], "]"}], "//", "Simplify"}]}], "Input",
 CellChangeTimes->{{3.8115408427704697`*^9, 3.8115408825857677`*^9}, {
  3.8118071653211823`*^9, 3.8118071661277847`*^9}, {3.855832716471134*^9, 
  3.8558327217629967`*^9}, {3.855833947005122*^9, 3.8558339543594522`*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"f12881a4-3bca-4d30-ab00-640403848fae"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.85584634212383*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"92ad4290-fd8e-48b3-a1f4-7802aa3c072e"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"2", " ", 
    SuperscriptBox["R", "2"]}], "+", 
   SuperscriptBox[
    RowBox[{"u\[Theta]dip", "[", 
     RowBox[{"R", ",", "\[Tau]"}], "]"}], "2"], "+", 
   RowBox[{
    SuperscriptBox["R", "2"], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["u\[Theta]dip", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"R", ",", "\[Tau]"}], "]"}], "2"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"u\[Theta]dip", "[", 
       RowBox[{"R", ",", "\[Tau]"}], "]"}], "-", 
      RowBox[{"R", " ", 
       RowBox[{
        SuperscriptBox["u\[Theta]dip", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"R", ",", "\[Tau]"}], "]"}]}]}], ")"}], " ", 
    SqrtBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"u\[Theta]dip", "[", 
        RowBox[{"R", ",", "\[Tau]"}], "]"}], "2"], "+", 
      RowBox[{"2", " ", "R", " ", 
       RowBox[{"u\[Theta]dip", "[", 
        RowBox[{"R", ",", "\[Tau]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["u\[Theta]dip", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"R", ",", "\[Tau]"}], "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["R", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"4", "+", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["u\[Theta]dip", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"R", ",", "\[Tau]"}], "]"}], "2"]}], ")"}]}]}]]}]}], 
  RowBox[{"2", " ", 
   SuperscriptBox["R", "2"]}]]], "Output",
 CellChangeTimes->{3.855846342159973*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"0f37b6e0-331c-45c6-9476-0a99eddd1216"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"2", " ", 
    SuperscriptBox["R", "2"]}], "+", 
   SuperscriptBox[
    RowBox[{"u\[Theta]dip", "[", 
     RowBox[{"R", ",", "\[Tau]"}], "]"}], "2"], "+", 
   RowBox[{
    SuperscriptBox["R", "2"], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["u\[Theta]dip", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"R", ",", "\[Tau]"}], "]"}], "2"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"u\[Theta]dip", "[", 
        RowBox[{"R", ",", "\[Tau]"}], "]"}]}], "+", 
      RowBox[{"R", " ", 
       RowBox[{
        SuperscriptBox["u\[Theta]dip", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"R", ",", "\[Tau]"}], "]"}]}]}], ")"}], " ", 
    SqrtBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"u\[Theta]dip", "[", 
        RowBox[{"R", ",", "\[Tau]"}], "]"}], "2"], "+", 
      RowBox[{"2", " ", "R", " ", 
       RowBox[{"u\[Theta]dip", "[", 
        RowBox[{"R", ",", "\[Tau]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["u\[Theta]dip", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"R", ",", "\[Tau]"}], "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["R", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"4", "+", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["u\[Theta]dip", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"R", ",", "\[Tau]"}], "]"}], "2"]}], ")"}]}]}]]}]}], 
  RowBox[{"2", " ", 
   SuperscriptBox["R", "2"]}]]], "Output",
 CellChangeTimes->{3.8558463421834087`*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"3c06d2df-a5bd-4cc2-abb2-2a4d137d435c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Define MPS function", "Subsubsection",
 CellChangeTimes->{{3.855832810821485*^9, 
  3.855832819335833*^9}},ExpressionUUID->"2e1e441f-4dd1-45c6-a97f-\
11361f256854"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "MPS", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MPS", "[", 
   RowBox[{"u\[Theta]dip_", ",", 
    RowBox[{
     SubscriptBox["t", "end"], ":", "_"}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Lambda]2Max", ",", "\[Lambda]2Min"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Lambda]2Max", "=", 
      RowBox[{"Max", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"NMaximize", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              FractionBox["1", 
               RowBox[{"2", " ", 
                SuperscriptBox["R", "2"]}]], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", 
                 SuperscriptBox["R", "2"]}], "+", 
                SuperscriptBox[
                 RowBox[{"u\[Theta]dip", "[", 
                  RowBox[{"R", ",", "\[Tau]"}], "]"}], "2"], "+", 
                RowBox[{
                 SuperscriptBox["R", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{
                   SuperscriptBox["u\[Theta]dip", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                   RowBox[{"R", ",", "\[Tau]"}], "]"}], "2"]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"u\[Theta]dip", "[", 
                    RowBox[{"R", ",", "\[Tau]"}], "]"}], "-", 
                   RowBox[{"R", " ", 
                    RowBox[{
                    SuperscriptBox["u\[Theta]dip", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"R", ",", "\[Tau]"}], "]"}]}]}], ")"}], " ", 
                 RowBox[{"\[Sqrt]", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"u\[Theta]dip", "[", 
                    RowBox[{"R", ",", "\[Tau]"}], "]"}], "2"], "+", 
                    RowBox[{"2", " ", "R", " ", 
                    RowBox[{"u\[Theta]dip", "[", 
                    RowBox[{"R", ",", "\[Tau]"}], "]"}], " ", 
                    RowBox[{
                    SuperscriptBox["u\[Theta]dip", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"R", ",", "\[Tau]"}], "]"}]}], "+", 
                    RowBox[{
                    SuperscriptBox["R", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"4", "+", 
                    SuperscriptBox[
                    RowBox[{
                    SuperscriptBox["u\[Theta]dip", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"R", ",", "\[Tau]"}], "]"}], "2"]}], ")"}]}]}], 
                   ")"}]}]}]}], ")"}]}], "\[IndentingNewLine]", ",", 
             RowBox[{"0", "<", "R", "<", 
              SubscriptBox["R", "0"]}], ",", 
             RowBox[{"0.0", "<", "\[Tau]", "<", 
              SubscriptBox["t", "end"]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"R", ",", "\[Tau]"}], "}"}], ",", 
           RowBox[{"MaxIterations", "\[Rule]", "1000"}], ",", 
           RowBox[{"AccuracyGoal", "\[Rule]", "1"}]}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"NMaximize", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              FractionBox["1", 
               RowBox[{"2", " ", 
                SuperscriptBox["R", "2"]}]], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", 
                 SuperscriptBox["R", "2"]}], "+", 
                SuperscriptBox[
                 RowBox[{"u\[Theta]dip", "[", 
                  RowBox[{"R", ",", "\[Tau]"}], "]"}], "2"], "+", 
                RowBox[{
                 SuperscriptBox["R", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{
                   SuperscriptBox["u\[Theta]dip", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                   RowBox[{"R", ",", "\[Tau]"}], "]"}], "2"]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"u\[Theta]dip", "[", 
                    RowBox[{"R", ",", "\[Tau]"}], "]"}]}], "+", 
                   RowBox[{"R", " ", 
                    RowBox[{
                    SuperscriptBox["u\[Theta]dip", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"R", ",", "\[Tau]"}], "]"}]}]}], ")"}], " ", 
                 RowBox[{"\[Sqrt]", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"u\[Theta]dip", "[", 
                    RowBox[{"R", ",", "\[Tau]"}], "]"}], "2"], "+", 
                    RowBox[{"2", " ", "R", " ", 
                    RowBox[{"u\[Theta]dip", "[", 
                    RowBox[{"R", ",", "\[Tau]"}], "]"}], " ", 
                    RowBox[{
                    SuperscriptBox["u\[Theta]dip", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"R", ",", "\[Tau]"}], "]"}]}], "+", 
                    RowBox[{
                    SuperscriptBox["R", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"4", "+", 
                    SuperscriptBox[
                    RowBox[{
                    SuperscriptBox["u\[Theta]dip", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"R", ",", "\[Tau]"}], "]"}], "2"]}], ")"}]}]}], 
                   ")"}]}]}]}], ")"}]}], "\[IndentingNewLine]", ",", 
             RowBox[{"0", "<", "R", "<", 
              SubscriptBox["R", "0"]}], ",", 
             RowBox[{"0.0", "<", "\[Tau]", "<", 
              SubscriptBox["t", "end"]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"R", ",", "\[Tau]"}], "}"}], ",", 
           RowBox[{"MaxIterations", "\[Rule]", "1000"}], ",", 
           RowBox[{"AccuracyGoal", "\[Rule]", "1"}]}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"\[Lambda]2Min", "=", 
      RowBox[{"Min", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"NMinimize", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              FractionBox["1", 
               RowBox[{"2", " ", 
                SuperscriptBox["R", "2"]}]], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", 
                 SuperscriptBox["R", "2"]}], "+", 
                SuperscriptBox[
                 RowBox[{"u\[Theta]dip", "[", 
                  RowBox[{"R", ",", "\[Tau]"}], "]"}], "2"], "+", 
                RowBox[{
                 SuperscriptBox["R", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{
                   SuperscriptBox["u\[Theta]dip", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                   RowBox[{"R", ",", "\[Tau]"}], "]"}], "2"]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"u\[Theta]dip", "[", 
                    RowBox[{"R", ",", "\[Tau]"}], "]"}], "-", 
                   RowBox[{"R", " ", 
                    RowBox[{
                    SuperscriptBox["u\[Theta]dip", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"R", ",", "\[Tau]"}], "]"}]}]}], ")"}], " ", 
                 RowBox[{"\[Sqrt]", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"u\[Theta]dip", "[", 
                    RowBox[{"R", ",", "\[Tau]"}], "]"}], "2"], "+", 
                    RowBox[{"2", " ", "R", " ", 
                    RowBox[{"u\[Theta]dip", "[", 
                    RowBox[{"R", ",", "\[Tau]"}], "]"}], " ", 
                    RowBox[{
                    SuperscriptBox["u\[Theta]dip", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"R", ",", "\[Tau]"}], "]"}]}], "+", 
                    RowBox[{
                    SuperscriptBox["R", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"4", "+", 
                    SuperscriptBox[
                    RowBox[{
                    SuperscriptBox["u\[Theta]dip", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"R", ",", "\[Tau]"}], "]"}], "2"]}], ")"}]}]}], 
                   ")"}]}]}]}], ")"}]}], "\[IndentingNewLine]", ",", 
             RowBox[{"0", "<", "R", "<", 
              SubscriptBox["R", "0"]}], ",", 
             RowBox[{"0.0", "<", "\[Tau]", "<", 
              SubscriptBox["t", "end"]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"R", ",", "\[Tau]"}], "}"}]}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"NMinimize", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              FractionBox["1", 
               RowBox[{"2", " ", 
                SuperscriptBox["R", "2"]}]], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", 
                 SuperscriptBox["R", "2"]}], "+", 
                SuperscriptBox[
                 RowBox[{"u\[Theta]dip", "[", 
                  RowBox[{"R", ",", "\[Tau]"}], "]"}], "2"], "+", 
                RowBox[{
                 SuperscriptBox["R", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{
                   SuperscriptBox["u\[Theta]dip", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                   RowBox[{"R", ",", "\[Tau]"}], "]"}], "2"]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"u\[Theta]dip", "[", 
                    RowBox[{"R", ",", "\[Tau]"}], "]"}]}], "+", 
                   RowBox[{"R", " ", 
                    RowBox[{
                    SuperscriptBox["u\[Theta]dip", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"R", ",", "\[Tau]"}], "]"}]}]}], ")"}], " ", 
                 RowBox[{"\[Sqrt]", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"u\[Theta]dip", "[", 
                    RowBox[{"R", ",", "\[Tau]"}], "]"}], "2"], "+", 
                    RowBox[{"2", " ", "R", " ", 
                    RowBox[{"u\[Theta]dip", "[", 
                    RowBox[{"R", ",", "\[Tau]"}], "]"}], " ", 
                    RowBox[{
                    SuperscriptBox["u\[Theta]dip", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"R", ",", "\[Tau]"}], "]"}]}], "+", 
                    RowBox[{
                    SuperscriptBox["R", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"4", "+", 
                    SuperscriptBox[
                    RowBox[{
                    SuperscriptBox["u\[Theta]dip", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"R", ",", "\[Tau]"}], "]"}], "2"]}], ")"}]}]}], 
                   ")"}]}]}]}], ")"}]}], "\[IndentingNewLine]", ",", 
             RowBox[{"0", "<", "R", "<", 
              SubscriptBox["R", "0"]}], ",", 
             RowBox[{"0.0", "<", "\[Tau]", "<", 
              SubscriptBox["t", "end"]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"R", ",", "\[Tau]"}], "}"}]}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"From", " ", 
       SuperscriptBox["\[Lambda]", "2"], " ", "to", " ", "log", 
       RowBox[{"(", "\[Lambda]", ")"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Max", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Log", "[", "\[Lambda]2Max", "]"}], "/", "2."}], ",", 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"Log", "[", "\[Lambda]2Min", "]"}], "/", "2."}], "]"}]}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8116753973042917`*^9, 3.811675472192863*^9}, {
  3.811675646227895*^9, 3.811675733800353*^9}, {3.811675801500333*^9, 
  3.8116758162021723`*^9}, {3.811678131028719*^9, 3.811678131145102*^9}, {
  3.811678641418488*^9, 3.811678654324839*^9}, {3.811678883643312*^9, 
  3.8116789253962803`*^9}, {3.855832184108746*^9, 3.8558322206077757`*^9}, {
  3.8558322545326757`*^9, 3.855832501360488*^9}, {3.855832564447399*^9, 
  3.85583257336509*^9}, {3.855832631874669*^9, 3.85583263524154*^9}, {
  3.8558333872660513`*^9, 3.855833407873376*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"666a8233-4713-41ea-b515-e3251474a3fe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MPS", "[", 
  RowBox[{
   SubscriptBox["U", "\[Theta]"], ",", 
   SubscriptBox["t", "end"]}], "]"}]], "Input",
 CellChangeTimes->{{3.855832506918898*^9, 3.855832519844654*^9}, 
   3.855832565872465*^9, 3.855835698541896*^9},
 CellLabel->"In[69]:=",ExpressionUUID->"bba0eae2-0b15-4329-97eb-4b9f8181a90f"],

Cell[BoxData["0.03525246235479614`"], "Output",
 CellChangeTimes->{3.8558464905201406`*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"436242c9-24ca-461d-b9f7-02e3e8757be4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Eigenvalues of stretch rate tensor", "Subsubsection",
 CellChangeTimes->{{3.8118071468774548`*^9, 3.81180715386202*^9}, {
   3.855832706501532*^9, 3.8558327113908243`*^9}, 3.8558340930451727`*^9, {
   3.855834133325513*^9, 3.855834135571713*^9}, {3.855834599591529*^9, 
   3.855834601209426*^9}},ExpressionUUID->"f3cb02e9-3240-4e6b-b023-\
ea65ab069492"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"vVec", "[", 
   RowBox[{"R_", ",", "\[Tau]_"}], "]"}], " ", ":=", 
  RowBox[{"D", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"u\[Theta]dip", "[", 
       RowBox[{"R", ",", "\[Tau]"}], "]"}], ",", "0"}], "}"}], ",", 
    "\[Tau]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"L", "=", 
  RowBox[{"Grad", "[", 
   RowBox[{
    RowBox[{"vVec", "[", 
     RowBox[{"R", ",", "\[Tau]"}], "]"}], ",", "vars", ",", 
    "\"\<Cylindrical\>\""}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.811807162519471*^9, 3.8118071691728153`*^9}, {
  3.8558327173498583`*^9, 3.855832751195298*^9}, {3.855832789630678*^9, 
  3.855832796255547*^9}, {3.855833084108548*^9, 3.855833138144848*^9}, {
  3.855834612269616*^9, 3.855834623702176*^9}, {3.855834655740993*^9, 
  3.855834660927123*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"6300ba23-46fc-4530-b438-3cd7539f2535"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["u\[Theta]dip", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"R", ",", "\[Tau]"}], "]"}], "R"]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["u\[Theta]dip", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "1"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"R", ",", "\[Tau]"}], "]"}], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.855846506560314*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"f5aa7f06-3eab-48bd-8854-bad7a7d26761"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Eigenvalues", "[", 
    FractionBox[
     RowBox[{"L", "+", 
      SuperscriptBox["L", "\[Transpose]"]}], "2"], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], "//", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Eigenvalues", "[", 
    FractionBox[
     RowBox[{"L", "+", 
      SuperscriptBox["L", "\[Transpose]"]}], "2"], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}], "//", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Eigenvalues", "[", 
    FractionBox[
     RowBox[{"L", "+", 
      SuperscriptBox["L", "\[Transpose]"]}], "2"], "]"}], "[", 
   RowBox[{"[", "3", "]"}], "]"}], "//", "Simplify"}]}], "Input",
 CellChangeTimes->{{3.8115408427704697`*^9, 3.8115408825857677`*^9}, {
  3.8118071653211823`*^9, 3.8118071661277847`*^9}, {3.855832716471134*^9, 
  3.8558327217629967`*^9}, {3.855833947005122*^9, 3.8558339543594522`*^9}, {
  3.855834706141971*^9, 3.8558347338875027`*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"2e961270-79a8-4074-a9ce-7ba269345804"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    SuperscriptBox["u\[Theta]dip", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"R", ",", "\[Tau]"}], "]"}], "-", 
   RowBox[{"R", " ", 
    RowBox[{
     SuperscriptBox["u\[Theta]dip", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"R", ",", "\[Tau]"}], "]"}]}]}], 
  RowBox[{"2", " ", "R"}]]], "Output",
 CellChangeTimes->{3.855846508474671*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"844688c4-4a34-4398-8bcc-e43a5bc0c78a"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["u\[Theta]dip", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"R", ",", "\[Tau]"}], "]"}], "-", 
    RowBox[{"R", " ", 
     RowBox[{
      SuperscriptBox["u\[Theta]dip", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "1"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"R", ",", "\[Tau]"}], "]"}]}]}], 
   RowBox[{"2", " ", "R"}]]}]], "Output",
 CellChangeTimes->{3.855846508485338*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"12c9f17c-a344-4cd2-b25d-6e5b23c9d209"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.8558465084953413`*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"db092d75-36ea-43f2-a7ee-1ddd3009d764"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Define MPSR function", "Subsubsection",
 CellChangeTimes->{{3.855832810821485*^9, 3.855832819335833*^9}, {
  3.855834778608243*^9, 
  3.8558347797549067`*^9}},ExpressionUUID->"d5749549-70db-4390-b3f6-\
009330d3d482"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "MPSR", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MPSR", "[", 
   RowBox[{"u\[Theta]dip_", ",", 
    RowBox[{
     SubscriptBox["t", "end"], ":", "_"}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"NMaximize", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{
            SuperscriptBox["u\[Theta]dip", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"R", ",", "\[Tau]"}], "]"}], "-", 
           RowBox[{"R", " ", 
            RowBox[{
             SuperscriptBox["u\[Theta]dip", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"R", ",", "\[Tau]"}], "]"}]}]}], 
          RowBox[{"2", " ", "R"}]], ",", 
         RowBox[{"0", "<", "R", "<", 
          SubscriptBox["R", "0"]}], ",", 
         RowBox[{"0.0", "<", "\[Tau]", "<", 
          SubscriptBox["t", "end"]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"R", ",", "\[Tau]"}], "}"}], ",", 
       RowBox[{"MaxIterations", "\[Rule]", "1000"}], ",", 
       RowBox[{"AccuracyGoal", "\[Rule]", "1"}]}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8116753973042917`*^9, 3.811675472192863*^9}, {
  3.811675646227895*^9, 3.811675733800353*^9}, {3.811675801500333*^9, 
  3.8116758162021723`*^9}, {3.811678131028719*^9, 3.811678131145102*^9}, {
  3.811678641418488*^9, 3.811678654324839*^9}, {3.811678883643312*^9, 
  3.8116789253962803`*^9}, {3.855832184108746*^9, 3.8558322206077757`*^9}, {
  3.8558322545326757`*^9, 3.855832501360488*^9}, {3.855832564447399*^9, 
  3.85583257336509*^9}, {3.855832631874669*^9, 3.85583263524154*^9}, {
  3.8558333872660513`*^9, 3.855833407873376*^9}, {3.855834804682609*^9, 
  3.855834809913711*^9}, {3.855834880369648*^9, 3.8558349243349648`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"261cf22a-0fec-4d06-acb4-0e64d1fe4c12"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MPSR", "[", 
  RowBox[{
   SubscriptBox["U", "\[Theta]"], ",", 
   SubscriptBox["t", "end"]}], "]"}]], "Input",
 CellChangeTimes->{{3.855832506918898*^9, 3.855832519844654*^9}, 
   3.855832565872465*^9, 3.8558349123982153`*^9, 3.855835726371875*^9},
 CellLabel->"In[77]:=",ExpressionUUID->"0ffeb686-e535-4771-bf40-a3acf8e91eb0"],

Cell[BoxData["19.27713440321354`"], "Output",
 CellChangeTimes->{3.855846527005887*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"c3fa775e-983e-4c23-84b1-a64006991f27"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"CalculateMPSandMPSR", "[", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[CapitalOmega]", "\[DoublePrime]"], ":", "_"}], ",", 
    "\[CapitalTau]_", ",", 
    RowBox[{
     SubscriptBox["t", "end"], ":", "_"}], ",", "MM_", ",", "NN_"}], "]"}], ":=",
   "\[IndentingNewLine]", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"CalculateDispTheta", "[", 
      RowBox[{
       SuperscriptBox["\[CapitalOmega]", "\[DoublePrime]"], ",", 
       "\[CapitalTau]", ",", "MM", ",", "NN"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"MPS", "[", 
        RowBox[{
         SubscriptBox["U", "\[Theta]"], ",", 
         SubscriptBox["t", "end"]}], "]"}], ",", 
       RowBox[{"MPSR", "[", 
        RowBox[{
         SubscriptBox["U", "\[Theta]"], ",", 
         SubscriptBox["t", "end"]}], "]"}]}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.855837161285449*^9, 3.855837256618231*^9}, 
   3.855837293373496*^9, 3.857638956675989*^9, {3.857638991455408*^9, 
   3.857638993523575*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"e4036b06-6426-4fe1-a751-67d3b4d57d5e"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ClearAll", "[", 
    SuperscriptBox["\[CapitalOmega]", "\[DoublePrime]"], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["t", "c"], " ", "=", " ", "0.004142"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Alpha]", "p"], "=", "2000"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["\[CapitalOmega]", "\[DoublePrime]"], "[", "\[Tau]_", 
      "]"}], "=", " ", 
     RowBox[{"Piecewise", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Alpha]", "p"], 
           RowBox[{"Exp", "[", 
            RowBox[{"1", "-", 
             FractionBox["1", 
              RowBox[{"1", "-", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Tau]", "/", 
                   SubscriptBox["t", "c"]}], "-", "1"}], ")"}], "2"]}]]}], 
            "]"}]}], ",", 
          RowBox[{"0", "<", "\[Tau]", "\[LessEqual]", 
           RowBox[{"2", " ", 
            SubscriptBox["t", "c"]}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Tau]", ">", 
           RowBox[{"2", " ", 
            SubscriptBox["t", "c"]}]}]}], "}"}]}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["t", "end"], "=", " ", 
     RowBox[{"5", " ", 
      SubscriptBox["t", "c"]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalTau]", "=", " ", 
     RowBox[{"2", 
      SubscriptBox["t", "end"]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.855837302897295*^9, 3.855837317817409*^9}, 
   3.855846588147292*^9},
 CellLabel->
  "In[118]:=",ExpressionUUID->"de6e2aa0-1ee6-49cb-90e8-964a4e416111"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CalculateMPSandMPSR", "[", 
  RowBox[{
   SuperscriptBox["\[CapitalOmega]", "\[DoublePrime]"], ",", "\[CapitalTau]", 
   ",", 
   SubscriptBox["t", "end"], ",", "30", ",", "20"}], "]"}]], "Input",
 CellChangeTimes->{{3.855837302897295*^9, 3.855837317817409*^9}, 
   3.855846588147292*^9},
 CellLabel->
  "In[124]:=",ExpressionUUID->"6fd63ed4-8607-4517-bd10-ae85b6fad284"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.03525246235479614`", ",", "19.27713440321354`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.85763888119459*^9},
 CellLabel->
  "Out[124]=",ExpressionUUID->"307a84a3-5673-4557-9382-03e5c1ccfea4"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Convergence study", "Section",
 CellChangeTimes->{{3.857640818127925*^9, 
  3.857640823739421*^9}},ExpressionUUID->"6400e7a7-62b9-4c1a-8dea-\
47230ba1548d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ConvergenceTest", "[", "MM_List", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"data2", " ", "=", " ", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"CalculateMPSandMPSR", "[", 
         RowBox[{
          SuperscriptBox["\[CapitalOmega]", "\[DoublePrime]"], ",", 
          "\[CapitalTau]", ",", 
          SubscriptBox["t", "end"], ",", "30", ",", "#"}], "]"}], "&"}], ",", 
       "MM"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.857638898794726*^9, 3.857638914959819*^9}, 
   3.857639000182757*^9, {3.8576390370919857`*^9, 3.8576391196905622`*^9}, {
   3.857639170478146*^9, 3.857639206878489*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"bf79cedb-c1f2-4f0c-9112-8cb8b148f522"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MMlist", " ", "=", " ", 
  RowBox[{"Range", "[", 
   RowBox[{"10", ",", "100", ",", "10"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8576391251949377`*^9, 3.8576391358352957`*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"7bcbc6f6-fc40-4b83-979e-86718e20a02b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", ",", "70", ",",
    "80", ",", "90", ",", "100"}], "}"}]], "Output",
 CellChangeTimes->{3.857639136256777*^9},
 CellLabel->
  "Out[125]=",ExpressionUUID->"c6a8f59a-5e9a-4553-9973-ec309048d106"]
}, Open  ]],

Cell[BoxData["MMlist"], "Input",ExpressionUUID->"3a1ec449-d2e3-4049-891b-735626cff519"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ConvergenceTest", "[", "MMlist", "]"}]], "Input",
 CellChangeTimes->{3.857639220091837*^9},
 CellLabel->
  "In[127]:=",ExpressionUUID->"0824d3c5-208c-4f84-abef-eeb3aa4c97c0"],

Cell["\<\
Mathematica has detected an internal error:
  iCopyExpr() called on symbol.

Please report this error as soon as possible to
support@wolfram.com giving as many details as possible
of the circumstances under which it occurred.
\
\>", "Print",
 CellChangeTimes->{3.857640107476832*^9},
 CellLabel->
  "During evaluation of \
In[127]:=",ExpressionUUID->"da7d2916-9411-4a3c-bc02-84a6efd2e30c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Parametric study", "Section",
 CellChangeTimes->{{3.857639322383782*^9, 
  3.857639327846912*^9}},ExpressionUUID->"793e17f9-d94b-4b0e-b7e7-\
f9a89a816cd4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "\[CapitalTau]"}]], "Input",
 CellChangeTimes->{3.8576393865133457`*^9},
 CellLabel->"In[31]:=",ExpressionUUID->"4d4e9c6d-aa63-4f3e-84ca-3ae919b10423"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`\[CapitalTau]\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`\[CapitalTau]\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`\[CapitalTau]\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> "Global`\[CapitalTau]", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> None, "SubValues" -> None, "DefaultValues" -> None, 
    "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {}, "FullName" -> "Global`\[CapitalTau]"], 
   False]]], "Output",
 CellChangeTimes->{3.857640158968627*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"02e66786-c6bc-4218-81be-020b757001e2"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"CalculateDispTheta", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Alpha]", "p"], ":", "_"}], ",", 
    RowBox[{
     SubscriptBox["t", "c"], ":", "_"}], ",", "\[CapitalTau]_", ",", "MM_", 
    ",", "NN_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{
       OverscriptBox["T", "^"], "=", 
       RowBox[{"\[CapitalTau]", "/", 
        SubscriptBox["\[Tau]", "c"]}]}], ",", 
      OverscriptBox["\[Gamma]", "^"], ",", 
      OverscriptBox["\[Lambda]", "^"], ",", 
      OverscriptBox["f", "^"], ",", 
      OverscriptBox["g", "^"], ",", "r", ",", "p", ",", "B", ",", "A", ",", 
      "F", ",", 
      OverscriptBox["q", "^"], ",", 
      SubscriptBox[
       OverscriptBox["U", "^"], "p"], ",", 
      SubscriptBox[
       OverscriptBox["U", "^"], "h"], ",", 
      SubscriptBox[
       OverscriptBox["U", "^"], "\[Theta]"]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["\[CapitalOmega]", "\[DoublePrime]"], "[", "\[Tau]_", 
       "]"}], "=", " ", 
      RowBox[{"Piecewise", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Alpha]", "p"], 
            RowBox[{"Exp", "[", 
             RowBox[{"1", "-", 
              FractionBox["1", 
               RowBox[{"1", "-", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Tau]", "/", 
                    SubscriptBox["t", "c"]}], "-", "1"}], ")"}], "2"]}]]}], 
             "]"}]}], ",", 
           RowBox[{"0", "<", "\[Tau]", "\[LessEqual]", 
            RowBox[{"2", " ", 
             SubscriptBox["t", "c"]}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"\[Tau]", ">", 
            RowBox[{"2", " ", 
             SubscriptBox["t", "c"]}]}]}], "}"}]}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        OverscriptBox["\[CapitalOmega]", "^"], "\[DoublePrime]"], "[", 
       RowBox[{
        OverscriptBox["\[Tau]", "^"], ":", "_"}], "]"}], "=", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[CapitalOmega]", "\[DoublePrime]"], "[", 
        RowBox[{
         OverscriptBox["\[Tau]", "^"], " ", 
         SubscriptBox["\[Tau]", "c"]}], "]"}], 
       SuperscriptBox[
        SubscriptBox["\[Tau]", "c"], "2"]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       OverscriptBox["\[Gamma]", "^"], "[", "m_", "]"}], "=", 
      RowBox[{"N", "@", 
       RowBox[{"BesselJZero", "[", 
        RowBox[{"1", ",", "m"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       OverscriptBox["g", "^"], "[", "m_", "]"}], ":=", 
      RowBox[{
       RowBox[{
        RowBox[{"Sqrt", "[", "2", "]"}], 
        FractionBox[
         RowBox[{" ", 
          RowBox[{"BesselJ", "[", 
           RowBox[{"1", ",", 
            RowBox[{"#1", "  ", 
             RowBox[{
              OverscriptBox["\[Gamma]", "^"], "[", "m", "]"}]}]}], "]"}]}], 
         RowBox[{"BesselJ", "[", 
          RowBox[{"0", ",", " ", 
           RowBox[{
            OverscriptBox["\[Gamma]", "^"], "[", "m", "]"}]}], "]"}]]}], 
       "&"}]}], "  ", ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       OverscriptBox["\[Lambda]", "^"], "[", "n_", "]"}], "=", 
      FractionBox[
       RowBox[{"2.0", "\[Pi]", " ", "n", " "}], 
       OverscriptBox["T", "^"]]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       OverscriptBox["f", "^"], "[", "n_", "]"}], "=", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{
          OverscriptBox["\[Lambda]", "^"], "[", "n", "]"}], " ", "#2"}], 
        "]"}], "&"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"r", "[", "n_", "]"}], ":=", 
      RowBox[{
       FractionBox["4.", 
        OverscriptBox["T", "^"]], 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox[
            OverscriptBox["\[CapitalOmega]", "^"], "\[DoublePrime]"], "[", 
           OverscriptBox["\[Tau]", "^"], "]"}], 
          RowBox[{
           RowBox[{
            OverscriptBox["f", "^"], "[", "n", "]"}], "[", 
           RowBox[{
            OverscriptBox["R", "^"], ",", 
            OverscriptBox["\[Tau]", "^"]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{
           OverscriptBox["\[Tau]", "^"], ",", "0", ",", 
           FractionBox[
            OverscriptBox["T", "^"], "2"]}], "}"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"p", "[", "m_", "]"}], ":=", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{
           RowBox[{
            OverscriptBox["g", "^"], "[", "m", "]"}], "[", 
           RowBox[{
            OverscriptBox["R", "^"], ",", 
            OverscriptBox["\[Tau]", "^"]}], "]"}]}], 
         SuperscriptBox[
          OverscriptBox["R", "^"], "2"]}], ",", 
        RowBox[{"{", 
         RowBox[{
          OverscriptBox["R", "^"], ",", "0", ",", "1"}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"B", "[", 
       RowBox[{"m_", ",", "n_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"p", "[", "m", "]"}], "*", 
       RowBox[{"r", "[", "n", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       OverscriptBox["q", "^"], "[", "m_", "]"}], ":=", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{
          OverscriptBox["\[Gamma]", "^"], "[", "m", "]"}], "#2"}], "]"}], 
       "&"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"A", "[", 
       RowBox[{"m_", ",", "n_"}], "]"}], ":=", 
      FractionBox[
       RowBox[{"B", "[", 
        RowBox[{"m", ",", "n"}], "]"}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{
          OverscriptBox["\[Gamma]", "^"], "[", "m", "]"}], "2"], "-", 
        SuperscriptBox[
         RowBox[{
          OverscriptBox["\[Lambda]", "^"], "[", "n", "]"}], "2"]}]]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"F", "[", "m_", "]"}], ":=", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"A", "[", 
            RowBox[{"m", ",", "n"}], "]"}], "*", 
           RowBox[{
            OverscriptBox["\[Lambda]", "^"], "[", "n", "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "NN"}], "}"}]}], "]"}], 
        RowBox[{" ", 
         RowBox[{
          OverscriptBox["\[Gamma]", "^"], "[", "m", "]"}]}]]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       SubscriptBox[
        OverscriptBox["U", "^"], "p"], "[", 
       RowBox[{
        RowBox[{
         OverscriptBox["R", "^"], ":", "_"}], ",", 
        RowBox[{
         OverscriptBox["\[Tau]", "^"], ":", "_"}]}], "]"}], "=", 
      RowBox[{"Sum", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           OverscriptBox["g", "^"], "[", "m", "]"}], "[", 
          RowBox[{
           OverscriptBox["R", "^"], ",", 
           OverscriptBox["\[Tau]", "^"]}], "]"}], " ", "*", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"A", "[", 
             RowBox[{"m", ",", "n"}], "]"}], "*", 
            RowBox[{
             RowBox[{
              OverscriptBox["f", "^"], "[", "n", "]"}], "[", 
             RowBox[{
              OverscriptBox["R", "^"], ",", 
              OverscriptBox["\[Tau]", "^"]}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "NN"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "MM"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       SubscriptBox[
        OverscriptBox["U", "^"], "h"], "[", 
       RowBox[{
        RowBox[{
         OverscriptBox["R", "^"], ":", "_"}], ",", 
        RowBox[{
         OverscriptBox["\[Tau]", "^"], ":", "_"}]}], "]"}], "=", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"F", "[", "m", "]"}], "*", " ", 
         RowBox[{
          RowBox[{
           OverscriptBox["g", "^"], "[", "m", "]"}], "[", 
          RowBox[{
           OverscriptBox["R", "^"], ",", 
           OverscriptBox["\[Tau]", "^"]}], "]"}], " ", "*", 
         RowBox[{
          RowBox[{
           OverscriptBox["q", "^"], "[", "m", "]"}], "[", 
          RowBox[{
           OverscriptBox["R", "^"], ",", 
           OverscriptBox["\[Tau]", "^"]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "MM"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       SubscriptBox[
        OverscriptBox["U", "^"], "\[Theta]"], "[", 
       RowBox[{
        RowBox[{
         OverscriptBox["R", "^"], ":", "_"}], ",", 
        RowBox[{
         OverscriptBox["\[Tau]", "^"], ":", "_"}]}], "]"}], "=", 
      RowBox[{"Chop", "[", 
       RowBox[{
        RowBox[{"Simplify", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox[
            OverscriptBox["U", "^"], "p"], "[", 
           RowBox[{
            OverscriptBox["R", "^"], ",", 
            OverscriptBox["\[Tau]", "^"]}], "]"}], "+", 
          RowBox[{
           SubscriptBox[
            OverscriptBox["U", "^"], "h"], "[", 
           RowBox[{
            OverscriptBox["R", "^"], ",", 
            OverscriptBox["\[Tau]", "^"]}], "]"}]}], "]"}], ",", 
        "\[Epsilon]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       SubscriptBox["U", "\[Theta]"], "[", 
       RowBox[{"R_", ",", "\[Tau]_"}], "]"}], " ", "=", " ", 
      RowBox[{
       SubscriptBox["R", "0"], " ", 
       RowBox[{
        SubscriptBox[
         OverscriptBox["U", "^"], "\[Theta]"], "[", 
        RowBox[{
         FractionBox["R", 
          SubscriptBox["R", "0"]], " ", ",", 
         FractionBox["\[Tau]", 
          SubscriptBox["\[Tau]", "c"]]}], " ", "]"}]}]}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"NIntegrate", "::", "slwcon"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"NIntegrate", "::", "ncvb"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"General", "::", "munfl"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.857639340565444*^9, 3.857639401801405*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"aedaa0c8-e4e4-4046-9189-c6db1a4ee866"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "CalculateMPSandMPSR", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CalculateMPSandMPSR", "[", 
   RowBox[{"para_List", ",", "\[CapitalTau]_", ",", 
    RowBox[{
     SubscriptBox["t", "end"], ":", "_"}], ",", "MM_", ",", "NN_"}], "]"}], ":=",
   "\[IndentingNewLine]", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Alpha]", "p"], "=", 
       RowBox[{"para", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", 
      RowBox[{
       SubscriptBox["t", "c"], "=", 
       RowBox[{"para", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"CalculateDispTheta", "[", 
      RowBox[{
       SubscriptBox["\[Alpha]", "p"], ",", 
       SubscriptBox["t", "c"], ",", "\[CapitalTau]", ",", "MM", ",", "NN"}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"MPS", "[", 
        RowBox[{
         SubscriptBox["U", "\[Theta]"], ",", 
         SubscriptBox["t", "end"]}], "]"}], ",", 
       RowBox[{"MPSR", "[", 
        RowBox[{
         SubscriptBox["U", "\[Theta]"], ",", 
         SubscriptBox["t", "end"]}], "]"}]}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.8576394714386253`*^9, 3.8576394957096367`*^9}, {
  3.857640278800006*^9, 3.857640325044566*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"99db6e36-01dd-42f6-b7d8-73f24bb00edf"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\[Alpha]plist", "=", 
  RowBox[{"{", 
   RowBox[{"1.1", ",", "1.2"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"tclist", " ", "=", 
  RowBox[{"{", 
   RowBox[{"0.1", ",", "0.2", ",", "0.5"}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.857639512863055*^9, 3.8576395881148577`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"e047c593-d4b8-415b-9ce7-f947194876cc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.1`", ",", "1.2`"}], "}"}]], "Output",
 CellChangeTimes->{3.857640167131915*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"a8c3e2db-3eac-49b2-a456-1cbd4200f209"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.1`", ",", "0.2`", ",", "0.5`"}], "}"}]], "Output",
 CellChangeTimes->{3.857640167134563*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"33718e84-4aa3-4950-b6b9-858380941258"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"parameterlist", " ", "=", 
  RowBox[{"Tuples", "[", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]plist", ",", "tclist"}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.857639642291051*^9, 3.857639647866014*^9}, {
  3.8576397495374193`*^9, 3.8576397585936327`*^9}, {3.8576401706952143`*^9, 
  3.85764019684334*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"24ec997a-3eda-4ff1-85d0-fce9da443629"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.1`", ",", "0.1`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.1`", ",", "0.2`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.1`", ",", "0.5`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.2`", ",", "0.1`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.2`", ",", "0.2`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.2`", ",", "0.5`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.857640171130533*^9, 3.8576401973776007`*^9}},
 CellLabel->"Out[36]=",ExpressionUUID->"632ce342-b2f1-4142-8ef7-68da9d0be8be"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["t", "c"], " ", "=", " ", "0.004142"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Alpha]", "p"], "=", "2000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["t", "end"], "=", " ", 
   RowBox[{"5", " ", 
    SubscriptBox["t", "c"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalTau]", "=", " ", 
   RowBox[{"2", 
    SubscriptBox["t", "end"]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8576404861039753`*^9, 
  3.8576405041647673`*^9}},ExpressionUUID->"1bb4563e-767a-46f4-bcb8-\
a58533ec27e8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.03525246235479614`", ",", "19.27713440321354`"}], "}"}]], "Input",\

 CellChangeTimes->{
  3.857640576542183*^9},ExpressionUUID->"d0e946b0-1462-48c2-87cf-\
010dcb07db94"],

Cell[BoxData["Clear"], "Input",
 CellChangeTimes->{{3.8576405124907103`*^9, 
  3.8576405348998938`*^9}},ExpressionUUID->"54b0ea31-e8a2-4b05-b5cc-\
95c5e0026d78"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CalculateMPSandMPSR", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2000", ",", "0.004142"}], "}"}], ",", "\[CapitalTau]", ",", 
   SubscriptBox["t", "end"], ",", "30", ",", "20"}], "]"}]], "Input",
 CellChangeTimes->{{3.857640438158525*^9, 3.8576404735790586`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"df239728-0b03-41f3-b6ca-a7ee832651d6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.03525246235479614`", ",", "19.27713440321354`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.85764058210948*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"fdbf3ea3-232a-4322-8c88-8338dbccaa3b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"CalculateMPSandMPSR", "[", 
     RowBox[{"#", ",", "\[CapitalTau]", ",", 
      SubscriptBox["t", "end"], ",", "30", ",", "20"}], "]"}], "&"}], ",", 
   RowBox[{"parameterlist", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "2"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.857639594542698*^9, 3.85763961873627*^9}, {
   3.85763977015475*^9, 3.857639772839118*^9}, {3.857639846734833*^9, 
   3.857639855967581*^9}, {3.8576402145631332`*^9, 3.857640220212818*^9}, {
   3.857640260365039*^9, 3.857640260908862*^9}, {3.85764033187533*^9, 
   3.857640339441876*^9}, 
   3.857640612996951*^9},ExpressionUUID->"0907e1e7-2c41-4930-8fa6-\
48fcf256c661"],

Cell[BoxData[
 TemplateBox[{
  "Power", "infy", 
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \
SuperscriptBox[\\\"0.`\\\", \\\"2\\\"]]\\) encountered.\"", 2, 40, 7, 
   33532418653045643302, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.857640232310268*^9, 3.8576403727797327`*^9},
 CellLabel->
  "During evaluation of \
In[40]:=",ExpressionUUID->"ea454216-5021-4710-ab20-8ab9b266312e"],

Cell[BoxData[
 TemplateBox[{
  "Infinity", "indet", 
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0.`\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\) encountered.\"", 2, 40, 8, 33532418653045643302, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.857640232310268*^9, 3.857640372786645*^9},
 CellLabel->
  "During evaluation of \
In[40]:=",ExpressionUUID->"6227840b-fa10-4a94-9b3b-434ea89f8e18"],

Cell[BoxData[
 TemplateBox[{
  "Power", "infy", 
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \
SuperscriptBox[\\\"0.`\\\", \\\"2\\\"]]\\) encountered.\"", 2, 40, 9, 
   33532418653045643302, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.857640232310268*^9, 3.857640372792552*^9},
 CellLabel->
  "During evaluation of \
In[40]:=",ExpressionUUID->"99bc6923-eb28-4b2a-80a6-8c46e8aac96f"],

Cell[BoxData[
 TemplateBox[{
  "Infinity", "indet", 
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0.`\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\) encountered.\"", 2, 40, 10, 33532418653045643302,
    "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.857640232310268*^9, 3.8576403727961693`*^9},
 CellLabel->
  "During evaluation of \
In[40]:=",ExpressionUUID->"979836d4-0578-433e-8a1a-ef13865b5d76"],

Cell[BoxData[
 TemplateBox[{
  "NMaximize", "nnum", 
   "\"The function value \\!\\(\\*RowBox[{\\\"Indeterminate\\\"}]\\) is not a \
number at \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"R\\\", \\\",\\\", \
\\\"\[Tau]\\\"}], \\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"0.`\\\", \\\",\\\", \\\"0.`\\\"}], \\\"}\\\"}]\\).\"", 2, 40, 11, 
   33532418653045643302, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.857640232310268*^9, 3.8576403728149157`*^9},
 CellLabel->
  "During evaluation of \
In[40]:=",ExpressionUUID->"e42af92b-4953-4197-b9c1-2331928c3661"],

Cell[BoxData[
 TemplateBox[{
  "Power", "infy", 
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \
SuperscriptBox[\\\"0.`\\\", \\\"2\\\"]]\\) encountered.\"", 2, 40, 12, 
   33532418653045643302, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.857640232310268*^9, 3.857640372830862*^9},
 CellLabel->
  "During evaluation of \
In[40]:=",ExpressionUUID->"4b7ad1de-bf76-45d2-a9ac-42d2b47e4163"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Power\\\", \\\"::\\\", \
\\\"infy\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 40, 13, 33532418653045643302, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.857640232310268*^9, 3.857640372835382*^9},
 CellLabel->
  "During evaluation of \
In[40]:=",ExpressionUUID->"6ace225e-cf9f-4ca6-8944-a2e1e239b512"],

Cell[BoxData[
 TemplateBox[{
  "Infinity", "indet", 
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0.`\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\) encountered.\"", 2, 40, 14, 33532418653045643302,
    "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.857640232310268*^9, 3.857640372840472*^9},
 CellLabel->
  "During evaluation of \
In[40]:=",ExpressionUUID->"637dd4bd-5b25-4150-8566-7e9fec95d430"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Infinity\\\", \
\\\"::\\\", \\\"indet\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 40, 15, 33532418653045643302, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.857640232310268*^9, 3.857640372844645*^9},
 CellLabel->
  "During evaluation of \
In[40]:=",ExpressionUUID->"8cd8b849-1ff7-4179-907b-a6681b4eeb51"],

Cell[BoxData[
 TemplateBox[{
  "NMaximize", "nnum", 
   "\"The function value \\!\\(\\*RowBox[{\\\"Indeterminate\\\"}]\\) is not a \
number at \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"R\\\", \\\",\\\", \
\\\"\[Tau]\\\"}], \\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"0.`\\\", \\\",\\\", \\\"0.`\\\"}], \\\"}\\\"}]\\).\"", 2, 40, 16, 
   33532418653045643302, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.857640232310268*^9, 3.857640372848434*^9},
 CellLabel->
  "During evaluation of \
In[40]:=",ExpressionUUID->"584e49a6-ec54-4575-b156-93e9180eda30"],

Cell[BoxData[
 TemplateBox[{
  "NMinimize", "nnum", 
   "\"The function value \\!\\(\\*RowBox[{\\\"Indeterminate\\\"}]\\) is not a \
number at \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"R\\\", \\\",\\\", \
\\\"\[Tau]\\\"}], \\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"0.`\\\", \\\",\\\", \\\"0.`\\\"}], \\\"}\\\"}]\\).\"", 2, 40, 17, 
   33532418653045643302, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.857640232310268*^9, 3.857640372885457*^9},
 CellLabel->
  "During evaluation of \
In[40]:=",ExpressionUUID->"c59b3578-fdc9-4425-b223-451efcc922d5"],

Cell[BoxData[
 TemplateBox[{
  "NMinimize", "nnum", 
   "\"The function value \\!\\(\\*RowBox[{\\\"Indeterminate\\\"}]\\) is not a \
number at \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"R\\\", \\\",\\\", \
\\\"\[Tau]\\\"}], \\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"0.`\\\", \\\",\\\", \\\"0.`\\\"}], \\\"}\\\"}]\\).\"", 2, 40, 18, 
   33532418653045643302, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.857640232310268*^9, 3.8576403729008713`*^9},
 CellLabel->
  "During evaluation of \
In[40]:=",ExpressionUUID->"d807f2ed-f021-404e-809f-87da1d1a4fb0"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.85764025836385*^9, 3.857640395378126*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"069caa58-d384-44eb-8056-8ea4d1591fda"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 1027},
WindowMargins->{{Automatic, 728}, {838, Automatic}},
Magnification:>1.5 Inherited,
FrontEndVersion->"12.3 for Mac OS X ARM (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"84a10a22-04f0-4c26-9d00-38e8006fec97"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 1895, 44, 280, "Input",ExpressionUUID->"f4ae406a-81df-4938-89c4-ea9e72be801f",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[2320, 61, 166, 3, 81, "Subsection",ExpressionUUID->"ce87a0c7-28b6-4f02-9a41-f0f660e5ae38"],
Cell[2489, 66, 2936, 78, 346, "Input",ExpressionUUID->"ba2b5b6d-9c6a-40e8-85ab-0111f6e25bcc",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[5462, 149, 168, 3, 81, "Subsection",ExpressionUUID->"373f6d74-7474-49db-94d0-7ce541a1b772"],
Cell[5633, 154, 18110, 487, 1723, "Input",ExpressionUUID->"13c3c36b-a8b5-4135-9a0b-8f425cc6e794",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[23780, 646, 582, 13, 81, "Subsection",ExpressionUUID->"dd9a1608-f5fc-48d9-a7fd-80e70672ebba"],
Cell[24365, 661, 2446, 62, 238, "Input",ExpressionUUID->"05dce316-62bc-43fc-9263-90e02c7b3e41"],
Cell[CellGroupData[{
Cell[26836, 727, 1603, 24, 46, "Input",ExpressionUUID->"69e1223d-bee1-4dba-80e8-aa8422048e55"],
Cell[28442, 753, 43817, 747, 602, "Output",ExpressionUUID->"8c6bd4e1-68a3-49ed-8b3f-8899ab87ef3c"]
}, Open  ]],
Cell[72274, 1503, 154, 3, 46, "Input",ExpressionUUID->"fb3eb26d-095a-4a2b-b956-3b3dca7c43a3"],
Cell[CellGroupData[{
Cell[72453, 1510, 172, 3, 67, "Subsubsection",ExpressionUUID->"c9bfcd60-1b44-4af5-916b-e36854de648d"],
Cell[72628, 1515, 70, 0, 172, "Input",ExpressionUUID->"59efe5f0-4006-4790-abb7-e08bfd63dd06"]
}, Closed]],
Cell[CellGroupData[{
Cell[72735, 1520, 178, 3, 53, "Subsubsection",ExpressionUUID->"c65198e5-25f9-4707-a2e5-a6c60da2a120"],
Cell[72916, 1525, 2244, 60, 238, "Input",ExpressionUUID->"53a6d7ff-1642-4345-996d-89dc651b1a90"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75197, 1590, 414, 12, 68, "Subsubsection",ExpressionUUID->"c4287666-1f6c-4fc1-8afe-7295f114067c"],
Cell[75614, 1604, 1212, 19, 46, "Input",ExpressionUUID->"03dd2fdb-4e93-42a8-bcea-51fa0cde2334"],
Cell[CellGroupData[{
Cell[76851, 1627, 256, 5, 46, "Input",ExpressionUUID->"f5be5c10-3627-43c9-9ccb-d9cc201fa5df"],
Cell[77110, 1634, 79197, 1734, 3344, "Output",ExpressionUUID->"4a8487b1-58aa-4a62-aae9-d35181593c3f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[156344, 3373, 3428, 79, 388, "Input",ExpressionUUID->"16bb44bf-3383-466a-99ea-35834f47d0a2"],
Cell[159775, 3454, 2626, 52, 764, "Output",ExpressionUUID->"798023cb-9492-4c47-a82d-1accb62e5943"],
Cell[162404, 3508, 537, 10, 41, "Message",ExpressionUUID->"bc7a1cf8-b8bf-4d16-be9c-304f1cc228f4"],
Cell[162944, 3520, 324, 7, 41, "Message",ExpressionUUID->"781c7fc0-1623-4b4c-8494-65327829e01c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[163329, 3534, 343, 10, 81, "Subsection",ExpressionUUID->"e6f08058-f070-4739-914d-5d6681279154"],
Cell[CellGroupData[{
Cell[163697, 3548, 53107, 1240, 295, "Input",ExpressionUUID->"c2e4c724-2f73-48e1-afd5-499a14c853aa"],
Cell[216807, 4790, 223563, 3690, 631, "Output",ExpressionUUID->"8bfb379b-b0f4-4e50-a3b3-bb3d370ef177"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[440419, 8486, 302, 6, 81, "Subsection",ExpressionUUID->"874450d8-b603-4bae-af43-9c6e4fc26c41"],
Cell[CellGroupData[{
Cell[440746, 8496, 445, 10, 68, "Subsubsection",ExpressionUUID->"ca09ff30-f4c2-4aca-8ef3-6d988b5594fa"],
Cell[CellGroupData[{
Cell[441216, 8510, 1134, 29, 140, "Input",ExpressionUUID->"2d52b3dd-cbed-4d98-8c96-478d6caa9818"],
Cell[442353, 8541, 736, 22, 70, "Output",ExpressionUUID->"cddb0a97-043f-4f62-b24b-d04ea68f4479"]
}, Open  ]],
Cell[CellGroupData[{
Cell[443126, 8568, 944, 24, 119, "Input",ExpressionUUID->"f12881a4-3bca-4d30-ab00-640403848fae"],
Cell[444073, 8594, 148, 2, 52, "Output",ExpressionUUID->"92ad4290-fd8e-48b3-a1f4-7802aa3c072e"],
Cell[444224, 8598, 2074, 65, 84, "Output",ExpressionUUID->"0f37b6e0-331c-45c6-9476-0a99eddd1216"],
Cell[446301, 8665, 2100, 66, 84, "Output",ExpressionUUID->"3c06d2df-a5bd-4cc2-abb2-2a4d137d435c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[448450, 8737, 170, 3, 67, "Subsubsection",ExpressionUUID->"2e1e441f-4dd1-45c6-a97f-11361f256854"],
Cell[448623, 8742, 15335, 365, 1157, "Input",ExpressionUUID->"666a8233-4713-41ea-b515-e3251474a3fe",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[463983, 9111, 327, 7, 46, "Input",ExpressionUUID->"bba0eae2-0b15-4329-97eb-4b9f8181a90f"],
Cell[464313, 9120, 170, 2, 52, "Output",ExpressionUUID->"436242c9-24ca-461d-b9f7-02e3e8757be4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[464532, 9128, 359, 5, 67, "Subsubsection",ExpressionUUID->"f3cb02e9-3240-4e6b-b023-ea65ab069492"],
Cell[CellGroupData[{
Cell[464916, 9137, 919, 22, 78, "Input",ExpressionUUID->"6300ba23-46fc-4530-b438-3cd7539f2535"],
Cell[465838, 9161, 901, 28, 73, "Output",ExpressionUUID->"f5aa7f06-3eab-48bd-8854-bad7a7d26761"]
}, Open  ]],
Cell[CellGroupData[{
Cell[466776, 9194, 1070, 28, 199, "Input",ExpressionUUID->"2e961270-79a8-4074-a9ce-7ba269345804"],
Cell[467849, 9224, 673, 22, 73, "Output",ExpressionUUID->"844688c4-4a34-4398-8bcc-e43a5bc0c78a"],
Cell[468525, 9248, 710, 23, 73, "Output",ExpressionUUID->"12c9f17c-a344-4cd2-b25d-6e5b23c9d209"],
Cell[469238, 9273, 151, 2, 52, "Output",ExpressionUUID->"db092d75-36ea-43f2-a7ee-1ddd3009d764"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[469438, 9281, 222, 4, 67, "Subsubsection",ExpressionUUID->"d5749549-70db-4390-b3f6-009330d3d482"],
Cell[469663, 9287, 2338, 56, 214, "Input",ExpressionUUID->"261cf22a-0fec-4d06-acb4-0e64d1fe4c12",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[472026, 9347, 352, 7, 46, "Input",ExpressionUUID->"0ffeb686-e535-4771-bf40-a3acf8e91eb0"],
Cell[472381, 9356, 166, 2, 52, "Output",ExpressionUUID->"c3fa775e-983e-4c23-84b1-a64006991f27"]
}, Open  ]],
Cell[472562, 9361, 1268, 34, 195, "Input",ExpressionUUID->"e4036b06-6426-4fe1-a751-67d3b4d57d5e",
 InitializationCell->True],
Cell[473833, 9397, 1890, 57, 269, "Input",ExpressionUUID->"de6e2aa0-1ee6-49cb-90e8-964a4e416111"],
Cell[CellGroupData[{
Cell[475748, 9458, 395, 9, 46, "Input",ExpressionUUID->"6fd63ed4-8607-4517-bd10-ae85b6fad284"],
Cell[476146, 9469, 236, 6, 52, "Output",ExpressionUUID->"307a84a3-5673-4557-9382-03e5c1ccfea4"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[476443, 9482, 162, 3, 101, "Section",ExpressionUUID->"6400e7a7-62b9-4c1a-8dea-47230ba1548d"],
Cell[476608, 9487, 853, 20, 109, "Input",ExpressionUUID->"bf79cedb-c1f2-4f0c-9112-8cb8b148f522"],
Cell[CellGroupData[{
Cell[477486, 9511, 287, 6, 46, "Input",ExpressionUUID->"7bcbc6f6-fc40-4b83-979e-86718e20a02b"],
Cell[477776, 9519, 296, 7, 52, "Output",ExpressionUUID->"c6a8f59a-5e9a-4553-9973-ec309048d106"]
}, Open  ]],
Cell[478087, 9529, 87, 0, 46, "Input",ExpressionUUID->"3a1ec449-d2e3-4049-891b-735626cff519"],
Cell[CellGroupData[{
Cell[478199, 9533, 198, 4, 46, "Input",ExpressionUUID->"0824d3c5-208c-4f84-abef-eeb3aa4c97c0"],
Cell[478400, 9539, 399, 12, 182, "Print",ExpressionUUID->"da7d2916-9411-4a3c-bc02-84a6efd2e30c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[478848, 9557, 161, 3, 101, "Section",ExpressionUUID->"793e17f9-d94b-4b0e-b7e7-f9a89a816cd4"],
Cell[CellGroupData[{
Cell[479034, 9564, 179, 3, 46, "Input",ExpressionUUID->"4d4e9c6d-aa63-4f3e-84ca-3ae919b10423"],
Cell[479216, 9569, 8135, 206, 190, "Output",ExpressionUUID->"02e66786-c6bc-4218-81be-020b757001e2"]
}, Open  ]],
Cell[487366, 9778, 10725, 317, 1030, "Input",ExpressionUUID->"aedaa0c8-e4e4-4046-9189-c6db1a4ee866"],
Cell[498094, 10097, 1486, 39, 211, "Input",ExpressionUUID->"99db6e36-01dd-42f6-b7d8-73f24bb00edf"],
Cell[CellGroupData[{
Cell[499605, 10140, 384, 8, 78, "Input",ExpressionUUID->"e047c593-d4b8-415b-9ce7-f947194876cc"],
Cell[499992, 10150, 200, 4, 52, "Output",ExpressionUUID->"a8c3e2db-3eac-49b2-a456-1cbd4200f209"],
Cell[500195, 10156, 213, 4, 52, "Output",ExpressionUUID->"33718e84-4aa3-4950-b6b9-858380941258"]
}, Open  ]],
Cell[CellGroupData[{
Cell[500445, 10165, 413, 8, 46, "Input",ExpressionUUID->"24ec997a-3eda-4ff1-85d0-fce9da443629"],
Cell[500861, 10175, 590, 16, 52, "Output",ExpressionUUID->"632ce342-b2f1-4142-8ef7-68da9d0be8be"]
}, Open  ]],
Cell[501466, 10194, 619, 19, 142, "Input",ExpressionUUID->"1bb4563e-767a-46f4-bcb8-a58533ec27e8"],
Cell[502088, 10215, 212, 6, 46, "Input",ExpressionUUID->"d0e946b0-1462-48c2-87cf-010dcb07db94"],
Cell[502303, 10223, 161, 3, 46, "Input",ExpressionUUID->"54b0ea31-e8a2-4b05-b5cc-95c5e0026d78"],
Cell[CellGroupData[{
Cell[502489, 10230, 370, 7, 46, "Input",ExpressionUUID->"df239728-0b03-41f3-b6ca-a7ee832651d6"],
Cell[502862, 10239, 232, 5, 52, "Output",ExpressionUUID->"fdbf3ea3-232a-4322-8c88-8338dbccaa3b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[503131, 10249, 731, 16, 46, "Input",ExpressionUUID->"0907e1e7-2c41-4930-8fa6-48fcf256c661"],
Cell[503865, 10267, 426, 10, 57, "Message",ExpressionUUID->"ea454216-5021-4710-ab20-8ab9b266312e"],
Cell[504294, 10279, 428, 10, 41, "Message",ExpressionUUID->"6227840b-fa10-4a94-9b3b-434ea89f8e18"],
Cell[504725, 10291, 424, 10, 57, "Message",ExpressionUUID->"99bc6923-eb28-4b2a-80a6-8c46e8aac96f"],
Cell[505152, 10303, 431, 10, 41, "Message",ExpressionUUID->"979836d4-0578-433e-8a1a-ef13865b5d76"],
Cell[505586, 10315, 593, 12, 41, "Message",ExpressionUUID->"e42af92b-4953-4197-b9c1-2331928c3661"],
Cell[506182, 10329, 425, 10, 57, "Message",ExpressionUUID->"4b7ad1de-bf76-45d2-a9ac-42d2b47e4163"],
Cell[506610, 10341, 472, 10, 41, "Message",ExpressionUUID->"6ace225e-cf9f-4ca6-8944-a2e1e239b512"],
Cell[507085, 10353, 429, 10, 41, "Message",ExpressionUUID->"637dd4bd-5b25-4150-8566-7e9fec95d430"],
Cell[507517, 10365, 476, 10, 41, "Message",ExpressionUUID->"8cd8b849-1ff7-4179-907b-a6681b4eeb51"],
Cell[507996, 10377, 591, 12, 41, "Message",ExpressionUUID->"584e49a6-ec54-4575-b156-93e9180eda30"],
Cell[508590, 10391, 591, 12, 41, "Message",ExpressionUUID->"c59b3578-fdc9-4425-b223-451efcc922d5"],
Cell[509184, 10405, 593, 12, 41, "Message",ExpressionUUID->"d807f2ed-f021-404e-809f-87da1d1a4fb0"],
Cell[509780, 10419, 177, 2, 52, "Output",ExpressionUUID->"069caa58-d384-44eb-8056-8ea4d1591fda"]
}, Open  ]]
}, Open  ]]
}
]
*)

